

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Nov 23 20:07:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 23/03/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4620 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataCOMRAM
    90   0025BA                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _lcd_1
    94   0025BA  02                 	db	2
    95   0025BB  0A                 	db	10
    96   0025BC  12                 	db	18
    97   0025BD  1A                 	db	26
    98   0025BE  22                 	db	34
    99   0025BF  2A                 	db	42
   100                           
   101                           	psect	idataBANK0
   102   002538                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _port_registers
   106   002538  80                 	db	128
   107   002539  0F                 	db	15
   108   00253A  81                 	db	129
   109   00253B  0F                 	db	15
   110   00253C  82                 	db	130
   111   00253D  0F                 	db	15
   112   00253E  83                 	db	131
   113   00253F  0F                 	db	15
   114   002540  84                 	db	132
   115   002541  0F                 	db	15
   116                           
   117                           ;initializer for _lat_registers
   118   002542  89                 	db	137
   119   002543  0F                 	db	15
   120   002544  8A                 	db	138
   121   002545  0F                 	db	15
   122   002546  8B                 	db	139
   123   002547  0F                 	db	15
   124   002548  8C                 	db	140
   125   002549  0F                 	db	15
   126   00254A  8D                 	db	141
   127   00254B  0F                 	db	15
   128                           
   129                           ;initializer for _tris_registers
   130   00254C  92                 	db	146
   131   00254D  0F                 	db	15
   132   00254E  93                 	db	147
   133   00254F  0F                 	db	15
   134   002550  94                 	db	148
   135   002551  0F                 	db	15
   136   002552  95                 	db	149
   137   002553  0F                 	db	15
   138   002554  96                 	db	150
   139   002555  0F                 	db	15
   140                           
   141                           ;initializer for main@F3193
   142   002556  0E                 	db	14
   143   002557  0A                 	db	10
   144   002558  11                 	db	17
   145   002559  11                 	db	17
   146   00255A  11                 	db	17
   147   00255B  1F                 	db	31
   148   00255C  1F                 	db	31
   149   00255D  00                 	db	0
   150                           
   151                           ;initializer for main@F3191
   152   00255E  0E                 	db	14
   153   00255F  0A                 	db	10
   154   002560  11                 	db	17
   155   002561  11                 	db	17
   156   002562  11                 	db	17
   157   002563  11                 	db	17
   158   002564  1F                 	db	31
   159   002565  00                 	db	0
   160                           
   161                           ;initializer for _lcd_2
   162   002566  32                 	db	50
   163   002567  3A                 	db	58
   164   002568  03                 	db	3
   165   002569  0B                 	db	11
   166   00256A  13                 	db	19
   167   00256B  1B                 	db	27
   168   00256C  23                 	db	35
   169   00256D  2B                 	db	43
   170   00256E  33                 	db	51
   171   00256F  3B                 	db	59
   172                           
   173                           	psect	idataBANK1
   174   002570                     __pidataBANK1:
   175                           	callstack 0
   176                           
   177                           ;initializer for _keypad_btn_values
   178   002570  37                 	db	55
   179   002571  00                 	db	0
   180   002572  00                 	db	0
   181   002573  38                 	db	56
   182   002574  00                 	db	0
   183   002575  00                 	db	0
   184   002576  39                 	db	57
   185   002577  00                 	db	0
   186   002578  00                 	db	0
   187   002579  2F                 	db	47
   188   00257A  00                 	db	0
   189   00257B  00                 	db	0
   190   00257C  34                 	db	52
   191   00257D  00                 	db	0
   192   00257E  00                 	db	0
   193   00257F  35                 	db	53
   194   002580  00                 	db	0
   195   002581  00                 	db	0
   196   002582  36                 	db	54
   197   002583  00                 	db	0
   198   002584  00                 	db	0
   199   002585  2A                 	db	42
   200   002586  00                 	db	0
   201   002587  00                 	db	0
   202   002588  31                 	db	49
   203   002589  00                 	db	0
   204   00258A  00                 	db	0
   205   00258B  32                 	db	50
   206   00258C  00                 	db	0
   207   00258D  00                 	db	0
   208   00258E  33                 	db	51
   209   00258F  00                 	db	0
   210   002590  00                 	db	0
   211   002591  2B                 	db	43
   212   002592  00                 	db	0
   213   002593  00                 	db	0
   214   002594  23                 	db	35
   215   002595  00                 	db	0
   216   002596  00                 	db	0
   217   002597  30                 	db	48
   218   002598  00                 	db	0
   219   002599  00                 	db	0
   220   00259A  3D                 	db	61
   221   00259B  00                 	db	0
   222   00259C  00                 	db	0
   223   00259D  2D                 	db	45
   224   00259E  00                 	db	0
   225   00259F  00                 	db	0
   226   000000                     _PORTE	set	3972
   227   000000                     _PORTD	set	3971
   228   000000                     _PORTC	set	3970
   229   000000                     _PORTB	set	3969
   230   000000                     _PORTA	set	3968
   231   000000                     _LATA	set	3977
   232   000000                     _TRISA	set	3986
   233   000000                     _TRISE	set	3990
   234   000000                     _TRISD	set	3989
   235   000000                     _TRISC	set	3988
   236   000000                     _TRISB	set	3987
   237   000000                     _LATE	set	3981
   238   000000                     _LATD	set	3980
   239   000000                     _LATC	set	3979
   240   000000                     _LATB	set	3978
   241                           
   242                           	psect	smallconst
   243   001000                     __psmallconst:
   244                           	callstack 0
   245   001000  00                 	db	0
   246   001001  45                 	db	69	;'E'
   247   001002  6D                 	db	109	;'m'
   248   001003  62                 	db	98	;'b'
   249   001004  65                 	db	101	;'e'
   250   001005  64                 	db	100	;'d'
   251   001006  64                 	db	100	;'d'
   252   001007  65                 	db	101	;'e'
   253   001008  64                 	db	100	;'d'
   254   001009  20                 	db	32
   255   00100A  43                 	db	67	;'C'
   256   00100B  6F                 	db	111	;'o'
   257   00100C  75                 	db	117	;'u'
   258   00100D  72                 	db	114	;'r'
   259   00100E  73                 	db	115	;'s'
   260   00100F  65                 	db	101	;'e'
   261   001010  00                 	db	0
   262   001011  48                 	db	72	;'H'
   263   001012  65                 	db	101	;'e'
   264   001013  6C                 	db	108	;'l'
   265   001014  6C                 	db	108	;'l'
   266   001015  6F                 	db	111	;'o'
   267   001016  20                 	db	32
   268   001017  41                 	db	65	;'A'
   269   001018  6C                 	db	108	;'l'
   270   001019  6C                 	db	108	;'l'
   271   00101A  00                 	db	0
   272   00101B  20                 	db	32
   273   00101C  20                 	db	32
   274   00101D  20                 	db	32
   275   00101E  20                 	db	32
   276   00101F  20                 	db	32
   277   001020  20                 	db	32
   278   001021  20                 	db	32
   279   001022  20                 	db	32
   280   001023  00                 	db	0
   281   001024  4C                 	db	76	;'L'
   282   001025  6F                 	db	111	;'o'
   283   001026  61                 	db	97	;'a'
   284   001027  64                 	db	100	;'d'
   285   001028  69                 	db	105	;'i'
   286   001029  6E                 	db	110	;'n'
   287   00102A  67                 	db	103	;'g'
   288   00102B  00                 	db	0
   289   00102C                     STR_6:
   290   00102C  2F                 	db	47
   291   00102D  30                 	db	48	;'0'
   292   00102E  00                 	db	0
   293   00102F                     STR_7:
   294   00102F  25                 	db	37
   295   001030  69                 	db	105	;'i'
   296   001031  00                 	db	0
   297   001032  2E                 	db	46
   298   001033  00                 	db	0
   299   001034  00                 	db	0	; dummy byte at the end
   300   000000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   001FBA                     __pcinit:
   305                           	callstack 0
   306   001FBA                     start_initialization:
   307                           	callstack 0
   308   001FBA                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK1 (48 bytes)
   312                           ; load TBLPTR registers with __pidataBANK1
   313   001FBA  0E70               	movlw	low __pidataBANK1
   314   001FBC  6EF6               	movwf	tblptrl,c
   315   001FBE  0E25               	movlw	high __pidataBANK1
   316   001FC0  6EF7               	movwf	tblptrh,c
   317   001FC2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   318   001FC4  6EF8               	movwf	tblptru,c
   319   001FC6  EE01  F000         	lfsr	0,__pdataBANK1
   320   001FCA  EE10 F030          	lfsr	1,48
   321   001FCE                     copy_data0:
   322   001FCE  0009               	tblrd		*+
   323   001FD0  CFF5 FFEE          	movff	tablat,postinc0
   324   001FD4  50E5               	movf	postdec1,w,c
   325   001FD6  50E1               	movf	fsr1l,w,c
   326   001FD8  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to BANK0 (56 bytes)
   329                           ; load TBLPTR registers with __pidataBANK0
   330   001FDA  0E38               	movlw	low __pidataBANK0
   331   001FDC  6EF6               	movwf	tblptrl,c
   332   001FDE  0E25               	movlw	high __pidataBANK0
   333   001FE0  6EF7               	movwf	tblptrh,c
   334   001FE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   335   001FE4  6EF8               	movwf	tblptru,c
   336   001FE6  EE00  F080         	lfsr	0,__pdataBANK0
   337   001FEA  EE10 F038          	lfsr	1,56
   338   001FEE                     copy_data1:
   339   001FEE  0009               	tblrd		*+
   340   001FF0  CFF5 FFEE          	movff	tablat,postinc0
   341   001FF4  50E5               	movf	postdec1,w,c
   342   001FF6  50E1               	movf	fsr1l,w,c
   343   001FF8  E1FA               	bnz	copy_data1
   344                           
   345                           ; Initialize objects allocated to COMRAM (6 bytes)
   346                           ; load TBLPTR registers with __pidataCOMRAM
   347   001FFA  0EBA               	movlw	low __pidataCOMRAM
   348   001FFC  6EF6               	movwf	tblptrl,c
   349   001FFE  0E25               	movlw	high __pidataCOMRAM
   350   002000  6EF7               	movwf	tblptrh,c
   351   002002  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   352   002004  6EF8               	movwf	tblptru,c
   353   002006  EE00  F07A         	lfsr	0,__pdataCOMRAM
   354   00200A  EE10 F006          	lfsr	1,6
   355   00200E                     copy_data2:
   356   00200E  0009               	tblrd		*+
   357   002010  CFF5 FFEE          	movff	tablat,postinc0
   358   002014  50E5               	movf	postdec1,w,c
   359   002016  50E1               	movf	fsr1l,w,c
   360   002018  E1FA               	bnz	copy_data2
   361                           
   362                           ; Clear objects allocated to BANK0 (32 bytes)
   363   00201A  EE00  F0B8         	lfsr	0,__pbssBANK0
   364   00201E  0E20               	movlw	32
   365   002020                     clear_0:
   366   002020  6AEE               	clrf	postinc0,c
   367   002022  06E8               	decf	wreg,f,c
   368   002024  E1FD               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to COMRAM (12 bytes)
   371   002026  EE00  F06E         	lfsr	0,__pbssCOMRAM
   372   00202A  0E0C               	movlw	12
   373   00202C                     clear_1:
   374   00202C  6AEE               	clrf	postinc0,c
   375   00202E  06E8               	decf	wreg,f,c
   376   002030  E1FD               	bnz	clear_1
   377   002032                     end_of_initialization:
   378                           	callstack 0
   379   002032                     __end_of__initialization:
   380                           	callstack 0
   381   002032  0100               	movlb	0
   382   002034  EF64  F00D         	goto	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMRAM
   385   00006E                     __pbssCOMRAM:
   386                           	callstack 0
   387   00006E                     _width:
   388                           	callstack 0
   389   00006E                     	ds	2
   390   000070                     _prec:
   391                           	callstack 0
   392   000070                     	ds	2
   393   000072                     _flags:
   394                           	callstack 0
   395   000072                     	ds	1
   396   000073                     Relay_Turn_OFF@F3052:
   397                           	callstack 0
   398   000073                     	ds	1
   399   000074                     Relay_Turn_ON@F3047:
   400                           	callstack 0
   401   000074                     	ds	1
   402   000075                     Relay_Initialize@F3042:
   403                           	callstack 0
   404   000075                     	ds	1
   405   000076                     led_toggle@F3063:
   406                           	callstack 0
   407   000076                     	ds	1
   408   000077                     led_turn_off@F3058:
   409                           	callstack 0
   410   000077                     	ds	1
   411   000078                     led_turn_on@F3053:
   412                           	callstack 0
   413   000078                     	ds	1
   414   000079                     led_initialize@F3048:
   415                           	callstack 0
   416   000079                     	ds	1
   417                           
   418                           	psect	dataCOMRAM
   419   00007A                     __pdataCOMRAM:
   420                           	callstack 0
   421   00007A                     _lcd_1:
   422                           	callstack 0
   423   00007A                     	ds	6
   424                           
   425                           	psect	bssBANK0
   426   0000B8                     __pbssBANK0:
   427                           	callstack 0
   428   0000B8                     _dbuf:
   429                           	callstack 0
   430   0000B8                     	ds	32
   431                           
   432                           	psect	dataBANK0
   433   000080                     __pdataBANK0:
   434                           	callstack 0
   435   000080                     _port_registers:
   436                           	callstack 0
   437   000080                     	ds	10
   438   00008A                     _lat_registers:
   439                           	callstack 0
   440   00008A                     	ds	10
   441   000094                     _tris_registers:
   442                           	callstack 0
   443   000094                     	ds	10
   444   00009E                     main@F3193:
   445                           	callstack 0
   446   00009E                     	ds	8
   447   0000A6                     main@F3191:
   448                           	callstack 0
   449   0000A6                     	ds	8
   450   0000AE                     _lcd_2:
   451                           	callstack 0
   452   0000AE                     	ds	10
   453                           
   454                           	psect	dataBANK1
   455   000100                     __pdataBANK1:
   456                           	callstack 0
   457   000100                     _keypad_btn_values:
   458                           	callstack 0
   459   000100                     	ds	48
   460                           
   461                           	psect	cstackCOMRAM
   462   000001                     __pcstackCOMRAM:
   463                           	callstack 0
   464   000001                     ?___awdiv:
   465                           	callstack 0
   466   000001                     ?___awmod:
   467                           	callstack 0
   468   000001                     gpio_pin_direction_intialize@pin_config:
   469                           	callstack 0
   470   000001                     gpio_pin_write_logic@pin_config:
   471                           	callstack 0
   472   000001                     ___awdiv@dividend:
   473                           	callstack 0
   474   000001                     ___awmod@dividend:
   475                           	callstack 0
   476   000001                     memset@dest:
   477                           	callstack 0
   478   000001                     fputc@c:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x0
   482   000001                     	ds	2
   483   000003                     ??_gpio_pin_direction_intialize:
   484   000003                     gpio_pin_write_logic@logic:
   485                           	callstack 0
   486   000003                     ___awdiv@divisor:
   487                           	callstack 0
   488   000003                     ___awmod@divisor:
   489                           	callstack 0
   490   000003                     memset@c:
   491                           	callstack 0
   492   000003                     fputc@fp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496   000003                     	ds	1
   497   000004                     ??_gpio_pin_write_logic:
   498                           
   499                           ; 1 bytes @ 0x3
   500   000004                     	ds	1
   501   000005                     ??_fputc:
   502   000005                     ___awdiv@counter:
   503                           	callstack 0
   504   000005                     ___awmod@counter:
   505                           	callstack 0
   506   000005                     memset@n:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x4
   510   000005                     	ds	1
   511   000006                     ___awdiv@sign:
   512                           	callstack 0
   513   000006                     ___awmod@sign:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x5
   517   000006                     	ds	1
   518   000007                     ??_memset:
   519   000007                     ?_abs:
   520                           	callstack 0
   521   000007                     ___awdiv@quotient:
   522                           	callstack 0
   523   000007                     abs@a:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x6
   527   000007                     	ds	2
   528   000009                     ??_abs:
   529   000009                     gpio_pin_direction_intialize@ret:
   530                           	callstack 0
   531   000009                     memset@k:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x8
   535   000009                     	ds	1
   536   00000A                     gpio_pin_write_logic@ret:
   537                           	callstack 0
   538   00000A                     fputs@s:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x9
   542   00000A                     	ds	1
   543   00000B                     gpio_pin_intialize@pin_config:
   544                           	callstack 0
   545   00000B                     send_4bit_data@lcd:
   546                           	callstack 0
   547   00000B                     lcd_4bit_send_enable_signal@lcd:
   548                           	callstack 0
   549   00000B                     lcd_8bit_send_enable_signal@lcd:
   550                           	callstack 0
   551   00000B                     memset@s:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xA
   555   00000B                     	ds	1
   556   00000C                     fputs@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xB
   560   00000C                     	ds	1
   561   00000D                     ??_gpio_pin_intialize:
   562   00000D                     ??_lcd_4bit_send_enable_signal:
   563   00000D                     ??_lcd_8bit_send_enable_signal:
   564   00000D                     send_4bit_data@command:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0xC
   568   00000D                     	ds	1
   569   00000E                     gpio_pin_intialize@ret:
   570                           	callstack 0
   571   00000E                     send_4bit_data@ret:
   572                           	callstack 0
   573   00000E                     lcd_4bit_send_enable_signal@ret:
   574                           	callstack 0
   575   00000E                     lcd_8bit_send_enable_signal@ret:
   576                           	callstack 0
   577   00000E                     fputs@c:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0xD
   581   00000E                     	ds	1
   582   00000F                     lcd_4_bit_send_command@lcd:
   583                           	callstack 0
   584   00000F                     lcd_4_bit_send_char_data@lcd:
   585                           	callstack 0
   586   00000F                     lcd_8_bit_send_command@lcd:
   587                           	callstack 0
   588   00000F                     lcd_8_bit_send_char_data@lcd:
   589                           	callstack 0
   590   00000F                     fputs@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0xE
   594   00000F                     	ds	2
   595   000011                     lcd_4_bit_send_command@command:
   596                           	callstack 0
   597   000011                     lcd_4_bit_send_char_data@data:
   598                           	callstack 0
   599   000011                     lcd_8_bit_send_command@command:
   600                           	callstack 0
   601   000011                     lcd_8_bit_send_char_data@data:
   602                           	callstack 0
   603   000011                     pad@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x10
   607   000011                     	ds	1
   608   000012                     ??_lcd_8_bit_send_command:
   609   000012                     ??_lcd_8_bit_send_char_data:
   610   000012                     lcd_4_bit_send_command@ret:
   611                           	callstack 0
   612   000012                     lcd_4_bit_send_char_data@ret:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x11
   616   000012                     	ds	1
   617   000013                     lcd_4_bit_initialize@lcd:
   618                           	callstack 0
   619   000013                     lcd_4bit_set_cursor@lcd:
   620                           	callstack 0
   621   000013                     pad@buf:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x12
   625   000013                     	ds	2
   626   000015                     ??_lcd_4_bit_initialize:
   627   000015                     lcd_4bit_set_cursor@row:
   628                           	callstack 0
   629   000015                     pad@p:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633   000015                     	ds	1
   634   000016                     lcd_8_bit_send_command@ret:
   635                           	callstack 0
   636   000016                     lcd_8_bit_send_char_data@ret:
   637                           	callstack 0
   638   000016                     lcd_4bit_set_cursor@coulmn:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x15
   642   000016                     	ds	1
   643   000017                     ??_lcd_4bit_set_cursor:
   644   000017                     ??_pad:
   645   000017                     lcd_4_bit_initialize@l_data_counter:
   646                           	callstack 0
   647   000017                     lcd_8_bit_send_command@l_command_counter:
   648                           	callstack 0
   649   000017                     lcd_8_bit_send_char_data@l_data_counter:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x16
   653   000017                     	ds	1
   654   000018                     lcd_4_bit_initialize@ret:
   655                           	callstack 0
   656   000018                     lcd_8_bit_initialize@lcd:
   657                           	callstack 0
   658   000018                     lcd_8bit_set_cursor@lcd:
   659                           	callstack 0
   660   000018                     pad@i:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664   000018                     	ds	1
   665   000019                     lcd_4bit_set_cursor@ret:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x18
   669   000019                     	ds	1
   670   00001A                     ??_lcd_8_bit_initialize:
   671   00001A                     lcd_8bit_set_cursor@row:
   672                           	callstack 0
   673   00001A                     lcd_4_bit_send_string_position@lcd:
   674                           	callstack 0
   675   00001A                     pad@w:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x19
   679   00001A                     	ds	1
   680   00001B                     lcd_8bit_set_cursor@coulmn:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x1A
   684   00001B                     	ds	1
   685   00001C                     ??_lcd_8bit_set_cursor:
   686   00001C                     lcd_8_bit_initialize@l_data_counter:
   687                           	callstack 0
   688   00001C                     lcd_4_bit_send_string_position@str:
   689                           	callstack 0
   690   00001C                     dtoa@fp:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x1B
   694   00001C                     	ds	1
   695   00001D                     lcd_8_bit_initialize@ret:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x1C
   699   00001D                     	ds	1
   700   00001E                     lcd_4_bit_send_string_position@row:
   701                           	callstack 0
   702   00001E                     lcd_8bit_set_cursor@ret:
   703                           	callstack 0
   704   00001E                     dtoa@d:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x1D
   708   00001E                     	ds	1
   709   00001F                     lcd_4_bit_send_string_position@colum:
   710                           	callstack 0
   711   00001F                     lcd_8_bit_send_string_position@lcd:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x1E
   715   00001F                     	ds	1
   716   000020                     lcd_4_bit_send_string_position@ret:
   717                           	callstack 0
   718   000020                     _dtoa$1399:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x1F
   722   000020                     	ds	1
   723   000021                     lcd_4_bit_send_custom_char@lcd:
   724                           	callstack 0
   725   000021                     lcd_8_bit_send_string_position@str:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x20
   729   000021                     	ds	1
   730   000022                     dtoa@p:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x21
   734   000022                     	ds	1
   735   000023                     lcd_8_bit_send_string_position@row:
   736                           	callstack 0
   737   000023                     lcd_4_bit_send_custom_char@chr:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x22
   741   000023                     	ds	1
   742   000024                     lcd_8_bit_send_string_position@colum:
   743                           	callstack 0
   744   000024                     dtoa@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x23
   748   000024                     	ds	1
   749   000025                     lcd_4_bit_send_custom_char@row:
   750                           	callstack 0
   751   000025                     lcd_8_bit_send_string_position@ret:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x24
   755   000025                     	ds	1
   756   000026                     lcd_4_bit_send_custom_char@colum:
   757                           	callstack 0
   758   000026                     lcd_8_bit_send_custom_char@lcd:
   759                           	callstack 0
   760   000026                     dtoa@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x25
   764   000026                     	ds	1
   765   000027                     lcd_4_bit_send_custom_char@mm_pos:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x26
   769   000027                     	ds	1
   770   000028                     ??_lcd_4_bit_send_custom_char:
   771   000028                     dtoa@s:
   772                           	callstack 0
   773   000028                     lcd_8_bit_send_custom_char@chr:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x27
   777   000028                     	ds	1
   778   000029                     vfpfcnvrt@fp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x28
   782   000029                     	ds	1
   783   00002A                     lcd_4_bit_send_custom_char@ret:
   784                           	callstack 0
   785   00002A                     lcd_8_bit_send_custom_char@row:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x29
   789   00002A                     	ds	1
   790   00002B                     lcd_4_bit_send_custom_char@lcd_Counter:
   791                           	callstack 0
   792   00002B                     lcd_8_bit_send_custom_char@colum:
   793                           	callstack 0
   794   00002B                     vfpfcnvrt@fmt:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x2A
   798   00002B                     	ds	1
   799   00002C                     lcd_8_bit_send_custom_char@mm_pos:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x2B
   803   00002C                     	ds	1
   804   00002D                     ??_lcd_8_bit_send_custom_char:
   805   00002D                     vfpfcnvrt@ap:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x2C
   809   00002D                     	ds	2
   810   00002F                     ??_vfpfcnvrt:
   811   00002F                     lcd_8_bit_send_custom_char@ret:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x2E
   815   00002F                     	ds	1
   816   000030                     lcd_8_bit_send_custom_char@lcd_Counter:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x2F
   820   000030                     	ds	1
   821   000031                     vfpfcnvrt@convarg:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x30
   825   000031                     	ds	4
   826   000035                     vfpfcnvrt@cp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x34
   830   000035                     	ds	2
   831   000037                     ?_vfprintf:
   832                           	callstack 0
   833   000037                     vfprintf@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x36
   837   000037                     	ds	2
   838   000039                     vfprintf@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x38
   842   000039                     	ds	2
   843   00003B                     vfprintf@ap:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x3A
   847   00003B                     	ds	2
   848   00003D                     vfprintf@cfmt:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x3C
   852   00003D                     	ds	2
   853   00003F                     ?_sprintf:
   854                           	callstack 0
   855   00003F                     sprintf@s:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x3E
   859   00003F                     	ds	2
   860   000041                     sprintf@fmt:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x40
   864   000041                     	ds	4
   865   000045                     sprintf@ap:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x44
   869   000045                     	ds	2
   870   000047                     sprintf@f:
   871                           	callstack 0
   872                           
   873                           ; 12 bytes @ 0x46
   874   000047                     	ds	12
   875   000053                     convert_uint_8_string@str:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x52
   879   000053                     	ds	2
   880   000055                     convert_uint_8_string@value:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x54
   884   000055                     	ds	1
   885   000056                     convert_uint_8_string@ret:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x55
   889   000056                     	ds	1
   890   000057                     ??_main:
   891                           
   892                           ; 1 bytes @ 0x56
   893   000057                     	ds	2
   894   000059                     main@custom_1:
   895                           	callstack 0
   896                           
   897                           ; 8 bytes @ 0x58
   898   000059                     	ds	8
   899   000061                     main@custom_2:
   900                           	callstack 0
   901                           
   902                           ; 8 bytes @ 0x60
   903   000061                     	ds	8
   904   000069                     main@lcd_text:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x68
   908   000069                     	ds	4
   909   00006D                     main@lcd_Counter:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x6C
   913   00006D                     	ds	1
   914                           
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 7 in file "application.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  custom_2        8   96[COMRAM] unsigned char [8]
   925 ;;  custom_1        8   88[COMRAM] unsigned char [8]
   926 ;;  lcd_text        4  104[COMRAM] unsigned char [4]
   927 ;;  lcd_Counter     1  108[COMRAM] unsigned char 
   928 ;;  ret             1    0        unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2  306[None  ] int 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;Total ram usage:       23 bytes
   943 ;; Hardware stack levels required when called: 9
   944 ;; This function calls:
   945 ;;		_application_initialize
   946 ;;		_convert_uint_8_string
   947 ;;		_lcd_4_bit_send_custom_char
   948 ;;		_lcd_4_bit_send_string_position
   949 ;;		_lcd_8_bit_send_custom_char
   950 ;; This function is called by:
   951 ;;		Startup code after reset
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text0
   956   001AC8                     __ptext0:
   957                           	callstack 0
   958   001AC8                     _main:
   959                           	callstack 22
   960   001AC8                     
   961                           ;application.c: 8:  uint_8 lcd_Counter = 0;
   962   001AC8  0E00               	movlw	0
   963   001ACA  6E6D               	movwf	main@lcd_Counter^0,c
   964   001ACC                     
   965                           ;application.c: 9:  uint_8 lcd_text[4];;application.c: 10:  uint_8 custom_1[] = {0x0E, 0
      +                          X0A, 0x11, 0x11, 0X11,0x11,0x1F, 0x00};
   966   001ACC  EE20  F0A6         	lfsr	2,main@F3191
   967   001AD0  EE10  F059         	lfsr	1,main@custom_1
   968   001AD4  0E07               	movlw	7
   969   001AD6                     u2711:
   970   001AD6  CFDB FFE3          	movff	plusw2,plusw1
   971   001ADA  06E8               	decf	wreg,f,c
   972   001ADC  E2FC               	bc	u2711
   973   001ADE                     
   974                           ;application.c: 11:  uint_8 custom_2[] = {0x0E, 0X0A, 0x11, 0x11, 0X11,0x1F,0x1F, 0x00};
   975   001ADE  EE20  F09E         	lfsr	2,main@F3193
   976   001AE2  EE10  F061         	lfsr	1,main@custom_2
   977   001AE6  0E07               	movlw	7
   978   001AE8                     u2721:
   979   001AE8  CFDB FFE3          	movff	plusw2,plusw1
   980   001AEC  06E8               	decf	wreg,f,c
   981   001AEE  E2FC               	bc	u2721
   982   001AF0                     
   983                           ;application.c: 13: application_initialize();
   984   001AF0  ECE0  F012         	call	_application_initialize	;wreg free
   985   001AF4                     l3538:
   986   001AF4  0EAE               	movlw	low _lcd_2
   987   001AF6  6E26               	movwf	lcd_8_bit_send_custom_char@lcd^0,c
   988   001AF8  0E00               	movlw	high _lcd_2
   989   001AFA  6E27               	movwf	(lcd_8_bit_send_custom_char@lcd+1)^0,c
   990   001AFC  0E59               	movlw	low main@custom_1
   991   001AFE  6E28               	movwf	lcd_8_bit_send_custom_char@chr^0,c
   992   001B00  0E00               	movlw	high main@custom_1
   993   001B02  6E29               	movwf	(lcd_8_bit_send_custom_char@chr+1)^0,c
   994   001B04  0E01               	movlw	1
   995   001B06  6E2A               	movwf	lcd_8_bit_send_custom_char@row^0,c
   996   001B08  0E14               	movlw	20
   997   001B0A  6E2B               	movwf	lcd_8_bit_send_custom_char@colum^0,c
   998   001B0C  0E00               	movlw	0
   999   001B0E  6E2C               	movwf	lcd_8_bit_send_custom_char@mm_pos^0,c
  1000   001B10  EC4F  F00F         	call	_lcd_8_bit_send_custom_char	;wreg free
  1001   001B14  0E7A               	movlw	low _lcd_1
  1002   001B16  6E21               	movwf	lcd_4_bit_send_custom_char@lcd^0,c
  1003   001B18  0E00               	movlw	high _lcd_1
  1004   001B1A  6E22               	movwf	(lcd_4_bit_send_custom_char@lcd+1)^0,c
  1005   001B1C  0E61               	movlw	low main@custom_2
  1006   001B1E  6E23               	movwf	lcd_4_bit_send_custom_char@chr^0,c
  1007   001B20  0E00               	movlw	high main@custom_2
  1008   001B22  6E24               	movwf	(lcd_4_bit_send_custom_char@chr+1)^0,c
  1009   001B24  0E01               	movlw	1
  1010   001B26  6E25               	movwf	lcd_4_bit_send_custom_char@row^0,c
  1011   001B28  0E14               	movlw	20
  1012   001B2A  6E26               	movwf	lcd_4_bit_send_custom_char@colum^0,c
  1013   001B2C  0E00               	movlw	0
  1014   001B2E  6E27               	movwf	lcd_4_bit_send_custom_char@mm_pos^0,c
  1015   001B30  EC96  F00F         	call	_lcd_4_bit_send_custom_char	;wreg free
  1016   001B34  0E69               	movlw	low main@lcd_text
  1017   001B36  6E53               	movwf	convert_uint_8_string@str^0,c
  1018   001B38  0E00               	movlw	high main@lcd_text
  1019   001B3A  6E54               	movwf	(convert_uint_8_string@str+1)^0,c
  1020   001B3C  506D               	movf	main@lcd_Counter^0,w,c
  1021   001B3E  ECA3  F011         	call	_convert_uint_8_string
  1022   001B42  0E7A               	movlw	low _lcd_1
  1023   001B44  6E1A               	movwf	lcd_4_bit_send_string_position@lcd^0,c
  1024   001B46  0E00               	movlw	high _lcd_1
  1025   001B48  6E1B               	movwf	(lcd_4_bit_send_string_position@lcd+1)^0,c
  1026   001B4A  0E01               	movlw	1
  1027   001B4C  6E1C               	movwf	lcd_4_bit_send_string_position@str^0,c
  1028   001B4E  0E00               	movlw	0
  1029   001B50  6E1D               	movwf	(lcd_4_bit_send_string_position@str+1)^0,c
  1030   001B52  0E0A               	movlw	10
  1031   001B54  6E1E               	movwf	lcd_4_bit_send_string_position@row^0,c
  1032   001B56  0E69               	movlw	low (low main@lcd_text)
  1033   001B58  6E1F               	movwf	lcd_4_bit_send_string_position@colum^0,c
  1034   001B5A  EC02  F011         	call	_lcd_4_bit_send_string_position	;wreg free
  1035   001B5E                     
  1036                           ;application.c: 25:     _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1037   001B5E  0E03               	movlw	3
  1038   001B60  6E58               	movwf	(??_main+1)^0,c
  1039   001B62  0E8A               	movlw	138
  1040   001B64  6E57               	movwf	??_main^0,c
  1041   001B66  0E56               	movlw	86
  1042   001B68                     u2837:
  1043   001B68  2EE8               	decfsz	wreg,f,c
  1044   001B6A  D7FE               	bra	u2837
  1045   001B6C  2E57               	decfsz	??_main^0,f,c
  1046   001B6E  D7FC               	bra	u2837
  1047   001B70  2E58               	decfsz	(??_main+1)^0,f,c
  1048   001B72  D7FA               	bra	u2837
  1049   001B74                     
  1050                           ;application.c: 26:     lcd_Counter++;
  1051   001B74  2A6D               	incf	main@lcd_Counter^0,f,c
  1052   001B76  EF7A  F00D         	goto	l3538
  1053   001B7A  EF00  F000         	goto	start
  1054   001B7E                     __end_of_main:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function _lcd_8_bit_send_custom_char *****************
  1058 ;; Defined at:
  1059 ;;		line 339 in file "ECU_Layer/LCD/ecu_LCD.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  lcd             2   37[COMRAM] PTR const struct .
  1062 ;;		 -> lcd_2(10), 
  1063 ;;  chr             2   39[COMRAM] PTR const unsigned char 
  1064 ;;		 -> main@custom_1(8), 
  1065 ;;  row             1   41[COMRAM] unsigned char 
  1066 ;;  colum           1   42[COMRAM] unsigned char 
  1067 ;;  mm_pos          1   43[COMRAM] unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  lcd_Counter     1   47[COMRAM] unsigned char 
  1070 ;;  ret             1   46[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      unsigned char 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1080 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;Total ram usage:       11 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 5
  1087 ;; This function calls:
  1088 ;;		_lcd_8_bit_send_char_data
  1089 ;;		_lcd_8_bit_send_command
  1090 ;;		_lcd_8_bit_send_string_position
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text1
  1097   001E9E                     __ptext1:
  1098                           	callstack 0
  1099   001E9E                     _lcd_8_bit_send_custom_char:
  1100                           	callstack 25
  1101   001E9E                     
  1102                           ;ECU_Layer/LCD/ecu_LCD.c: 341: uint_8 lcd_Counter = 0;
  1103   001E9E  0E00               	movlw	0
  1104   001EA0  6E30               	movwf	lcd_8_bit_send_custom_char@lcd_Counter^0,c
  1105   001EA2                     
  1106                           ;ECU_Layer/LCD/ecu_LCD.c: 342:     if(lcd == ((void*)0)){
  1107   001EA2  5026               	movf	lcd_8_bit_send_custom_char@lcd^0,w,c
  1108   001EA4  1027               	iorwf	(lcd_8_bit_send_custom_char@lcd+1)^0,w,c
  1109   001EA6  A4D8               	btfss	status,2,c
  1110   001EA8  EF58  F00F         	goto	u2101
  1111   001EAC  EF5A  F00F         	goto	u2100
  1112   001EB0                     u2101:
  1113   001EB0  EF5E  F00F         	goto	l3084
  1114   001EB4                     u2100:
  1115   001EB4                     
  1116                           ;ECU_Layer/LCD/ecu_LCD.c: 343:      ret = (Std_ReturnType)0x00;
  1117   001EB4  0E00               	movlw	0
  1118   001EB6  6E2F               	movwf	lcd_8_bit_send_custom_char@ret^0,c
  1119                           
  1120                           ;ECU_Layer/LCD/ecu_LCD.c: 344:  }
  1121   001EB8  EF94  F00F         	goto	l3100
  1122   001EBC                     l3084:
  1123   001EBC  C026  F00F         	movff	lcd_8_bit_send_custom_char@lcd,lcd_8_bit_send_command@lcd
  1124   001EC0  C027  F010         	movff	lcd_8_bit_send_custom_char@lcd+1,lcd_8_bit_send_command@lcd+1
  1125   001EC4  502C               	movf	lcd_8_bit_send_custom_char@mm_pos^0,w,c
  1126   001EC6  0D08               	mullw	8
  1127   001EC8  50F3               	movf	243,w,c
  1128   001ECA  0F40               	addlw	64
  1129   001ECC  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  1130   001ECE  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  1131   001ED2                     
  1132                           ;ECU_Layer/LCD/ecu_LCD.c: 347:     for(lcd_Counter =0; lcd_Counter <=7 ; lcd_Counter++){
  1133   001ED2  0E00               	movlw	0
  1134   001ED4  6E30               	movwf	lcd_8_bit_send_custom_char@lcd_Counter^0,c
  1135   001ED6                     l3092:
  1136   001ED6  C026  F00F         	movff	lcd_8_bit_send_custom_char@lcd,lcd_8_bit_send_char_data@lcd
  1137   001EDA  C027  F010         	movff	lcd_8_bit_send_custom_char@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1138   001EDE  5030               	movf	lcd_8_bit_send_custom_char@lcd_Counter^0,w,c
  1139   001EE0  2428               	addwf	lcd_8_bit_send_custom_char@chr^0,w,c
  1140   001EE2  6ED9               	movwf	fsr2l,c
  1141   001EE4  0E00               	movlw	0
  1142   001EE6  2029               	addwfc	(lcd_8_bit_send_custom_char@chr+1)^0,w,c
  1143   001EE8  6EDA               	movwf	fsr2h,c
  1144   001EEA  50DF               	movf	indf2,w,c
  1145   001EEC  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1146   001EEE  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1147   001EF2                     
  1148                           ;ECU_Layer/LCD/ecu_LCD.c: 349:     }
  1149   001EF2  2A30               	incf	lcd_8_bit_send_custom_char@lcd_Counter^0,f,c
  1150   001EF4  0E07               	movlw	7
  1151   001EF6  6430               	cpfsgt	lcd_8_bit_send_custom_char@lcd_Counter^0,c
  1152   001EF8  EF80  F00F         	goto	u2111
  1153   001EFC  EF82  F00F         	goto	u2110
  1154   001F00                     u2111:
  1155   001F00  EF6B  F00F         	goto	l3092
  1156   001F04                     u2110:
  1157   001F04                     
  1158                           ;ECU_Layer/LCD/ecu_LCD.c: 350:     ret = lcd_8_bit_send_string_position(lcd, row, colum,
      +                           mm_pos);
  1159   001F04  C026  F01F         	movff	lcd_8_bit_send_custom_char@lcd,lcd_8_bit_send_string_position@lcd
  1160   001F08  C027  F020         	movff	lcd_8_bit_send_custom_char@lcd+1,lcd_8_bit_send_string_position@lcd+1
  1161   001F0C  502A               	movf	lcd_8_bit_send_custom_char@row^0,w,c
  1162   001F0E  6E2D               	movwf	??_lcd_8_bit_send_custom_char^0,c
  1163   001F10  6A2E               	clrf	(??_lcd_8_bit_send_custom_char+1)^0,c
  1164   001F12  C02D  F021         	movff	??_lcd_8_bit_send_custom_char,lcd_8_bit_send_string_position@str
  1165   001F16  C02E  F022         	movff	??_lcd_8_bit_send_custom_char+1,lcd_8_bit_send_string_position@str+1
  1166   001F1A  C02B  F023         	movff	lcd_8_bit_send_custom_char@colum,lcd_8_bit_send_string_position@row
  1167   001F1E  C02C  F024         	movff	lcd_8_bit_send_custom_char@mm_pos,lcd_8_bit_send_string_position@colum
  1168   001F22  ECCB  F010         	call	_lcd_8_bit_send_string_position	;wreg free
  1169   001F26  6E2F               	movwf	lcd_8_bit_send_custom_char@ret^0,c
  1170   001F28                     l3100:
  1171                           
  1172                           ;ECU_Layer/LCD/ecu_LCD.c: 353: return ret;
  1173   001F28  502F               	movf	lcd_8_bit_send_custom_char@ret^0,w,c
  1174   001F2A  0012               	return		;funcret
  1175   001F2C                     __end_of_lcd_8_bit_send_custom_char:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _lcd_8_bit_send_string_position *****************
  1179 ;; Defined at:
  1180 ;;		line 318 in file "ECU_Layer/LCD/ecu_LCD.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  lcd             2   30[COMRAM] PTR const struct .
  1183 ;;		 -> lcd_2(10), 
  1184 ;;  str             2   32[COMRAM] PTR unsigned char 
  1185 ;;		 -> RAM(3967), 
  1186 ;;  row             1   34[COMRAM] unsigned char 
  1187 ;;  colum           1   35[COMRAM] unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  ret             1   36[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      unsigned char 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;Total ram usage:        7 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 4
  1206 ;; This function calls:
  1207 ;;		_lcd_8_bit_send_char_data
  1208 ;;		_lcd_8bit_set_cursor
  1209 ;; This function is called by:
  1210 ;;		_lcd_8_bit_send_custom_char
  1211 ;;		_welcome_massage
  1212 ;;		_loading_massage
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217   002196                     __ptext2:
  1218                           	callstack 0
  1219   002196                     _lcd_8_bit_send_string_position:
  1220                           	callstack 25
  1221   002196                     
  1222                           ;ECU_Layer/LCD/ecu_LCD.c: 320:  if(lcd == ((void*)0)){
  1223   002196  501F               	movf	lcd_8_bit_send_string_position@lcd^0,w,c
  1224   002198  1020               	iorwf	(lcd_8_bit_send_string_position@lcd+1)^0,w,c
  1225   00219A  A4D8               	btfss	status,2,c
  1226   00219C  EFD2  F010         	goto	u2031
  1227   0021A0  EFD4  F010         	goto	u2030
  1228   0021A4                     u2031:
  1229   0021A4  EFD8  F010         	goto	l3020
  1230   0021A8                     u2030:
  1231   0021A8                     
  1232                           ;ECU_Layer/LCD/ecu_LCD.c: 321:      ret = (Std_ReturnType)0x00;
  1233   0021A8  0E00               	movlw	0
  1234   0021AA  6E25               	movwf	lcd_8_bit_send_string_position@ret^0,c
  1235                           
  1236                           ;ECU_Layer/LCD/ecu_LCD.c: 322:  }
  1237   0021AC  EF00  F011         	goto	l3028
  1238   0021B0                     l3020:
  1239                           
  1240                           ;ECU_Layer/LCD/ecu_LCD.c: 324:       ret = lcd_8bit_set_cursor(lcd, row, colum);
  1241   0021B0  C01F  F018         	movff	lcd_8_bit_send_string_position@lcd,lcd_8bit_set_cursor@lcd
  1242   0021B4  C020  F019         	movff	lcd_8_bit_send_string_position@lcd+1,lcd_8bit_set_cursor@lcd+1
  1243   0021B8  C023  F01A         	movff	lcd_8_bit_send_string_position@row,lcd_8bit_set_cursor@row
  1244   0021BC  C024  F01B         	movff	lcd_8_bit_send_string_position@colum,lcd_8bit_set_cursor@coulmn
  1245   0021C0  EC17  F00E         	call	_lcd_8bit_set_cursor	;wreg free
  1246   0021C4  6E25               	movwf	lcd_8_bit_send_string_position@ret^0,c
  1247                           
  1248                           ;ECU_Layer/LCD/ecu_LCD.c: 325:      while(*str){
  1249   0021C6  EFF4  F010         	goto	l3026
  1250   0021CA                     l3022:
  1251                           
  1252                           ;ECU_Layer/LCD/ecu_LCD.c: 326:     ret = lcd_8_bit_send_char_data(lcd, *str++);
  1253   0021CA  C01F  F00F         	movff	lcd_8_bit_send_string_position@lcd,lcd_8_bit_send_char_data@lcd
  1254   0021CE  C020  F010         	movff	lcd_8_bit_send_string_position@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1255   0021D2  C021  FFD9         	movff	lcd_8_bit_send_string_position@str,fsr2l
  1256   0021D6  C022  FFDA         	movff	lcd_8_bit_send_string_position@str+1,fsr2h
  1257   0021DA  50DF               	movf	indf2,w,c
  1258   0021DC  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1259   0021DE  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1260   0021E2  6E25               	movwf	lcd_8_bit_send_string_position@ret^0,c
  1261   0021E4  4A21               	infsnz	lcd_8_bit_send_string_position@str^0,f,c
  1262   0021E6  2A22               	incf	(lcd_8_bit_send_string_position@str+1)^0,f,c
  1263   0021E8                     l3026:
  1264                           
  1265                           ;ECU_Layer/LCD/ecu_LCD.c: 325:      while(*str){
  1266   0021E8  C021  FFD9         	movff	lcd_8_bit_send_string_position@str,fsr2l
  1267   0021EC  C022  FFDA         	movff	lcd_8_bit_send_string_position@str+1,fsr2h
  1268   0021F0  50DF               	movf	indf2,w,c
  1269   0021F2  A4D8               	btfss	status,2,c
  1270   0021F4  EFFE  F010         	goto	u2041
  1271   0021F8  EF00  F011         	goto	u2040
  1272   0021FC                     u2041:
  1273   0021FC  EFE5  F010         	goto	l3022
  1274   002200                     u2040:
  1275   002200                     l3028:
  1276                           
  1277                           ;ECU_Layer/LCD/ecu_LCD.c: 329: return ret;
  1278   002200  5025               	movf	lcd_8_bit_send_string_position@ret^0,w,c
  1279   002202  0012               	return		;funcret
  1280   002204                     __end_of_lcd_8_bit_send_string_position:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _lcd_8bit_set_cursor *****************
  1284 ;; Defined at:
  1285 ;;		line 455 in file "ECU_Layer/LCD/ecu_LCD.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  lcd             2   23[COMRAM] PTR const struct .
  1288 ;;		 -> lcd_2(10), 
  1289 ;;  row             1   25[COMRAM] unsigned char 
  1290 ;;  coulmn          1   26[COMRAM] unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  ret             1   29[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        7 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 3
  1309 ;; This function calls:
  1310 ;;		_lcd_8_bit_send_char_data
  1311 ;; This function is called by:
  1312 ;;		_lcd_8_bit_send_string_position
  1313 ;;		_lcd_8_bit_send_data_position
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text3
  1318   001C2E                     __ptext3:
  1319                           	callstack 0
  1320   001C2E                     _lcd_8bit_set_cursor:
  1321                           	callstack 25
  1322   001C2E                     
  1323                           ;ECU_Layer/LCD/ecu_LCD.c: 456:  Std_ReturnType ret = (Std_ReturnType)0x01;
  1324   001C2E  0E01               	movlw	1
  1325   001C30  6E1E               	movwf	lcd_8bit_set_cursor@ret^0,c
  1326   001C32                     
  1327                           ;ECU_Layer/LCD/ecu_LCD.c: 457:  coulmn--;
  1328   001C32  061B               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
  1329                           
  1330                           ;ECU_Layer/LCD/ecu_LCD.c: 458:  switch (row){
  1331   001C34  EF4C  F00E         	goto	l2970
  1332   001C38                     l2962:
  1333   001C38  C018  F00F         	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
  1334   001C3C  C019  F010         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1335   001C40  501B               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1336   001C42  0F80               	addlw	128
  1337   001C44  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1338   001C46  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1339   001C4A  6E1E               	movwf	lcd_8bit_set_cursor@ret^0,c
  1340   001C4C  EF69  F00E         	goto	l2972
  1341   001C50                     l2964:
  1342   001C50  C018  F00F         	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
  1343   001C54  C019  F010         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1344   001C58  501B               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1345   001C5A  0FC0               	addlw	192
  1346   001C5C  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1347   001C5E  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1348   001C62  6E1E               	movwf	lcd_8bit_set_cursor@ret^0,c
  1349   001C64  EF69  F00E         	goto	l2972
  1350   001C68                     l2966:
  1351   001C68  C018  F00F         	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
  1352   001C6C  C019  F010         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1353   001C70  501B               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1354   001C72  0F94               	addlw	148
  1355   001C74  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1356   001C76  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1357   001C7A  6E1E               	movwf	lcd_8bit_set_cursor@ret^0,c
  1358   001C7C  EF69  F00E         	goto	l2972
  1359   001C80                     l2968:
  1360   001C80  C018  F00F         	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
  1361   001C84  C019  F010         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
  1362   001C88  501B               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
  1363   001C8A  0FD4               	addlw	212
  1364   001C8C  6E11               	movwf	lcd_8_bit_send_char_data@data^0,c
  1365   001C8E  ECBF  F00E         	call	_lcd_8_bit_send_char_data	;wreg free
  1366   001C92  6E1E               	movwf	lcd_8bit_set_cursor@ret^0,c
  1367   001C94  EF69  F00E         	goto	l2972
  1368   001C98                     l2970:
  1369   001C98  501A               	movf	lcd_8bit_set_cursor@row^0,w,c
  1370   001C9A  6E1C               	movwf	??_lcd_8bit_set_cursor^0,c
  1371   001C9C  6A1D               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1372                           
  1373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 1, Range of values is 0 to 0
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte            4     3 (average)
  1379                           ;	Chosen strategy is simple_byte
  1380   001C9E  501D               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1381   001CA0  0A00               	xorlw	0	; case 0
  1382   001CA2  B4D8               	btfsc	status,2,c
  1383   001CA4  EF56  F00E         	goto	l3730
  1384   001CA8  EF69  F00E         	goto	l2972
  1385   001CAC                     l3730:
  1386                           
  1387                           ; Switch size 1, requested type "simple"
  1388                           ; Number of cases is 4, Range of values is 1 to 4
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte           13     7 (average)
  1392                           ;	Chosen strategy is simple_byte
  1393   001CAC  501C               	movf	??_lcd_8bit_set_cursor^0,w,c
  1394   001CAE  0A01               	xorlw	1	; case 1
  1395   001CB0  B4D8               	btfsc	status,2,c
  1396   001CB2  EF1C  F00E         	goto	l2962
  1397   001CB6  0A03               	xorlw	3	; case 2
  1398   001CB8  B4D8               	btfsc	status,2,c
  1399   001CBA  EF28  F00E         	goto	l2964
  1400   001CBE  0A01               	xorlw	1	; case 3
  1401   001CC0  B4D8               	btfsc	status,2,c
  1402   001CC2  EF34  F00E         	goto	l2966
  1403   001CC6  0A07               	xorlw	7	; case 4
  1404   001CC8  B4D8               	btfsc	status,2,c
  1405   001CCA  EF40  F00E         	goto	l2968
  1406   001CCE  EF69  F00E         	goto	l2972
  1407   001CD2                     l2972:
  1408                           
  1409                           ;ECU_Layer/LCD/ecu_LCD.c: 465:  return ret;
  1410   001CD2  501E               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1411   001CD4  0012               	return		;funcret
  1412   001CD6                     __end_of_lcd_8bit_set_cursor:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _lcd_8_bit_send_char_data *****************
  1416 ;; Defined at:
  1417 ;;		line 251 in file "ECU_Layer/LCD/ecu_LCD.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  lcd             2   14[COMRAM] PTR const struct .
  1420 ;;		 -> lcd_2(10), 
  1421 ;;  data            1   16[COMRAM] unsigned char 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  l_data_count    1   22[COMRAM] unsigned char 
  1424 ;;  ret             1   21[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      unsigned char 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1434 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;Total ram usage:        9 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 2
  1441 ;; This function calls:
  1442 ;;		_gpio_pin_write_logic
  1443 ;;		_lcd_8bit_send_enable_signal
  1444 ;; This function is called by:
  1445 ;;		_lcd_8_bit_send_string_position
  1446 ;;		_lcd_8_bit_send_custom_char
  1447 ;;		_lcd_8bit_set_cursor
  1448 ;;		_lcd_8_bit_send_data_position
  1449 ;;		_lcd_8_bit_send_string
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454   001D7E                     __ptext4:
  1455                           	callstack 0
  1456   001D7E                     _lcd_8_bit_send_char_data:
  1457                           	callstack 25
  1458   001D7E                     
  1459                           ;ECU_Layer/LCD/ecu_LCD.c: 253:  uint_8 l_data_counter =0 ;
  1460   001D7E  0E00               	movlw	0
  1461   001D80  6E17               	movwf	lcd_8_bit_send_char_data@l_data_counter^0,c
  1462   001D82                     
  1463                           ;ECU_Layer/LCD/ecu_LCD.c: 254:  if(lcd == ((void*)0)){
  1464   001D82  500F               	movf	lcd_8_bit_send_char_data@lcd^0,w,c
  1465   001D84  1010               	iorwf	(lcd_8_bit_send_char_data@lcd+1)^0,w,c
  1466   001D86  A4D8               	btfss	status,2,c
  1467   001D88  EFC8  F00E         	goto	u1901
  1468   001D8C  EFCA  F00E         	goto	u1900
  1469   001D90                     u1901:
  1470   001D90  EFCE  F00E         	goto	l2794
  1471   001D94                     u1900:
  1472   001D94                     
  1473                           ;ECU_Layer/LCD/ecu_LCD.c: 255:      ret = (Std_ReturnType)0x00;
  1474   001D94  0E00               	movlw	0
  1475   001D96  6E16               	movwf	lcd_8_bit_send_char_data@ret^0,c
  1476                           
  1477                           ;ECU_Layer/LCD/ecu_LCD.c: 256:  }
  1478   001D98  EF05  F00F         	goto	l2810
  1479   001D9C                     l2794:
  1480   001D9C  C00F  F001         	movff	lcd_8_bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1481   001DA0  C010  F002         	movff	lcd_8_bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1482   001DA4  0E01               	movlw	1
  1483   001DA6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1484   001DA8  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  1485   001DAC                     
  1486                           ;ECU_Layer/LCD/ecu_LCD.c: 259:    for(l_data_counter = 0 ; l_data_counter < 8; l_data_co
      +                          unter++){
  1487   001DAC  0E00               	movlw	0
  1488   001DAE  6E17               	movwf	lcd_8_bit_send_char_data@l_data_counter^0,c
  1489   001DB0                     l2802:
  1490   001DB0  5017               	movf	lcd_8_bit_send_char_data@l_data_counter^0,w,c
  1491   001DB2  240F               	addwf	lcd_8_bit_send_char_data@lcd^0,w,c
  1492   001DB4  6E12               	movwf	??_lcd_8_bit_send_char_data^0,c
  1493   001DB6  0E00               	movlw	0
  1494   001DB8  2010               	addwfc	(lcd_8_bit_send_char_data@lcd+1)^0,w,c
  1495   001DBA  6E13               	movwf	(??_lcd_8_bit_send_char_data+1)^0,c
  1496   001DBC  0E02               	movlw	2
  1497   001DBE  2412               	addwf	??_lcd_8_bit_send_char_data^0,w,c
  1498   001DC0  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  1499   001DC2  0E00               	movlw	0
  1500   001DC4  2013               	addwfc	(??_lcd_8_bit_send_char_data+1)^0,w,c
  1501   001DC6  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1502   001DC8  C017  F014         	movff	lcd_8_bit_send_char_data@l_data_counter,??_lcd_8_bit_send_char_data+2
  1503   001DCC  C011  F015         	movff	lcd_8_bit_send_char_data@data,??_lcd_8_bit_send_char_data+3
  1504   001DD0  2A14               	incf	(??_lcd_8_bit_send_char_data+2)^0,f,c
  1505   001DD2  EFED  F00E         	goto	u1914
  1506   001DD6                     u1915:
  1507   001DD6  90D8               	bcf	status,0,c
  1508   001DD8  3615               	rlcf	(??_lcd_8_bit_send_char_data+3)^0,f,c
  1509   001DDA                     u1914:
  1510   001DDA  2E14               	decfsz	(??_lcd_8_bit_send_char_data+2)^0,f,c
  1511   001DDC  EFEB  F00E         	goto	u1915
  1512   001DE0  5015               	movf	(??_lcd_8_bit_send_char_data+3)^0,w,c
  1513   001DE2  0B01               	andlw	1
  1514   001DE4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1515   001DE6  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  1516   001DEA                     
  1517                           ;ECU_Layer/LCD/ecu_LCD.c: 261:    }
  1518   001DEA  2A17               	incf	lcd_8_bit_send_char_data@l_data_counter^0,f,c
  1519   001DEC  0E07               	movlw	7
  1520   001DEE  6417               	cpfsgt	lcd_8_bit_send_char_data@l_data_counter^0,c
  1521   001DF0  EFFC  F00E         	goto	u1921
  1522   001DF4  EFFE  F00E         	goto	u1920
  1523   001DF8                     u1921:
  1524   001DF8  EFD8  F00E         	goto	l2802
  1525   001DFC                     u1920:
  1526   001DFC                     
  1527                           ;ECU_Layer/LCD/ecu_LCD.c: 262:    ret = lcd_8bit_send_enable_signal(lcd);
  1528   001DFC  C00F  F00B         	movff	lcd_8_bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1529   001E00  C010  F00C         	movff	lcd_8_bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1530   001E04  EC60  F012         	call	_lcd_8bit_send_enable_signal	;wreg free
  1531   001E08  6E16               	movwf	lcd_8_bit_send_char_data@ret^0,c
  1532   001E0A                     l2810:
  1533                           
  1534                           ;ECU_Layer/LCD/ecu_LCD.c: 265:  return ret;
  1535   001E0A  5016               	movf	lcd_8_bit_send_char_data@ret^0,w,c
  1536   001E0C  0012               	return		;funcret
  1537   001E0E                     __end_of_lcd_8_bit_send_char_data:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _lcd_4_bit_send_custom_char *****************
  1541 ;; Defined at:
  1542 ;;		line 168 in file "ECU_Layer/LCD/ecu_LCD.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  lcd             2   32[COMRAM] PTR const struct .
  1545 ;;		 -> lcd_1(6), 
  1546 ;;  chr             2   34[COMRAM] PTR const unsigned char 
  1547 ;;		 -> main@custom_2(8), 
  1548 ;;  row             1   36[COMRAM] unsigned char 
  1549 ;;  colum           1   37[COMRAM] unsigned char 
  1550 ;;  mm_pos          1   38[COMRAM] unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  lcd_Counter     1   42[COMRAM] unsigned char 
  1553 ;;  ret             1   41[COMRAM] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      unsigned char 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:       11 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 5
  1570 ;; This function calls:
  1571 ;;		_lcd_4_bit_send_char_data
  1572 ;;		_lcd_4_bit_send_command
  1573 ;;		_lcd_4_bit_send_string_position
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text5
  1580   001F2C                     __ptext5:
  1581                           	callstack 0
  1582   001F2C                     _lcd_4_bit_send_custom_char:
  1583                           	callstack 25
  1584   001F2C                     
  1585                           ;ECU_Layer/LCD/ecu_LCD.c: 170: uint_8 lcd_Counter = 0;
  1586   001F2C  0E00               	movlw	0
  1587   001F2E  6E2B               	movwf	lcd_4_bit_send_custom_char@lcd_Counter^0,c
  1588   001F30                     
  1589                           ;ECU_Layer/LCD/ecu_LCD.c: 171:     if(lcd == ((void*)0)){
  1590   001F30  5021               	movf	lcd_4_bit_send_custom_char@lcd^0,w,c
  1591   001F32  1022               	iorwf	(lcd_4_bit_send_custom_char@lcd+1)^0,w,c
  1592   001F34  A4D8               	btfss	status,2,c
  1593   001F36  EF9F  F00F         	goto	u2121
  1594   001F3A  EFA1  F00F         	goto	u2120
  1595   001F3E                     u2121:
  1596   001F3E  EFA5  F00F         	goto	l3110
  1597   001F42                     u2120:
  1598   001F42                     
  1599                           ;ECU_Layer/LCD/ecu_LCD.c: 172:      ret = (Std_ReturnType)0x00;
  1600   001F42  0E00               	movlw	0
  1601   001F44  6E2A               	movwf	lcd_4_bit_send_custom_char@ret^0,c
  1602                           
  1603                           ;ECU_Layer/LCD/ecu_LCD.c: 173:  }
  1604   001F46  EFDB  F00F         	goto	l3126
  1605   001F4A                     l3110:
  1606   001F4A  C021  F00F         	movff	lcd_4_bit_send_custom_char@lcd,lcd_4_bit_send_command@lcd
  1607   001F4E  C022  F010         	movff	lcd_4_bit_send_custom_char@lcd+1,lcd_4_bit_send_command@lcd+1
  1608   001F52  5027               	movf	lcd_4_bit_send_custom_char@mm_pos^0,w,c
  1609   001F54  0D08               	mullw	8
  1610   001F56  50F3               	movf	243,w,c
  1611   001F58  0F40               	addlw	64
  1612   001F5A  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  1613   001F5C  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  1614   001F60                     
  1615                           ;ECU_Layer/LCD/ecu_LCD.c: 176:     for(lcd_Counter =0; lcd_Counter <=7 ; lcd_Counter++){
  1616   001F60  0E00               	movlw	0
  1617   001F62  6E2B               	movwf	lcd_4_bit_send_custom_char@lcd_Counter^0,c
  1618   001F64                     l3118:
  1619   001F64  C021  F00F         	movff	lcd_4_bit_send_custom_char@lcd,lcd_4_bit_send_char_data@lcd
  1620   001F68  C022  F010         	movff	lcd_4_bit_send_custom_char@lcd+1,lcd_4_bit_send_char_data@lcd+1
  1621   001F6C  502B               	movf	lcd_4_bit_send_custom_char@lcd_Counter^0,w,c
  1622   001F6E  2423               	addwf	lcd_4_bit_send_custom_char@chr^0,w,c
  1623   001F70  6ED9               	movwf	fsr2l,c
  1624   001F72  0E00               	movlw	0
  1625   001F74  2024               	addwfc	(lcd_4_bit_send_custom_char@chr+1)^0,w,c
  1626   001F76  6EDA               	movwf	fsr2h,c
  1627   001F78  50DF               	movf	indf2,w,c
  1628   001F7A  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1629   001F7C  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1630   001F80                     
  1631                           ;ECU_Layer/LCD/ecu_LCD.c: 178:     }
  1632   001F80  2A2B               	incf	lcd_4_bit_send_custom_char@lcd_Counter^0,f,c
  1633   001F82  0E07               	movlw	7
  1634   001F84  642B               	cpfsgt	lcd_4_bit_send_custom_char@lcd_Counter^0,c
  1635   001F86  EFC7  F00F         	goto	u2131
  1636   001F8A  EFC9  F00F         	goto	u2130
  1637   001F8E                     u2131:
  1638   001F8E  EFB2  F00F         	goto	l3118
  1639   001F92                     u2130:
  1640   001F92                     
  1641                           ;ECU_Layer/LCD/ecu_LCD.c: 179:     ret = lcd_4_bit_send_string_position(lcd, row, colum,
      +                           mm_pos);
  1642   001F92  C021  F01A         	movff	lcd_4_bit_send_custom_char@lcd,lcd_4_bit_send_string_position@lcd
  1643   001F96  C022  F01B         	movff	lcd_4_bit_send_custom_char@lcd+1,lcd_4_bit_send_string_position@lcd+1
  1644   001F9A  5025               	movf	lcd_4_bit_send_custom_char@row^0,w,c
  1645   001F9C  6E28               	movwf	??_lcd_4_bit_send_custom_char^0,c
  1646   001F9E  6A29               	clrf	(??_lcd_4_bit_send_custom_char+1)^0,c
  1647   001FA0  C028  F01C         	movff	??_lcd_4_bit_send_custom_char,lcd_4_bit_send_string_position@str
  1648   001FA4  C029  F01D         	movff	??_lcd_4_bit_send_custom_char+1,lcd_4_bit_send_string_position@str+1
  1649   001FA8  C026  F01E         	movff	lcd_4_bit_send_custom_char@colum,lcd_4_bit_send_string_position@row
  1650   001FAC  C027  F01F         	movff	lcd_4_bit_send_custom_char@mm_pos,lcd_4_bit_send_string_position@colum
  1651   001FB0  EC02  F011         	call	_lcd_4_bit_send_string_position	;wreg free
  1652   001FB4  6E2A               	movwf	lcd_4_bit_send_custom_char@ret^0,c
  1653   001FB6                     l3126:
  1654                           
  1655                           ;ECU_Layer/LCD/ecu_LCD.c: 182: return ret;
  1656   001FB6  502A               	movf	lcd_4_bit_send_custom_char@ret^0,w,c
  1657   001FB8  0012               	return		;funcret
  1658   001FBA                     __end_of_lcd_4_bit_send_custom_char:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _lcd_4_bit_send_string_position *****************
  1662 ;; Defined at:
  1663 ;;		line 143 in file "ECU_Layer/LCD/ecu_LCD.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  lcd             2   25[COMRAM] PTR const struct .
  1666 ;;		 -> lcd_4_bit_send_string_position@lcd(2), lcd_4_bit_send_string@lcd(2), lcd_4_bit_send_data_position@lcd(2), lcd_2(
      +10), 
  1667 ;;		 -> lcd_1(6), 
  1668 ;;  str             2   27[COMRAM] PTR unsigned char 
  1669 ;;		 -> RAM(3967), 
  1670 ;;  row             1   29[COMRAM] unsigned char 
  1671 ;;  colum           1   30[COMRAM] unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  ret             1   31[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      unsigned char 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:        7 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 4
  1690 ;; This function calls:
  1691 ;;		_lcd_4_bit_send_char_data
  1692 ;;		_lcd_4bit_set_cursor
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;;		_lcd_4_bit_send_custom_char
  1696 ;;		_loading_massage
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text6
  1701   002204                     __ptext6:
  1702                           	callstack 0
  1703   002204                     _lcd_4_bit_send_string_position:
  1704                           	callstack 26
  1705   002204                     
  1706                           ;ECU_Layer/LCD/ecu_LCD.c: 145:     if(lcd == ((void*)0)){
  1707   002204  501A               	movf	lcd_4_bit_send_string_position@lcd^0,w,c
  1708   002206  101B               	iorwf	(lcd_4_bit_send_string_position@lcd+1)^0,w,c
  1709   002208  A4D8               	btfss	status,2,c
  1710   00220A  EF09  F011         	goto	u2011
  1711   00220E  EF0B  F011         	goto	u2010
  1712   002212                     u2011:
  1713   002212  EF0F  F011         	goto	l3002
  1714   002216                     u2010:
  1715   002216                     
  1716                           ;ECU_Layer/LCD/ecu_LCD.c: 146:      ret = (Std_ReturnType)0x00;
  1717   002216  0E00               	movlw	0
  1718   002218  6E20               	movwf	lcd_4_bit_send_string_position@ret^0,c
  1719                           
  1720                           ;ECU_Layer/LCD/ecu_LCD.c: 147:  }
  1721   00221A  EF37  F011         	goto	l3010
  1722   00221E                     l3002:
  1723                           
  1724                           ;ECU_Layer/LCD/ecu_LCD.c: 149:     ret = lcd_4bit_set_cursor(&lcd,row, colum);
  1725   00221E  0E1A               	movlw	low lcd_4_bit_send_string_position@lcd
  1726   002220  6E13               	movwf	lcd_4bit_set_cursor@lcd^0,c
  1727   002222  0E00               	movlw	high lcd_4_bit_send_string_position@lcd
  1728   002224  6E14               	movwf	(lcd_4bit_set_cursor@lcd+1)^0,c
  1729   002226  C01E  F015         	movff	lcd_4_bit_send_string_position@row,lcd_4bit_set_cursor@row
  1730   00222A  C01F  F016         	movff	lcd_4_bit_send_string_position@colum,lcd_4bit_set_cursor@coulmn
  1731   00222E  EC6B  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  1732   002232  6E20               	movwf	lcd_4_bit_send_string_position@ret^0,c
  1733                           
  1734                           ;ECU_Layer/LCD/ecu_LCD.c: 150:     while(*str){
  1735   002234  EF2B  F011         	goto	l3008
  1736   002238                     l3004:
  1737                           
  1738                           ;ECU_Layer/LCD/ecu_LCD.c: 151:      ret = lcd_4_bit_send_char_data(&lcd, *str++);
  1739   002238  0E1A               	movlw	low lcd_4_bit_send_string_position@lcd
  1740   00223A  6E0F               	movwf	lcd_4_bit_send_char_data@lcd^0,c
  1741   00223C  0E00               	movlw	high lcd_4_bit_send_string_position@lcd
  1742   00223E  6E10               	movwf	(lcd_4_bit_send_char_data@lcd+1)^0,c
  1743   002240  C01C  FFD9         	movff	lcd_4_bit_send_string_position@str,fsr2l
  1744   002244  C01D  FFDA         	movff	lcd_4_bit_send_string_position@str+1,fsr2h
  1745   002248  50DF               	movf	indf2,w,c
  1746   00224A  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1747   00224C  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1748   002250  6E20               	movwf	lcd_4_bit_send_string_position@ret^0,c
  1749   002252  4A1C               	infsnz	lcd_4_bit_send_string_position@str^0,f,c
  1750   002254  2A1D               	incf	(lcd_4_bit_send_string_position@str+1)^0,f,c
  1751   002256                     l3008:
  1752                           
  1753                           ;ECU_Layer/LCD/ecu_LCD.c: 150:     while(*str){
  1754   002256  C01C  FFD9         	movff	lcd_4_bit_send_string_position@str,fsr2l
  1755   00225A  C01D  FFDA         	movff	lcd_4_bit_send_string_position@str+1,fsr2h
  1756   00225E  50DF               	movf	indf2,w,c
  1757   002260  A4D8               	btfss	status,2,c
  1758   002262  EF35  F011         	goto	u2021
  1759   002266  EF37  F011         	goto	u2020
  1760   00226A                     u2021:
  1761   00226A  EF1C  F011         	goto	l3004
  1762   00226E                     u2020:
  1763   00226E                     l3010:
  1764                           
  1765                           ;ECU_Layer/LCD/ecu_LCD.c: 156:  return ret;
  1766   00226E  5020               	movf	lcd_4_bit_send_string_position@ret^0,w,c
  1767   002270  0012               	return		;funcret
  1768   002272                     __end_of_lcd_4_bit_send_string_position:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _lcd_4bit_set_cursor *****************
  1772 ;; Defined at:
  1773 ;;		line 473 in file "ECU_Layer/LCD/ecu_LCD.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  lcd             2   18[COMRAM] PTR const struct .
  1776 ;;		 -> lcd_4_bit_send_string_position@lcd(2), lcd_4_bit_send_data_position@lcd(2), 
  1777 ;;  row             1   20[COMRAM] unsigned char 
  1778 ;;  coulmn          1   21[COMRAM] unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  ret             1   24[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      unsigned char 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        7 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 3
  1797 ;; This function calls:
  1798 ;;		_lcd_4_bit_send_char_data
  1799 ;; This function is called by:
  1800 ;;		_lcd_4_bit_send_string_position
  1801 ;;		_lcd_4_bit_send_data_position
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text7
  1806   001CD6                     __ptext7:
  1807                           	callstack 0
  1808   001CD6                     _lcd_4bit_set_cursor:
  1809                           	callstack 26
  1810   001CD6                     
  1811                           ;ECU_Layer/LCD/ecu_LCD.c: 474:  Std_ReturnType ret = (Std_ReturnType)0x01;
  1812   001CD6  0E01               	movlw	1
  1813   001CD8  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1814   001CDA                     
  1815                           ;ECU_Layer/LCD/ecu_LCD.c: 475:  coulmn--;
  1816   001CDA  0616               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  1817                           
  1818                           ;ECU_Layer/LCD/ecu_LCD.c: 476:  switch (row){
  1819   001CDC  EFA0  F00E         	goto	l2948
  1820   001CE0                     l2940:
  1821   001CE0  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4_bit_send_char_data@lcd
  1822   001CE4  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4_bit_send_char_data@lcd+1
  1823   001CE8  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1824   001CEA  0F80               	addlw	128
  1825   001CEC  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1826   001CEE  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1827   001CF2  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1828   001CF4  EFBD  F00E         	goto	l2950
  1829   001CF8                     l2942:
  1830   001CF8  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4_bit_send_char_data@lcd
  1831   001CFC  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4_bit_send_char_data@lcd+1
  1832   001D00  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1833   001D02  0FC0               	addlw	192
  1834   001D04  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1835   001D06  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1836   001D0A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1837   001D0C  EFBD  F00E         	goto	l2950
  1838   001D10                     l2944:
  1839   001D10  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4_bit_send_char_data@lcd
  1840   001D14  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4_bit_send_char_data@lcd+1
  1841   001D18  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1842   001D1A  0F94               	addlw	148
  1843   001D1C  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1844   001D1E  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1845   001D22  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1846   001D24  EFBD  F00E         	goto	l2950
  1847   001D28                     l2946:
  1848   001D28  C013  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4_bit_send_char_data@lcd
  1849   001D2C  C014  F010         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4_bit_send_char_data@lcd+1
  1850   001D30  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  1851   001D32  0FD4               	addlw	212
  1852   001D34  6E11               	movwf	lcd_4_bit_send_char_data@data^0,c
  1853   001D36  EC59  F010         	call	_lcd_4_bit_send_char_data	;wreg free
  1854   001D3A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  1855   001D3C  EFBD  F00E         	goto	l2950
  1856   001D40                     l2948:
  1857   001D40  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
  1858   001D42  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
  1859   001D44  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1860                           
  1861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1862                           ; Switch size 1, requested type "simple"
  1863                           ; Number of cases is 1, Range of values is 0 to 0
  1864                           ; switch strategies available:
  1865                           ; Name         Instructions Cycles
  1866                           ; simple_byte            4     3 (average)
  1867                           ;	Chosen strategy is simple_byte
  1868   001D46  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1869   001D48  0A00               	xorlw	0	; case 0
  1870   001D4A  B4D8               	btfsc	status,2,c
  1871   001D4C  EFAA  F00E         	goto	l3732
  1872   001D50  EFBD  F00E         	goto	l2950
  1873   001D54                     l3732:
  1874                           
  1875                           ; Switch size 1, requested type "simple"
  1876                           ; Number of cases is 4, Range of values is 1 to 4
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte           13     7 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881   001D54  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
  1882   001D56  0A01               	xorlw	1	; case 1
  1883   001D58  B4D8               	btfsc	status,2,c
  1884   001D5A  EF70  F00E         	goto	l2940
  1885   001D5E  0A03               	xorlw	3	; case 2
  1886   001D60  B4D8               	btfsc	status,2,c
  1887   001D62  EF7C  F00E         	goto	l2942
  1888   001D66  0A01               	xorlw	1	; case 3
  1889   001D68  B4D8               	btfsc	status,2,c
  1890   001D6A  EF88  F00E         	goto	l2944
  1891   001D6E  0A07               	xorlw	7	; case 4
  1892   001D70  B4D8               	btfsc	status,2,c
  1893   001D72  EF94  F00E         	goto	l2946
  1894   001D76  EFBD  F00E         	goto	l2950
  1895   001D7A                     l2950:
  1896                           
  1897                           ;ECU_Layer/LCD/ecu_LCD.c: 483:  return ret;
  1898   001D7A  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1899   001D7C  0012               	return		;funcret
  1900   001D7E                     __end_of_lcd_4bit_set_cursor:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _lcd_4_bit_send_char_data *****************
  1904 ;; Defined at:
  1905 ;;		line 76 in file "ECU_Layer/LCD/ecu_LCD.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  lcd             2   14[COMRAM] PTR const struct .
  1908 ;;		 -> lcd_4_bit_send_string_position@lcd(2), lcd_4_bit_send_string@lcd(2), lcd_4_bit_send_data_position@lcd(2), lcd_2(
      +10), 
  1909 ;;		 -> lcd_1(6), 
  1910 ;;  data            1   16[COMRAM] unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  ret             1   17[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      unsigned char 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1922 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;Total ram usage:        4 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 2
  1929 ;; This function calls:
  1930 ;;		_gpio_pin_write_logic
  1931 ;;		_lcd_4bit_send_enable_signal
  1932 ;;		_send_4bit_data
  1933 ;; This function is called by:
  1934 ;;		_lcd_4_bit_send_string_position
  1935 ;;		_lcd_4_bit_send_custom_char
  1936 ;;		_lcd_4bit_set_cursor
  1937 ;;		_lcd_4_bit_send_data_position
  1938 ;;		_lcd_4_bit_send_string
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text8
  1943   0020B2                     __ptext8:
  1944                           	callstack 0
  1945   0020B2                     _lcd_4_bit_send_char_data:
  1946                           	callstack 26
  1947   0020B2                     
  1948                           ;ECU_Layer/LCD/ecu_LCD.c: 79:  if(lcd == ((void*)0)){
  1949   0020B2  500F               	movf	lcd_4_bit_send_char_data@lcd^0,w,c
  1950   0020B4  1010               	iorwf	(lcd_4_bit_send_char_data@lcd+1)^0,w,c
  1951   0020B6  A4D8               	btfss	status,2,c
  1952   0020B8  EF60  F010         	goto	u1891
  1953   0020BC  EF62  F010         	goto	u1890
  1954   0020C0                     u1891:
  1955   0020C0  EF66  F010         	goto	l2782
  1956   0020C4                     u1890:
  1957   0020C4                     
  1958                           ;ECU_Layer/LCD/ecu_LCD.c: 80:      ret = (Std_ReturnType)0x00;
  1959   0020C4  0E00               	movlw	0
  1960   0020C6  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  1961                           
  1962                           ;ECU_Layer/LCD/ecu_LCD.c: 81:  }
  1963   0020C8  EF90  F010         	goto	l2784
  1964   0020CC                     l2782:
  1965                           
  1966                           ;ECU_Layer/LCD/ecu_LCD.c: 83:    ret = gpio_pin_write_logic(&(lcd->lcd_rs), HIGH);
  1967   0020CC  C00F  F001         	movff	lcd_4_bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1968   0020D0  C010  F002         	movff	lcd_4_bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1969   0020D4  0E01               	movlw	1
  1970   0020D6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1971   0020D8  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  1972   0020DC  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  1973                           
  1974                           ;ECU_Layer/LCD/ecu_LCD.c: 84:    ret = send_4bit_data(&(lcd),data<< 4);
  1975   0020DE  0E0F               	movlw	low lcd_4_bit_send_char_data@lcd
  1976   0020E0  6E0B               	movwf	send_4bit_data@lcd^0,c
  1977   0020E2  0E00               	movlw	high lcd_4_bit_send_char_data@lcd
  1978   0020E4  6E0C               	movwf	(send_4bit_data@lcd+1)^0,c
  1979   0020E6  3811               	swapf	lcd_4_bit_send_char_data@data^0,w,c
  1980   0020E8  0BF0               	andlw	240
  1981   0020EA  6E0D               	movwf	send_4bit_data@command^0,c
  1982   0020EC  EC6F  F011         	call	_send_4bit_data	;wreg free
  1983   0020F0  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  1984                           
  1985                           ;ECU_Layer/LCD/ecu_LCD.c: 85:    ret = lcd_4bit_send_enable_signal(&lcd);
  1986   0020F2  0E0F               	movlw	low lcd_4_bit_send_char_data@lcd
  1987   0020F4  6E0B               	movwf	lcd_4bit_send_enable_signal@lcd^0,c
  1988   0020F6  0E00               	movlw	high lcd_4_bit_send_char_data@lcd
  1989   0020F8  6E0C               	movwf	(lcd_4bit_send_enable_signal@lcd+1)^0,c
  1990   0020FA  EC7E  F012         	call	_lcd_4bit_send_enable_signal	;wreg free
  1991   0020FE  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  1992                           
  1993                           ;ECU_Layer/LCD/ecu_LCD.c: 86:    ret = send_4bit_data(&(lcd),data);
  1994   002100  0E0F               	movlw	low lcd_4_bit_send_char_data@lcd
  1995   002102  6E0B               	movwf	send_4bit_data@lcd^0,c
  1996   002104  0E00               	movlw	high lcd_4_bit_send_char_data@lcd
  1997   002106  6E0C               	movwf	(send_4bit_data@lcd+1)^0,c
  1998   002108  C011  F00D         	movff	lcd_4_bit_send_char_data@data,send_4bit_data@command
  1999   00210C  EC6F  F011         	call	_send_4bit_data	;wreg free
  2000   002110  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  2001                           
  2002                           ;ECU_Layer/LCD/ecu_LCD.c: 87:    ret = lcd_4bit_send_enable_signal(&lcd);
  2003   002112  0E0F               	movlw	low lcd_4_bit_send_char_data@lcd
  2004   002114  6E0B               	movwf	lcd_4bit_send_enable_signal@lcd^0,c
  2005   002116  0E00               	movlw	high lcd_4_bit_send_char_data@lcd
  2006   002118  6E0C               	movwf	(lcd_4bit_send_enable_signal@lcd+1)^0,c
  2007   00211A  EC7E  F012         	call	_lcd_4bit_send_enable_signal	;wreg free
  2008   00211E  6E12               	movwf	lcd_4_bit_send_char_data@ret^0,c
  2009   002120                     l2784:
  2010                           
  2011                           ;ECU_Layer/LCD/ecu_LCD.c: 90:  return ret;
  2012   002120  5012               	movf	lcd_4_bit_send_char_data@ret^0,w,c
  2013   002122  0012               	return		;funcret
  2014   002124                     __end_of_lcd_4_bit_send_char_data:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _convert_uint_8_string *****************
  2018 ;; Defined at:
  2019 ;;		line 360 in file "ECU_Layer/LCD/ecu_LCD.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  value           1    wreg     unsigned char 
  2022 ;;  str             2   82[COMRAM] PTR unsigned char 
  2023 ;;		 -> main@lcd_text(4), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  value           1   84[COMRAM] unsigned char 
  2026 ;;  ret             1   85[COMRAM] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      unsigned char 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;Total ram usage:        4 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 8
  2043 ;; This function calls:
  2044 ;;		_memset
  2045 ;;		_sprintf
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text9
  2052   002346                     __ptext9:
  2053                           	callstack 0
  2054   002346                     _convert_uint_8_string:
  2055                           	callstack 22
  2056                           
  2057                           ;incstack = 0
  2058                           ;convert_uint_8_string@value stored from wreg
  2059   002346  6E55               	movwf	convert_uint_8_string@value^0,c
  2060   002348                     
  2061                           ;ECU_Layer/LCD/ecu_LCD.c: 361: Std_ReturnType ret = (Std_ReturnType)0x01;
  2062   002348  0E01               	movlw	1
  2063   00234A  6E56               	movwf	convert_uint_8_string@ret^0,c
  2064   00234C                     
  2065                           ;ECU_Layer/LCD/ecu_LCD.c: 362:     if(str == ((void*)0)){
  2066   00234C  5053               	movf	convert_uint_8_string@str^0,w,c
  2067   00234E  1054               	iorwf	(convert_uint_8_string@str+1)^0,w,c
  2068   002350  A4D8               	btfss	status,2,c
  2069   002352  EFAD  F011         	goto	u2141
  2070   002356  EFAF  F011         	goto	u2140
  2071   00235A                     u2141:
  2072   00235A  EFB3  F011         	goto	l3136
  2073   00235E                     u2140:
  2074   00235E                     
  2075                           ;ECU_Layer/LCD/ecu_LCD.c: 363:      ret = (Std_ReturnType)0x00;
  2076   00235E  0E00               	movlw	0
  2077   002360  6E56               	movwf	convert_uint_8_string@ret^0,c
  2078                           
  2079                           ;ECU_Layer/LCD/ecu_LCD.c: 364:  }
  2080   002362  EFCE  F011         	goto	l3140
  2081   002366                     l3136:
  2082                           
  2083                           ;ECU_Layer/LCD/ecu_LCD.c: 366:         memset(str, "/0", 4);
  2084   002366  C053  F001         	movff	convert_uint_8_string@str,memset@dest
  2085   00236A  C054  F002         	movff	convert_uint_8_string@str+1,memset@dest+1
  2086   00236E  0E10               	movlw	high STR_6
  2087   002370  6E04               	movwf	(memset@c+1)^0,c
  2088   002372  0E2C               	movlw	low STR_6
  2089   002374  6E03               	movwf	memset@c^0,c
  2090   002376  0E00               	movlw	0
  2091   002378  6E06               	movwf	(memset@n+1)^0,c
  2092   00237A  0E04               	movlw	4
  2093   00237C  6E05               	movwf	memset@n^0,c
  2094   00237E  ECE5  F008         	call	_memset	;wreg free
  2095   002382                     
  2096                           ;ECU_Layer/LCD/ecu_LCD.c: 367:         sprintf(str, "%i", value);
  2097   002382  C053  F03F         	movff	convert_uint_8_string@str,sprintf@s
  2098   002386  C054  F040         	movff	convert_uint_8_string@str+1,sprintf@s+1
  2099   00238A  0E2F               	movlw	low STR_7
  2100   00238C  6E41               	movwf	sprintf@fmt^0,c
  2101   00238E  0E10               	movlw	high STR_7
  2102   002390  6E42               	movwf	(sprintf@fmt+1)^0,c
  2103   002392  C055  F043         	movff	convert_uint_8_string@value,?_sprintf+4
  2104   002396  6A44               	clrf	(?_sprintf+5)^0,c
  2105   002398  ECF8  F011         	call	_sprintf	;wreg free
  2106   00239C                     l3140:
  2107                           
  2108                           ;ECU_Layer/LCD/ecu_LCD.c: 369: return ret;
  2109   00239C  5056               	movf	convert_uint_8_string@ret^0,w,c
  2110   00239E  0012               	return		;funcret
  2111   0023A0                     __end_of_convert_uint_8_string:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _sprintf *****************
  2115 ;; Defined at:
  2116 ;;		line 9 in file "D:\Embeded-Compiler\pic\sources\c99\common\nf_sprintf.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  s               2   62[COMRAM] PTR unsigned char 
  2119 ;;		 -> main@lcd_text(4), 
  2120 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  2121 ;;		 -> STR_11(3), STR_9(3), STR_7(3), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  f              12   70[COMRAM] struct _IO_FILE
  2124 ;;  ap              2   68[COMRAM] PTR void [1]
  2125 ;;		 -> ?_sprintf(2), 
  2126 ;;  ret             2    0        int 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2   62[COMRAM] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;Total ram usage:       20 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 7
  2143 ;; This function calls:
  2144 ;;		_vfprintf
  2145 ;; This function is called by:
  2146 ;;		_convert_uint_8_string
  2147 ;;		_convert_uint_16_string
  2148 ;;		_convert_uint_32_string
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153   0023F0                     __ptext10:
  2154                           	callstack 0
  2155   0023F0                     _sprintf:
  2156                           	callstack 22
  2157   0023F0  0E43               	movlw	low (?_sprintf+4)
  2158   0023F2  6E45               	movwf	sprintf@ap^0,c
  2159   0023F4  0E00               	movlw	high (?_sprintf+4)
  2160   0023F6  6E46               	movwf	(sprintf@ap+1)^0,c
  2161   0023F8  C03F  F047         	movff	sprintf@s,sprintf@f
  2162   0023FC  C040  F048         	movff	sprintf@s+1,sprintf@f+1
  2163   002400  0E00               	movlw	0
  2164   002402  6E4B               	movwf	(sprintf@f+4)^0,c
  2165   002404  0E00               	movlw	0
  2166   002406  6E4A               	movwf	(sprintf@f+3)^0,c
  2167   002408  0E00               	movlw	0
  2168   00240A  6E52               	movwf	(sprintf@f+11)^0,c
  2169   00240C  0E00               	movlw	0
  2170   00240E  6E51               	movwf	(sprintf@f+10)^0,c
  2171   002410  0E47               	movlw	low sprintf@f
  2172   002412  6E37               	movwf	vfprintf@fp^0,c
  2173   002414  0E00               	movlw	high sprintf@f
  2174   002416  6E38               	movwf	(vfprintf@fp+1)^0,c
  2175   002418  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  2176   00241C  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2177   002420  0E45               	movlw	low sprintf@ap
  2178   002422  6E3B               	movwf	vfprintf@ap^0,c
  2179   002424  0E00               	movlw	high sprintf@ap
  2180   002426  6E3C               	movwf	(vfprintf@ap+1)^0,c
  2181   002428  ECD0  F011         	call	_vfprintf	;wreg free
  2182   00242C  504A               	movf	(sprintf@f+3)^0,w,c
  2183   00242E  243F               	addwf	sprintf@s^0,w,c
  2184   002430  6ED9               	movwf	fsr2l,c
  2185   002432  504B               	movf	(sprintf@f+4)^0,w,c
  2186   002434  2040               	addwfc	(sprintf@s+1)^0,w,c
  2187   002436  6EDA               	movwf	fsr2h,c
  2188   002438  6ADF               	clrf	indf2,c
  2189   00243A  0012               	return		;funcret
  2190   00243C                     __end_of_sprintf:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _vfprintf *****************
  2194 ;; Defined at:
  2195 ;;		line 1546 in file "D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2198 ;;		 -> sprintf@f(12), 
  2199 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
  2200 ;;		 -> STR_11(3), STR_9(3), STR_7(3), 
  2201 ;;  ap              2   58[COMRAM] PTR PTR void 
  2202 ;;		 -> sprintf@ap(2), 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
  2205 ;;		 -> STR_11(3), STR_9(3), STR_7(3), 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  2   54[COMRAM] int 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;Total ram usage:        8 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 6
  2222 ;; This function calls:
  2223 ;;		_vfpfcnvrt
  2224 ;; This function is called by:
  2225 ;;		_sprintf
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text11
  2230   0023A0                     __ptext11:
  2231                           	callstack 0
  2232   0023A0                     _vfprintf:
  2233                           	callstack 22
  2234   0023A0                     
  2235                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1546: int vfprintf(FILE *fp, const
      +                           char *fmt, va_list ap);D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1547: {;D:\
      +                          Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1549:     char *cfmt;;D:\Embeded-Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2236   0023A0  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  2237   0023A4  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2238                           
  2239                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1555:     while (*cfmt) {
  2240   0023A8  EFE4  F011         	goto	l2984
  2241   0023AC                     l2982:
  2242                           
  2243                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvrt(fp, &cfmt, ap);
  2244   0023AC  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  2245   0023B0  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2246   0023B4  0E3D               	movlw	low vfprintf@cfmt
  2247   0023B6  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  2248   0023B8  0E00               	movlw	high vfprintf@cfmt
  2249   0023BA  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2250   0023BC  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2251   0023C0  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2252   0023C4  ECE0  F00A         	call	_vfpfcnvrt	;wreg free
  2253   0023C8                     l2984:
  2254                           
  2255                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1555:     while (*cfmt) {
  2256   0023C8  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2257   0023CC  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2258   0023D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2259   0023D0  6AF8               	clrf	tblptru,c
  2260   0023D2                     	endif
  2261   0023D2                     	if	0	;tblptru may be non-zero
  2262   0023D2                     	endif
  2263   0023D2  0008               	tblrd		*
  2264   0023D4  50F5               	movf	tablat,w,c
  2265   0023D6  0900               	iorlw	0
  2266   0023D8  A4D8               	btfss	status,2,c
  2267   0023DA  EFF1  F011         	goto	u2001
  2268   0023DE  EFF3  F011         	goto	u2000
  2269   0023E2                     u2001:
  2270   0023E2  EFD6  F011         	goto	l2982
  2271   0023E6                     u2000:
  2272   0023E6                     
  2273                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2274   0023E6  0E00               	movlw	0
  2275   0023E8  6E38               	movwf	(?_vfprintf+1)^0,c
  2276   0023EA  0E00               	movlw	0
  2277   0023EC  6E37               	movwf	?_vfprintf^0,c
  2278   0023EE  0012               	return		;funcret
  2279   0023F0                     __end_of_vfprintf:
  2280                           	callstack 0
  2281                           
  2282 ;; *************** function _vfpfcnvrt *****************
  2283 ;; Defined at:
  2284 ;;		line 1048 in file "D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  2287 ;;		 -> sprintf@f(12), 
  2288 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
  2289 ;;		 -> vfprintf@cfmt(2), 
  2290 ;;  ap              2   44[COMRAM] PTR PTR void 
  2291 ;;		 -> sprintf@ap(2), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  convarg         4   48[COMRAM] struct .
  2294 ;;  cp              2   52[COMRAM] PTR unsigned char 
  2295 ;;		 -> STR_11(3), STR_9(3), STR_7(3), 
  2296 ;;  i               2    0        int 
  2297 ;;  done            2    0        int 
  2298 ;;  c               1    0        unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2308 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;Total ram usage:       14 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 5
  2315 ;; This function calls:
  2316 ;;		_dtoa
  2317 ;;		_fputc
  2318 ;; This function is called by:
  2319 ;;		_vfprintf
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text12
  2324   0015C0                     __ptext12:
  2325                           	callstack 0
  2326   0015C0                     _vfpfcnvrt:
  2327                           	callstack 22
  2328   0015C0                     
  2329                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(FILE *fp, char *fm
      +                          t[], va_list ap);D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1049: {;D:\Embeded
      +                          -Compiler\pic\sources\c99\common\doprnt.c: 1050:     char c, *cp;;D:\Embeded-Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 1051:     int done, i;;D:\Embeded-Compiler\pic\sources\c9
      +                          9\common\doprnt.c: 1059:  } convarg;;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c
      +                          : 1062:     if ((*fmt)[0] == '%') {
  2330   0015C0  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2331   0015C4  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2332   0015C8  CFDE FFF6          	movff	postinc2,tblptrl
  2333   0015CC  CFDD FFF7          	movff	postdec2,tblptrh
  2334   0015D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2335   0015D0  6AF8               	clrf	tblptru,c
  2336   0015D2                     	endif
  2337   0015D2                     	if	0	;tblptru may be non-zero
  2338   0015D2                     	endif
  2339   0015D2  0008               	tblrd		*
  2340   0015D4  50F5               	movf	tablat,w,c
  2341   0015D6  0A25               	xorlw	37
  2342   0015D8  A4D8               	btfss	status,2,c
  2343   0015DA  EFF1  F00A         	goto	u1931
  2344   0015DE  EFF3  F00A         	goto	u1930
  2345   0015E2                     u1931:
  2346   0015E2  EF5F  F00B         	goto	l2838
  2347   0015E6                     u1930:
  2348   0015E6                     
  2349                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1063:         ++*fmt;
  2350   0015E6  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351   0015EA  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352   0015EE  2ADE               	incf	postinc2,f,c
  2353   0015F0  0E00               	movlw	0
  2354   0015F2  22DD               	addwfc	postdec2,f,c
  2355   0015F4                     
  2356                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1065:         flags = width = 0;
  2357   0015F4  0E00               	movlw	0
  2358   0015F6  6E6F               	movwf	(_width+1)^0,c
  2359   0015F8  0E00               	movlw	0
  2360   0015FA  6E6E               	movwf	_width^0,c
  2361   0015FC  C06E  F072         	movff	_width,_flags
  2362   001600                     
  2363                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1066:         prec = -1;
  2364   001600  6870               	setf	_prec^0,c
  2365   001602  6871               	setf	(_prec+1)^0,c
  2366   001604                     
  2367                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt;
  2368   001604  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2369   001608  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2370   00160C  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  2371   001610  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
  2372   001614                     
  2373                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1213:   if (*cp == 'd' || *cp == '
      +                          i') {
  2374   001614  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2375   001618  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2376   00161C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2377   00161C  6AF8               	clrf	tblptru,c
  2378   00161E                     	endif
  2379   00161E                     	if	0	;tblptru may be non-zero
  2380   00161E                     	endif
  2381   00161E  0008               	tblrd		*
  2382   001620  50F5               	movf	tablat,w,c
  2383   001622  0A64               	xorlw	100
  2384   001624  B4D8               	btfsc	status,2,c
  2385   001626  EF17  F00B         	goto	u1941
  2386   00162A  EF19  F00B         	goto	u1940
  2387   00162E                     u1941:
  2388   00162E  EF28  F00B         	goto	l2828
  2389   001632                     u1940:
  2390   001632  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2391   001636  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2392   00163A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2393   00163A  6AF8               	clrf	tblptru,c
  2394   00163C                     	endif
  2395   00163C                     	if	0	;tblptru may be non-zero
  2396   00163C                     	endif
  2397   00163C  0008               	tblrd		*
  2398   00163E  50F5               	movf	tablat,w,c
  2399   001640  0A69               	xorlw	105
  2400   001642  A4D8               	btfss	status,2,c
  2401   001644  EF26  F00B         	goto	u1951
  2402   001648  EF28  F00B         	goto	u1950
  2403   00164C                     u1951:
  2404   00164C  EF56  F00B         	goto	l2834
  2405   001650                     u1950:
  2406   001650                     l2828:
  2407                           
  2408                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1256:    convarg.sint = (vfpf_sint
      +                          _t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2409   001650  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2410   001654  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2411   001658  CFDF F02F          	movff	indf2,??_vfpfcnvrt
  2412   00165C  0E02               	movlw	2
  2413   00165E  26DE               	addwf	postinc2,f,c
  2414   001660  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
  2415   001664  0E00               	movlw	0
  2416   001666  22DD               	addwfc	postdec2,f,c
  2417   001668  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2418   00166C  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2419   001670  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
  2420   001674  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
  2421                           
  2422                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1258:    *fmt = cp+1;
  2423   001678  0E01               	movlw	1
  2424   00167A  2435               	addwf	vfpfcnvrt@cp^0,w,c
  2425   00167C  6E2F               	movwf	??_vfpfcnvrt^0,c
  2426   00167E  0E00               	movlw	0
  2427   001680  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2428   001682  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
  2429   001684  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2430   001688  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2431   00168C  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2432   001690  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2433   001694                     
  2434                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1259:    return (void) dtoa(fp, co
      +                          nvarg.sint);;	Return value of _vfpfcnvrt is never used
  2435   001694  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2436   001698  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2437   00169C  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2438   0016A0  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2439   0016A4  EC1B  F008         	call	_dtoa	;wreg free
  2440   0016A8  EF74  F00B         	goto	l1232
  2441   0016AC                     l2834:
  2442                           
  2443                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1535:         ++*fmt;
  2444   0016AC  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2445   0016B0  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2446   0016B4  2ADE               	incf	postinc2,f,c
  2447   0016B6  0E00               	movlw	0
  2448   0016B8  22DD               	addwfc	postdec2,f,c
  2449   0016BA  EF74  F00B         	goto	l1232
  2450   0016BE                     l2838:
  2451                           
  2452                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 1540:     fputc((int)(*fmt)[0], fp
      +                          );
  2453   0016BE  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2454   0016C2  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2455   0016C6  CFDE FFF6          	movff	postinc2,tblptrl
  2456   0016CA  CFDD FFF7          	movff	postdec2,tblptrh
  2457   0016CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2458   0016CE  6AF8               	clrf	tblptru,c
  2459   0016D0                     	endif
  2460   0016D0                     	if	0	;tblptru may be non-zero
  2461   0016D0                     	endif
  2462   0016D0  0008               	tblrd		*
  2463   0016D2  50F5               	movf	tablat,w,c
  2464   0016D4  6E01               	movwf	fputc@c^0,c
  2465   0016D6  6A02               	clrf	(fputc@c+1)^0,c
  2466   0016D8  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2467   0016DC  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2468   0016E0  EC9D  F00C         	call	_fputc	;wreg free
  2469   0016E4  EF56  F00B         	goto	l2834
  2470   0016E8                     l1232:
  2471   0016E8  0012               	return		;funcret
  2472   0016EA                     __end_of_vfpfcnvrt:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _dtoa *****************
  2476 ;; Defined at:
  2477 ;;		line 470 in file "D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2480 ;;		 -> sprintf@f(12), 
  2481 ;;  d               2   29[COMRAM] int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  i               2   37[COMRAM] int 
  2484 ;;  w               2   35[COMRAM] int 
  2485 ;;  p               2   33[COMRAM] int 
  2486 ;;  s               1   39[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:       13 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 4
  2503 ;; This function calls:
  2504 ;;		___awdiv
  2505 ;;		___awmod
  2506 ;;		_abs
  2507 ;;		_pad
  2508 ;; This function is called by:
  2509 ;;		_vfpfcnvrt
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text13
  2514   001036                     __ptext13:
  2515                           	callstack 0
  2516   001036                     _dtoa:
  2517                           	callstack 22
  2518   001036                     
  2519                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 470: static void dtoa(FILE *fp, vf
      +                          pf_sint_t d);D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 471: {;D:\Embeded-Comp
      +                          iler\pic\sources\c99\common\doprnt.c: 472:  char s;;D:\Embeded-Compiler\pic\sources\c99\
      +                          common\doprnt.c: 473:     int i, p, w;;D:\Embeded-Compiler\pic\sources\c99\common\doprnt
      +                          .c: 476:     s = d < 0 ? 1 : 0;
  2520   001036  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  2521   001038  EF20  F008         	goto	u1731
  2522   00103C  EF23  F008         	goto	u1730
  2523   001040                     u1731:
  2524   001040  0E01               	movlw	1
  2525   001042  EF24  F008         	goto	u1740
  2526   001046                     u1730:
  2527   001046  0E00               	movlw	0
  2528   001048                     u1740:
  2529   001048  6E28               	movwf	dtoa@s^0,c
  2530   00104A                     
  2531                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2532   00104A  5028               	movf	dtoa@s^0,w,c
  2533   00104C  B4D8               	btfsc	status,2,c
  2534   00104E  EF2B  F008         	goto	u1751
  2535   001052  EF2D  F008         	goto	u1750
  2536   001056                     u1751:
  2537   001056  EF31  F008         	goto	l2680
  2538   00105A                     u1750:
  2539   00105A                     
  2540                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 478:         d = -d;
  2541   00105A  6C1E               	negf	dtoa@d^0,c
  2542   00105C  1E1F               	comf	(dtoa@d+1)^0,f,c
  2543   00105E  B0D8               	btfsc	status,0,c
  2544   001060  2A1F               	incf	(dtoa@d+1)^0,f,c
  2545   001062                     l2680:
  2546                           
  2547                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 487:     p = (0 <= prec) ? prec : 
      +                          1;
  2548   001062  BE71               	btfsc	(_prec+1)^0,7,c
  2549   001064  EF38  F008         	goto	u1760
  2550   001068  EF36  F008         	goto	u1761
  2551   00106C                     u1761:
  2552   00106C  EF3E  F008         	goto	l1211
  2553   001070                     u1760:
  2554   001070  0E00               	movlw	0
  2555   001072  6E23               	movwf	(dtoa@p+1)^0,c
  2556   001074  0E01               	movlw	1
  2557   001076  6E22               	movwf	dtoa@p^0,c
  2558   001078  EF42  F008         	goto	l1213
  2559   00107C                     l1211:
  2560   00107C  C070  F022         	movff	_prec,dtoa@p
  2561   001080  C071  F023         	movff	_prec+1,dtoa@p+1
  2562   001084                     l1213:
  2563                           
  2564                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 488:     w = width;
  2565   001084  C06E  F024         	movff	_width,dtoa@w
  2566   001088  C06F  F025         	movff	_width+1,dtoa@w+1
  2567   00108C                     
  2568                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 489:     if (s
  2569   00108C  5028               	movf	dtoa@s^0,w,c
  2570   00108E  B4D8               	btfsc	status,2,c
  2571   001090  EF4C  F008         	goto	u1771
  2572   001094  EF4E  F008         	goto	u1770
  2573   001098                     u1771:
  2574   001098  EF65  F008         	goto	l1214
  2575   00109C                     u1770:
  2576   00109C                     
  2577                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 493:     ) {;D:\Embeded-Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 494:         --w;
  2578   00109C  0624               	decf	dtoa@w^0,f,c
  2579   00109E  A0D8               	btfss	status,0,c
  2580   0010A0  0625               	decf	(dtoa@w+1)^0,f,c
  2581   0010A2                     
  2582                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-' : '+';
  2583   0010A2  5028               	movf	dtoa@s^0,w,c
  2584   0010A4  A4D8               	btfss	status,2,c
  2585   0010A6  EF57  F008         	goto	u1781
  2586   0010AA  EF59  F008         	goto	u1780
  2587   0010AE                     u1781:
  2588   0010AE  EF5F  F008         	goto	l2692
  2589   0010B2                     u1780:
  2590   0010B2  0E00               	movlw	0
  2591   0010B4  6E21               	movwf	(_dtoa$1399+1)^0,c
  2592   0010B6  0E2B               	movlw	43
  2593   0010B8  6E20               	movwf	_dtoa$1399^0,c
  2594   0010BA  EF63  F008         	goto	l2694
  2595   0010BE                     l2692:
  2596   0010BE  0E00               	movlw	0
  2597   0010C0  6E21               	movwf	(_dtoa$1399+1)^0,c
  2598   0010C2  0E2D               	movlw	45
  2599   0010C4  6E20               	movwf	_dtoa$1399^0,c
  2600   0010C6                     l2694:
  2601   0010C6  C020  F028         	movff	_dtoa$1399,dtoa@s
  2602   0010CA                     l1214:
  2603                           
  2604                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 505:     i = sizeof(dbuf) - 1;
  2605   0010CA  0E00               	movlw	0
  2606   0010CC  6E27               	movwf	(dtoa@i+1)^0,c
  2607   0010CE  0E1F               	movlw	31
  2608   0010D0  6E26               	movwf	dtoa@i^0,c
  2609   0010D2                     
  2610                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] = '\0';
  2611   0010D2  0E00               	movlw	0
  2612   0010D4  0100               	movlb	0	; () banked
  2613   0010D6  6FD7               	movwf	(_dbuf+31)& (0+255),b
  2614                           
  2615                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 507:     while (!(i < 1) && (d || 
      +                          (0 < p)
  2616   0010D8  EF9E  F008         	goto	l2708
  2617   0010DC                     l2698:
  2618                           
  2619                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 511:     )) {;D:\Embeded-Compiler\
      +                          pic\sources\c99\common\doprnt.c: 512:         --i;
  2620   0010DC  0626               	decf	dtoa@i^0,f,c
  2621   0010DE  A0D8               	btfss	status,0,c
  2622   0010E0  0627               	decf	(dtoa@i+1)^0,f,c
  2623   0010E2                     
  2624                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 513:         dbuf[i] = (char)((int
      +                          )'0' + abs(d % 10));
  2625   0010E2  0EB8               	movlw	low _dbuf
  2626   0010E4  2426               	addwf	dtoa@i^0,w,c
  2627   0010E6  6ED9               	movwf	fsr2l,c
  2628   0010E8  0E00               	movlw	high _dbuf
  2629   0010EA  2027               	addwfc	(dtoa@i+1)^0,w,c
  2630   0010EC  6EDA               	movwf	fsr2h,c
  2631   0010EE  C01E  F001         	movff	dtoa@d,___awmod@dividend
  2632   0010F2  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2633   0010F6  0E00               	movlw	0
  2634   0010F8  6E04               	movwf	(___awmod@divisor+1)^0,c
  2635   0010FA  0E0A               	movlw	10
  2636   0010FC  6E03               	movwf	___awmod@divisor^0,c
  2637   0010FE  ECBF  F00D         	call	___awmod	;wreg free
  2638   001102  C001  F007         	movff	?___awmod,abs@a
  2639   001106  C002  F008         	movff	?___awmod+1,abs@a+1
  2640   00110A  EC40  F012         	call	_abs	;wreg free
  2641   00110E  5007               	movf	?_abs^0,w,c
  2642   001110  0F30               	addlw	48
  2643   001112  6EDF               	movwf	indf2,c
  2644   001114                     
  2645                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 514:         --p;
  2646   001114  0622               	decf	dtoa@p^0,f,c
  2647   001116  A0D8               	btfss	status,0,c
  2648   001118  0623               	decf	(dtoa@p+1)^0,f,c
  2649   00111A                     
  2650                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 515:         --w;
  2651   00111A  0624               	decf	dtoa@w^0,f,c
  2652   00111C  A0D8               	btfss	status,0,c
  2653   00111E  0625               	decf	(dtoa@w+1)^0,f,c
  2654   001120                     
  2655                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 516:         d = d / 10;
  2656   001120  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  2657   001124  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2658   001128  0E00               	movlw	0
  2659   00112A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2660   00112C  0E0A               	movlw	10
  2661   00112E  6E03               	movwf	___awdiv@divisor^0,c
  2662   001130  EC02  F00D         	call	___awdiv	;wreg free
  2663   001134  C001  F01E         	movff	?___awdiv,dtoa@d
  2664   001138  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  2665   00113C                     l2708:
  2666                           
  2667                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 507:     while (!(i < 1) && (d || 
      +                          (0 < p)
  2668   00113C  BE27               	btfsc	(dtoa@i+1)^0,7,c
  2669   00113E  EFA9  F008         	goto	u1791
  2670   001142  5027               	movf	(dtoa@i+1)^0,w,c
  2671   001144  E108               	bnz	u1790
  2672   001146  0426               	decf	dtoa@i^0,w,c
  2673   001148  A0D8               	btfss	status,0,c
  2674   00114A  EFA9  F008         	goto	u1791
  2675   00114E  EFAB  F008         	goto	u1790
  2676   001152                     u1791:
  2677   001152  EFC1  F008         	goto	l2714
  2678   001156                     u1790:
  2679   001156  501E               	movf	dtoa@d^0,w,c
  2680   001158  101F               	iorwf	(dtoa@d+1)^0,w,c
  2681   00115A  A4D8               	btfss	status,2,c
  2682   00115C  EFB2  F008         	goto	u1801
  2683   001160  EFB4  F008         	goto	u1800
  2684   001164                     u1801:
  2685   001164  EF6E  F008         	goto	l2698
  2686   001168                     u1800:
  2687   001168  BE23               	btfsc	(dtoa@p+1)^0,7,c
  2688   00116A  EFC1  F008         	goto	u1810
  2689   00116E  5023               	movf	(dtoa@p+1)^0,w,c
  2690   001170  E106               	bnz	u1811
  2691   001172  0422               	decf	dtoa@p^0,w,c
  2692   001174  B0D8               	btfsc	status,0,c
  2693   001176  EFBF  F008         	goto	u1811
  2694   00117A  EFC1  F008         	goto	u1810
  2695   00117E                     u1811:
  2696   00117E  EF6E  F008         	goto	l2698
  2697   001182                     u1810:
  2698   001182                     l2714:
  2699                           
  2700                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 520:     if (s != 0) {
  2701   001182  5028               	movf	dtoa@s^0,w,c
  2702   001184  B4D8               	btfsc	status,2,c
  2703   001186  EFC7  F008         	goto	u1821
  2704   00118A  EFC9  F008         	goto	u1820
  2705   00118E                     u1821:
  2706   00118E  EFD4  F008         	goto	l2720
  2707   001192                     u1820:
  2708   001192                     
  2709                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 521:         --i;
  2710   001192  0626               	decf	dtoa@i^0,f,c
  2711   001194  A0D8               	btfss	status,0,c
  2712   001196  0627               	decf	(dtoa@i+1)^0,f,c
  2713   001198                     
  2714                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 522:         dbuf[i] = s;
  2715   001198  0EB8               	movlw	low _dbuf
  2716   00119A  2426               	addwf	dtoa@i^0,w,c
  2717   00119C  6ED9               	movwf	fsr2l,c
  2718   00119E  0E00               	movlw	high _dbuf
  2719   0011A0  2027               	addwfc	(dtoa@i+1)^0,w,c
  2720   0011A2  6EDA               	movwf	fsr2h,c
  2721   0011A4  C028  FFDF         	movff	dtoa@s,indf2
  2722   0011A8                     l2720:
  2723                           
  2724                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 526:     return (void) pad(fp, &db
      +                          uf[i], w);
  2725   0011A8  C01C  F011         	movff	dtoa@fp,pad@fp
  2726   0011AC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2727   0011B0  0EB8               	movlw	low _dbuf
  2728   0011B2  2426               	addwf	dtoa@i^0,w,c
  2729   0011B4  6E13               	movwf	pad@buf^0,c
  2730   0011B6  0E00               	movlw	high _dbuf
  2731   0011B8  2027               	addwfc	(dtoa@i+1)^0,w,c
  2732   0011BA  6E14               	movwf	(pad@buf+1)^0,c
  2733   0011BC  C024  F015         	movff	dtoa@w,pad@p
  2734   0011C0  C025  F016         	movff	dtoa@w+1,pad@p+1
  2735   0011C4  EC1C  F010         	call	_pad	;wreg free
  2736   0011C8  0012               	return		;funcret
  2737   0011CA                     __end_of_dtoa:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _pad *****************
  2741 ;; Defined at:
  2742 ;;		line 152 in file "D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2745 ;;		 -> sprintf@f(12), 
  2746 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2747 ;;		 -> dbuf(32), 
  2748 ;;  p               2   20[COMRAM] int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  w               2   25[COMRAM] int 
  2751 ;;  i               2   23[COMRAM] int 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:       11 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 3
  2768 ;; This function calls:
  2769 ;;		_fputc
  2770 ;;		_fputs
  2771 ;; This function is called by:
  2772 ;;		_dtoa
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text14
  2777   002038                     __ptext14:
  2778                           	callstack 0
  2779   002038                     _pad:
  2780                           	callstack 22
  2781   002038                     
  2782                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 152: static void pad(FILE *fp, cha
      +                          r *buf, int p);D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 153: {;D:\Embeded-Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 154:     int i, w;;D:\Embeded-Compiler\pic\sourc
      +                          es\c99\common\doprnt.c: 164:     w = (p < 0) ? 0 : p;
  2783   002038  BE16               	btfsc	(pad@p+1)^0,7,c
  2784   00203A  EF21  F010         	goto	u1641
  2785   00203E  EF23  F010         	goto	u1640
  2786   002042                     u1641:
  2787   002042  EF29  F010         	goto	l2600
  2788   002046                     u1640:
  2789   002046  C015  F01A         	movff	pad@p,pad@w
  2790   00204A  C016  F01B         	movff	pad@p+1,pad@w+1
  2791   00204E  EF2D  F010         	goto	l1202
  2792   002052                     l2600:
  2793   002052  0E00               	movlw	0
  2794   002054  6E1B               	movwf	(pad@w+1)^0,c
  2795   002056  0E00               	movlw	0
  2796   002058  6E1A               	movwf	pad@w^0,c
  2797   00205A                     l1202:
  2798                           
  2799                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2800   00205A  0E00               	movlw	0
  2801   00205C  6E19               	movwf	(pad@i+1)^0,c
  2802   00205E  0E00               	movlw	0
  2803   002060  6E18               	movwf	pad@i^0,c
  2804                           
  2805                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 166:     while (i < w) {
  2806   002062  EF3F  F010         	goto	l2606
  2807   002066                     l2602:
  2808                           
  2809                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 167:         fputc(' ', fp);
  2810   002066  0E00               	movlw	0
  2811   002068  6E02               	movwf	(fputc@c+1)^0,c
  2812   00206A  0E20               	movlw	32
  2813   00206C  6E01               	movwf	fputc@c^0,c
  2814   00206E  C011  F003         	movff	pad@fp,fputc@fp
  2815   002072  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2816   002076  EC9D  F00C         	call	_fputc	;wreg free
  2817   00207A                     
  2818                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2819   00207A  4A18               	infsnz	pad@i^0,f,c
  2820   00207C  2A19               	incf	(pad@i+1)^0,f,c
  2821   00207E                     l2606:
  2822                           
  2823                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 166:     while (i < w) {
  2824   00207E  501A               	movf	pad@w^0,w,c
  2825   002080  5C18               	subwf	pad@i^0,w,c
  2826   002082  5019               	movf	(pad@i+1)^0,w,c
  2827   002084  0A80               	xorlw	128
  2828   002086  6E17               	movwf	??_pad^0,c
  2829   002088  501B               	movf	(pad@w+1)^0,w,c
  2830   00208A  0A80               	xorlw	128
  2831   00208C  5817               	subwfb	??_pad^0,w,c
  2832   00208E  A0D8               	btfss	status,0,c
  2833   002090  EF4C  F010         	goto	u1651
  2834   002094  EF4E  F010         	goto	u1650
  2835   002098                     u1651:
  2836   002098  EF33  F010         	goto	l2602
  2837   00209C                     u1650:
  2838   00209C                     
  2839                           ;D:\Embeded-Compiler\pic\sources\c99\common\doprnt.c: 175:         fputs((const char *)b
      +                          uf, fp);
  2840   00209C  C013  F00A         	movff	pad@buf,fputs@s
  2841   0020A0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2842   0020A4  C011  F00C         	movff	pad@fp,fputs@fp
  2843   0020A8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2844   0020AC  EC1E  F012         	call	_fputs	;wreg free
  2845   0020B0  0012               	return		;funcret
  2846   0020B2                     __end_of_pad:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _fputs *****************
  2850 ;; Defined at:
  2851 ;;		line 8 in file "D:\Embeded-Compiler\pic\sources\c99\common\nf_fputs.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2854 ;;		 -> dbuf(32), 
  2855 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2856 ;;		 -> sprintf@f(12), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  i               2   14[COMRAM] int 
  2859 ;;  c               1   13[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    9[COMRAM] int 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;Total ram usage:        7 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 2
  2876 ;; This function calls:
  2877 ;;		_fputc
  2878 ;; This function is called by:
  2879 ;;		_pad
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text15
  2884   00243C                     __ptext15:
  2885                           	callstack 0
  2886   00243C                     _fputs:
  2887                           	callstack 22
  2888   00243C  0E00               	movlw	0
  2889   00243E  6E10               	movwf	(fputs@i+1)^0,c
  2890   002440  0E00               	movlw	0
  2891   002442  6E0F               	movwf	fputs@i^0,c
  2892   002444  EF2F  F012         	goto	l2488
  2893   002448                     l2484:
  2894   002448  C00E  F001         	movff	fputs@c,fputc@c
  2895   00244C  6A02               	clrf	(fputc@c+1)^0,c
  2896   00244E  C00C  F003         	movff	fputs@fp,fputc@fp
  2897   002452  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2898   002456  EC9D  F00C         	call	_fputc	;wreg free
  2899   00245A  4A0F               	infsnz	fputs@i^0,f,c
  2900   00245C  2A10               	incf	(fputs@i+1)^0,f,c
  2901   00245E                     l2488:
  2902   00245E  500F               	movf	fputs@i^0,w,c
  2903   002460  240A               	addwf	fputs@s^0,w,c
  2904   002462  6ED9               	movwf	fsr2l,c
  2905   002464  5010               	movf	(fputs@i+1)^0,w,c
  2906   002466  200B               	addwfc	(fputs@s+1)^0,w,c
  2907   002468  6EDA               	movwf	fsr2h,c
  2908   00246A  50DF               	movf	indf2,w,c
  2909   00246C  6E0E               	movwf	fputs@c^0,c
  2910   00246E  500E               	movf	fputs@c^0,w,c
  2911   002470  A4D8               	btfss	status,2,c
  2912   002472  EF3D  F012         	goto	u1461
  2913   002476  EF3F  F012         	goto	u1460
  2914   00247A                     u1461:
  2915   00247A  EF24  F012         	goto	l2484
  2916   00247E                     u1460:
  2917   00247E  0012               	return		;funcret
  2918   002480                     __end_of_fputs:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _fputc *****************
  2922 ;; Defined at:
  2923 ;;		line 8 in file "D:\Embeded-Compiler\pic\sources\c99\common\nf_fputc.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  c               2    0[COMRAM] int 
  2926 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2927 ;;		 -> sprintf@f(12), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    0[COMRAM] int 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        9 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 1
  2946 ;; This function calls:
  2947 ;;		_putch
  2948 ;; This function is called by:
  2949 ;;		_pad
  2950 ;;		_vfpfcnvrt
  2951 ;;		_fputs
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text16
  2956   00193A                     __ptext16:
  2957                           	callstack 0
  2958   00193A                     _fputc:
  2959                           	callstack 25
  2960   00193A  5003               	movf	fputc@fp^0,w,c
  2961   00193C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2962   00193E  B4D8               	btfsc	status,2,c
  2963   001940  EFA4  F00C         	goto	u1421
  2964   001944  EFA6  F00C         	goto	u1420
  2965   001948                     u1421:
  2966   001948  EFAF  F00C         	goto	l2472
  2967   00194C                     u1420:
  2968   00194C  5003               	movf	fputc@fp^0,w,c
  2969   00194E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2970   001950  A4D8               	btfss	status,2,c
  2971   001952  EFAD  F00C         	goto	u1431
  2972   001956  EFAF  F00C         	goto	u1430
  2973   00195A                     u1431:
  2974   00195A  EFB4  F00C         	goto	l2474
  2975   00195E                     u1430:
  2976   00195E                     l2472:
  2977   00195E  5001               	movf	fputc@c^0,w,c
  2978   001960  ECE3  F012         	call	_putch
  2979   001964  EF01  F00D         	goto	l1257
  2980   001968                     l2474:
  2981   001968  EE20 F00A          	lfsr	2,10
  2982   00196C  5003               	movf	fputc@fp^0,w,c
  2983   00196E  26D9               	addwf	fsr2l,f,c
  2984   001970  5004               	movf	(fputc@fp+1)^0,w,c
  2985   001972  22DA               	addwfc	fsr2h,f,c
  2986   001974  50DE               	movf	postinc2,w,c
  2987   001976  10DE               	iorwf	postinc2,w,c
  2988   001978  B4D8               	btfsc	status,2,c
  2989   00197A  EFC1  F00C         	goto	u1441
  2990   00197E  EFC3  F00C         	goto	u1440
  2991   001982                     u1441:
  2992   001982  EFDE  F00C         	goto	l2478
  2993   001986                     u1440:
  2994   001986  EE20 F00A          	lfsr	2,10
  2995   00198A  5003               	movf	fputc@fp^0,w,c
  2996   00198C  26D9               	addwf	fsr2l,f,c
  2997   00198E  5004               	movf	(fputc@fp+1)^0,w,c
  2998   001990  22DA               	addwfc	fsr2h,f,c
  2999   001992  EE10 F003          	lfsr	1,3
  3000   001996  5003               	movf	fputc@fp^0,w,c
  3001   001998  26E1               	addwf	fsr1l,f,c
  3002   00199A  5004               	movf	(fputc@fp+1)^0,w,c
  3003   00199C  22E2               	addwfc	fsr1h,f,c
  3004   00199E  50DE               	movf	postinc2,w,c
  3005   0019A0  5CE6               	subwf	postinc1,w,c
  3006   0019A2  50E6               	movf	postinc1,w,c
  3007   0019A4  0A80               	xorlw	128
  3008   0019A6  6E09               	movwf	(??_fputc+4)^0,c
  3009   0019A8  50DE               	movf	postinc2,w,c
  3010   0019AA  0A80               	xorlw	128
  3011   0019AC  5809               	subwfb	(??_fputc+4)^0,w,c
  3012   0019AE  B0D8               	btfsc	status,0,c
  3013   0019B0  EFDC  F00C         	goto	u1451
  3014   0019B4  EFDE  F00C         	goto	u1450
  3015   0019B8                     u1451:
  3016   0019B8  EF01  F00D         	goto	l1257
  3017   0019BC                     u1450:
  3018   0019BC                     l2478:
  3019   0019BC  EE20 F003          	lfsr	2,3
  3020   0019C0  5003               	movf	fputc@fp^0,w,c
  3021   0019C2  26D9               	addwf	fsr2l,f,c
  3022   0019C4  5004               	movf	(fputc@fp+1)^0,w,c
  3023   0019C6  22DA               	addwfc	fsr2h,f,c
  3024   0019C8  CFDE F005          	movff	postinc2,??_fputc
  3025   0019CC  CFDD F006          	movff	postdec2,??_fputc+1
  3026   0019D0  C003  FFD9         	movff	fputc@fp,fsr2l
  3027   0019D4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3028   0019D8  CFDE F007          	movff	postinc2,??_fputc+2
  3029   0019DC  CFDD F008          	movff	postdec2,??_fputc+3
  3030   0019E0  5005               	movf	??_fputc^0,w,c
  3031   0019E2  2407               	addwf	(??_fputc+2)^0,w,c
  3032   0019E4  6ED9               	movwf	fsr2l,c
  3033   0019E6  5006               	movf	(??_fputc+1)^0,w,c
  3034   0019E8  2008               	addwfc	(??_fputc+3)^0,w,c
  3035   0019EA  6EDA               	movwf	fsr2h,c
  3036   0019EC  C001  FFDF         	movff	fputc@c,indf2
  3037   0019F0  EE20 F003          	lfsr	2,3
  3038   0019F4  5003               	movf	fputc@fp^0,w,c
  3039   0019F6  26D9               	addwf	fsr2l,f,c
  3040   0019F8  5004               	movf	(fputc@fp+1)^0,w,c
  3041   0019FA  22DA               	addwfc	fsr2h,f,c
  3042   0019FC  2ADE               	incf	postinc2,f,c
  3043   0019FE  0E00               	movlw	0
  3044   001A00  22DD               	addwfc	postdec2,f,c
  3045   001A02                     l1257:
  3046   001A02  0012               	return		;funcret
  3047   001A04                     __end_of_fputc:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _putch *****************
  3051 ;; Defined at:
  3052 ;;		line 7 in file "D:\Embeded-Compiler\pic\sources\c99\common\putch.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  c               1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  c               1    0[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_fputc
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text17
  3080   0025C6                     __ptext17:
  3081                           	callstack 0
  3082   0025C6                     _putch:
  3083                           	callstack 25
  3084   0025C6  0012               	return		;funcret
  3085   0025C8                     __end_of_putch:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _abs *****************
  3089 ;; Defined at:
  3090 ;;		line 1 in file "D:\Embeded-Compiler\pic\sources\c99\common\abs.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  a               2    6[COMRAM] int 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2    6[COMRAM] int 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        4 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_dtoa
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text18
  3118   002480                     __ptext18:
  3119                           	callstack 0
  3120   002480                     _abs:
  3121                           	callstack 25
  3122   002480  BE08               	btfsc	(abs@a+1)^0,7,c
  3123   002482  EF4D  F012         	goto	u1660
  3124   002486  5008               	movf	(abs@a+1)^0,w,c
  3125   002488  E106               	bnz	u1661
  3126   00248A  0407               	decf	abs@a^0,w,c
  3127   00248C  B0D8               	btfsc	status,0,c
  3128   00248E  EF4B  F012         	goto	u1661
  3129   002492  EF4D  F012         	goto	u1660
  3130   002496                     u1661:
  3131   002496  EF5B  F012         	goto	l1242
  3132   00249A                     u1660:
  3133   00249A  C007  F009         	movff	abs@a,??_abs
  3134   00249E  C008  F00A         	movff	abs@a+1,??_abs+1
  3135   0024A2  1E09               	comf	??_abs^0,f,c
  3136   0024A4  1E0A               	comf	(??_abs+1)^0,f,c
  3137   0024A6  4A09               	infsnz	??_abs^0,f,c
  3138   0024A8  2A0A               	incf	(??_abs+1)^0,f,c
  3139   0024AA  C009  F007         	movff	??_abs,?_abs
  3140   0024AE  C00A  F008         	movff	??_abs+1,?_abs+1
  3141   0024B2  EF5F  F012         	goto	l1245
  3142   0024B6                     l1242:
  3143   0024B6  C007  F007         	movff	abs@a,?_abs
  3144   0024BA  C008  F008         	movff	abs@a+1,?_abs+1
  3145   0024BE                     l1245:
  3146   0024BE  0012               	return		;funcret
  3147   0024C0                     __end_of_abs:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function ___awmod *****************
  3151 ;; Defined at:
  3152 ;;		line 7 in file "D:\Embeded-Compiler\pic\sources\c99\common\awmod.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  dividend        2    0[COMRAM] int 
  3155 ;;  divisor         2    2[COMRAM] int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  sign            1    5[COMRAM] unsigned char 
  3158 ;;  counter         1    4[COMRAM] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2    0[COMRAM] int 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;Total ram usage:        6 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_dtoa
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text19
  3182   001B7E                     __ptext19:
  3183                           	callstack 0
  3184   001B7E                     ___awmod:
  3185                           	callstack 25
  3186   001B7E  0E00               	movlw	0
  3187   001B80  6E06               	movwf	___awmod@sign^0,c
  3188   001B82  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3189   001B84  EFC8  F00D         	goto	u1580
  3190   001B88  EFC6  F00D         	goto	u1581
  3191   001B8C                     u1581:
  3192   001B8C  EFCE  F00D         	goto	l2568
  3193   001B90                     u1580:
  3194   001B90  6C01               	negf	___awmod@dividend^0,c
  3195   001B92  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3196   001B94  B0D8               	btfsc	status,0,c
  3197   001B96  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3198   001B98  0E01               	movlw	1
  3199   001B9A  6E06               	movwf	___awmod@sign^0,c
  3200   001B9C                     l2568:
  3201   001B9C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3202   001B9E  EFD5  F00D         	goto	u1590
  3203   001BA2  EFD3  F00D         	goto	u1591
  3204   001BA6                     u1591:
  3205   001BA6  EFD9  F00D         	goto	l2572
  3206   001BAA                     u1590:
  3207   001BAA  6C03               	negf	___awmod@divisor^0,c
  3208   001BAC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3209   001BAE  B0D8               	btfsc	status,0,c
  3210   001BB0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3211   001BB2                     l2572:
  3212   001BB2  5003               	movf	___awmod@divisor^0,w,c
  3213   001BB4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3214   001BB6  B4D8               	btfsc	status,2,c
  3215   001BB8  EFE0  F00D         	goto	u1601
  3216   001BBC  EFE2  F00D         	goto	u1600
  3217   001BC0                     u1601:
  3218   001BC0  EF06  F00E         	goto	l2588
  3219   001BC4                     u1600:
  3220   001BC4  0E01               	movlw	1
  3221   001BC6  6E05               	movwf	___awmod@counter^0,c
  3222   001BC8  EFEA  F00D         	goto	l2578
  3223   001BCC                     l2576:
  3224   001BCC  90D8               	bcf	status,0,c
  3225   001BCE  3603               	rlcf	___awmod@divisor^0,f,c
  3226   001BD0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3227   001BD2  2A05               	incf	___awmod@counter^0,f,c
  3228   001BD4                     l2578:
  3229   001BD4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3230   001BD6  EFEF  F00D         	goto	u1611
  3231   001BDA  EFF1  F00D         	goto	u1610
  3232   001BDE                     u1611:
  3233   001BDE  EFE6  F00D         	goto	l2576
  3234   001BE2                     u1610:
  3235   001BE2                     l2580:
  3236   001BE2  5003               	movf	___awmod@divisor^0,w,c
  3237   001BE4  5C01               	subwf	___awmod@dividend^0,w,c
  3238   001BE6  5004               	movf	(___awmod@divisor+1)^0,w,c
  3239   001BE8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3240   001BEA  A0D8               	btfss	status,0,c
  3241   001BEC  EFFA  F00D         	goto	u1621
  3242   001BF0  EFFC  F00D         	goto	u1620
  3243   001BF4                     u1621:
  3244   001BF4  EF00  F00E         	goto	l2584
  3245   001BF8                     u1620:
  3246   001BF8  5003               	movf	___awmod@divisor^0,w,c
  3247   001BFA  5E01               	subwf	___awmod@dividend^0,f,c
  3248   001BFC  5004               	movf	(___awmod@divisor+1)^0,w,c
  3249   001BFE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3250   001C00                     l2584:
  3251   001C00  90D8               	bcf	status,0,c
  3252   001C02  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3253   001C04  3203               	rrcf	___awmod@divisor^0,f,c
  3254   001C06  2E05               	decfsz	___awmod@counter^0,f,c
  3255   001C08  EFF1  F00D         	goto	l2580
  3256   001C0C                     l2588:
  3257   001C0C  5006               	movf	___awmod@sign^0,w,c
  3258   001C0E  B4D8               	btfsc	status,2,c
  3259   001C10  EF0C  F00E         	goto	u1631
  3260   001C14  EF0E  F00E         	goto	u1630
  3261   001C18                     u1631:
  3262   001C18  EF12  F00E         	goto	l2592
  3263   001C1C                     u1630:
  3264   001C1C  6C01               	negf	___awmod@dividend^0,c
  3265   001C1E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3266   001C20  B0D8               	btfsc	status,0,c
  3267   001C22  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3268   001C24                     l2592:
  3269   001C24  C001  F001         	movff	___awmod@dividend,?___awmod
  3270   001C28  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3271   001C2C  0012               	return		;funcret
  3272   001C2E                     __end_of___awmod:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function ___awdiv *****************
  3276 ;; Defined at:
  3277 ;;		line 7 in file "D:\Embeded-Compiler\pic\sources\c99\common\awdiv.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  dividend        2    0[COMRAM] int 
  3280 ;;  divisor         2    2[COMRAM] int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  quotient        2    6[COMRAM] int 
  3283 ;;  sign            1    5[COMRAM] unsigned char 
  3284 ;;  counter         1    4[COMRAM] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    0[COMRAM] int 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        8 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_dtoa
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text20
  3308   001A04                     __ptext20:
  3309                           	callstack 0
  3310   001A04                     ___awdiv:
  3311                           	callstack 25
  3312   001A04  0E00               	movlw	0
  3313   001A06  6E06               	movwf	___awdiv@sign^0,c
  3314   001A08  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3315   001A0A  EF0B  F00D         	goto	u1520
  3316   001A0E  EF09  F00D         	goto	u1521
  3317   001A12                     u1521:
  3318   001A12  EF11  F00D         	goto	l2524
  3319   001A16                     u1520:
  3320   001A16  6C03               	negf	___awdiv@divisor^0,c
  3321   001A18  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3322   001A1A  B0D8               	btfsc	status,0,c
  3323   001A1C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3324   001A1E  0E01               	movlw	1
  3325   001A20  6E06               	movwf	___awdiv@sign^0,c
  3326   001A22                     l2524:
  3327   001A22  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3328   001A24  EF18  F00D         	goto	u1530
  3329   001A28  EF16  F00D         	goto	u1531
  3330   001A2C                     u1531:
  3331   001A2C  EF1E  F00D         	goto	l2530
  3332   001A30                     u1530:
  3333   001A30  6C01               	negf	___awdiv@dividend^0,c
  3334   001A32  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3335   001A34  B0D8               	btfsc	status,0,c
  3336   001A36  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3337   001A38  0E01               	movlw	1
  3338   001A3A  1A06               	xorwf	___awdiv@sign^0,f,c
  3339   001A3C                     l2530:
  3340   001A3C  0E00               	movlw	0
  3341   001A3E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3342   001A40  0E00               	movlw	0
  3343   001A42  6E07               	movwf	___awdiv@quotient^0,c
  3344   001A44  5003               	movf	___awdiv@divisor^0,w,c
  3345   001A46  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3346   001A48  B4D8               	btfsc	status,2,c
  3347   001A4A  EF29  F00D         	goto	u1541
  3348   001A4E  EF2B  F00D         	goto	u1540
  3349   001A52                     u1541:
  3350   001A52  EF53  F00D         	goto	l2552
  3351   001A56                     u1540:
  3352   001A56  0E01               	movlw	1
  3353   001A58  6E05               	movwf	___awdiv@counter^0,c
  3354   001A5A  EF33  F00D         	goto	l2538
  3355   001A5E                     l2536:
  3356   001A5E  90D8               	bcf	status,0,c
  3357   001A60  3603               	rlcf	___awdiv@divisor^0,f,c
  3358   001A62  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3359   001A64  2A05               	incf	___awdiv@counter^0,f,c
  3360   001A66                     l2538:
  3361   001A66  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3362   001A68  EF38  F00D         	goto	u1551
  3363   001A6C  EF3A  F00D         	goto	u1550
  3364   001A70                     u1551:
  3365   001A70  EF2F  F00D         	goto	l2536
  3366   001A74                     u1550:
  3367   001A74                     l2540:
  3368   001A74  90D8               	bcf	status,0,c
  3369   001A76  3607               	rlcf	___awdiv@quotient^0,f,c
  3370   001A78  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3371   001A7A  5003               	movf	___awdiv@divisor^0,w,c
  3372   001A7C  5C01               	subwf	___awdiv@dividend^0,w,c
  3373   001A7E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3374   001A80  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3375   001A82  A0D8               	btfss	status,0,c
  3376   001A84  EF46  F00D         	goto	u1561
  3377   001A88  EF48  F00D         	goto	u1560
  3378   001A8C                     u1561:
  3379   001A8C  EF4D  F00D         	goto	l2548
  3380   001A90                     u1560:
  3381   001A90  5003               	movf	___awdiv@divisor^0,w,c
  3382   001A92  5E01               	subwf	___awdiv@dividend^0,f,c
  3383   001A94  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3384   001A96  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3385   001A98  8007               	bsf	___awdiv@quotient^0,0,c
  3386   001A9A                     l2548:
  3387   001A9A  90D8               	bcf	status,0,c
  3388   001A9C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3389   001A9E  3203               	rrcf	___awdiv@divisor^0,f,c
  3390   001AA0  2E05               	decfsz	___awdiv@counter^0,f,c
  3391   001AA2  EF3A  F00D         	goto	l2540
  3392   001AA6                     l2552:
  3393   001AA6  5006               	movf	___awdiv@sign^0,w,c
  3394   001AA8  B4D8               	btfsc	status,2,c
  3395   001AAA  EF59  F00D         	goto	u1571
  3396   001AAE  EF5B  F00D         	goto	u1570
  3397   001AB2                     u1571:
  3398   001AB2  EF5F  F00D         	goto	l2556
  3399   001AB6                     u1570:
  3400   001AB6  6C07               	negf	___awdiv@quotient^0,c
  3401   001AB8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3402   001ABA  B0D8               	btfsc	status,0,c
  3403   001ABC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3404   001ABE                     l2556:
  3405   001ABE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3406   001AC2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3407   001AC6  0012               	return		;funcret
  3408   001AC8                     __end_of___awdiv:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _memset *****************
  3412 ;; Defined at:
  3413 ;;		line 4 in file "D:\Embeded-Compiler\pic\sources\c99\common\memset.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dest            2    0[COMRAM] PTR void 
  3416 ;;		 -> main@lcd_text(4), 
  3417 ;;  c               2    2[COMRAM] int 
  3418 ;;  n               2    4[COMRAM] unsigned int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  s               2   10[COMRAM] PTR unsigned char 
  3421 ;;		 -> main@lcd_text(4), 
  3422 ;;  k               2    8[COMRAM] unsigned int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2    0[COMRAM] PTR void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3432 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;Total ram usage:       12 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_convert_uint_8_string
  3442 ;;		_convert_uint_16_string
  3443 ;;		_convert_uint_32_string
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text21
  3448   0011CA                     __ptext21:
  3449                           	callstack 0
  3450   0011CA                     _memset:
  3451                           	callstack 29
  3452   0011CA  C001  F00B         	movff	memset@dest,memset@s
  3453   0011CE  C002  F00C         	movff	memset@dest+1,memset@s+1
  3454   0011D2  5005               	movf	memset@n^0,w,c
  3455   0011D4  1006               	iorwf	(memset@n+1)^0,w,c
  3456   0011D6  A4D8               	btfss	status,2,c
  3457   0011D8  EFF0  F008         	goto	u2051
  3458   0011DC  EFF2  F008         	goto	u2050
  3459   0011E0                     u2051:
  3460   0011E0  EFF4  F008         	goto	l3036
  3461   0011E4                     u2050:
  3462   0011E4  EF9F  F009         	goto	l1167
  3463   0011E8                     l3036:
  3464   0011E8  C00B  FFD9         	movff	memset@s,fsr2l
  3465   0011EC  C00C  FFDA         	movff	memset@s+1,fsr2h
  3466   0011F0  C003  FFDF         	movff	memset@c,indf2
  3467   0011F4  5005               	movf	memset@n^0,w,c
  3468   0011F6  240B               	addwf	memset@s^0,w,c
  3469   0011F8  6E07               	movwf	??_memset^0,c
  3470   0011FA  5006               	movf	(memset@n+1)^0,w,c
  3471   0011FC  200C               	addwfc	(memset@s+1)^0,w,c
  3472   0011FE  6E08               	movwf	(??_memset+1)^0,c
  3473   001200  0EFF               	movlw	255
  3474   001202  2407               	addwf	??_memset^0,w,c
  3475   001204  6ED9               	movwf	fsr2l,c
  3476   001206  0EFF               	movlw	255
  3477   001208  2008               	addwfc	(??_memset+1)^0,w,c
  3478   00120A  6EDA               	movwf	fsr2h,c
  3479   00120C  C003  FFDF         	movff	memset@c,indf2
  3480   001210  5006               	movf	(memset@n+1)^0,w,c
  3481   001212  E107               	bnz	u2061
  3482   001214  0E03               	movlw	3
  3483   001216  5C05               	subwf	memset@n^0,w,c
  3484   001218  B0D8               	btfsc	status,0,c
  3485   00121A  EF11  F009         	goto	u2061
  3486   00121E  EF13  F009         	goto	u2060
  3487   001222                     u2061:
  3488   001222  EF15  F009         	goto	l3042
  3489   001226                     u2060:
  3490   001226  EF9F  F009         	goto	l1167
  3491   00122A                     l3042:
  3492   00122A  EE20 F001          	lfsr	2,1
  3493   00122E  500B               	movf	memset@s^0,w,c
  3494   001230  26D9               	addwf	fsr2l,f,c
  3495   001232  500C               	movf	(memset@s+1)^0,w,c
  3496   001234  22DA               	addwfc	fsr2h,f,c
  3497   001236  C003  FFDF         	movff	memset@c,indf2
  3498   00123A  EE20 F002          	lfsr	2,2
  3499   00123E  500B               	movf	memset@s^0,w,c
  3500   001240  26D9               	addwf	fsr2l,f,c
  3501   001242  500C               	movf	(memset@s+1)^0,w,c
  3502   001244  22DA               	addwfc	fsr2h,f,c
  3503   001246  C003  FFDF         	movff	memset@c,indf2
  3504   00124A  5005               	movf	memset@n^0,w,c
  3505   00124C  240B               	addwf	memset@s^0,w,c
  3506   00124E  6E07               	movwf	??_memset^0,c
  3507   001250  5006               	movf	(memset@n+1)^0,w,c
  3508   001252  200C               	addwfc	(memset@s+1)^0,w,c
  3509   001254  6E08               	movwf	(??_memset+1)^0,c
  3510   001256  0EFE               	movlw	254
  3511   001258  2407               	addwf	??_memset^0,w,c
  3512   00125A  6ED9               	movwf	fsr2l,c
  3513   00125C  0EFF               	movlw	255
  3514   00125E  2008               	addwfc	(??_memset+1)^0,w,c
  3515   001260  6EDA               	movwf	fsr2h,c
  3516   001262  C003  FFDF         	movff	memset@c,indf2
  3517   001266  5005               	movf	memset@n^0,w,c
  3518   001268  240B               	addwf	memset@s^0,w,c
  3519   00126A  6E07               	movwf	??_memset^0,c
  3520   00126C  5006               	movf	(memset@n+1)^0,w,c
  3521   00126E  200C               	addwfc	(memset@s+1)^0,w,c
  3522   001270  6E08               	movwf	(??_memset+1)^0,c
  3523   001272  0EFD               	movlw	253
  3524   001274  2407               	addwf	??_memset^0,w,c
  3525   001276  6ED9               	movwf	fsr2l,c
  3526   001278  0EFF               	movlw	255
  3527   00127A  2008               	addwfc	(??_memset+1)^0,w,c
  3528   00127C  6EDA               	movwf	fsr2h,c
  3529   00127E  C003  FFDF         	movff	memset@c,indf2
  3530   001282  5006               	movf	(memset@n+1)^0,w,c
  3531   001284  E107               	bnz	u2071
  3532   001286  0E07               	movlw	7
  3533   001288  5C05               	subwf	memset@n^0,w,c
  3534   00128A  B0D8               	btfsc	status,0,c
  3535   00128C  EF4A  F009         	goto	u2071
  3536   001290  EF4C  F009         	goto	u2070
  3537   001294                     u2071:
  3538   001294  EF4E  F009         	goto	l3048
  3539   001298                     u2070:
  3540   001298  EF9F  F009         	goto	l1167
  3541   00129C                     l3048:
  3542   00129C  EE20 F003          	lfsr	2,3
  3543   0012A0  500B               	movf	memset@s^0,w,c
  3544   0012A2  26D9               	addwf	fsr2l,f,c
  3545   0012A4  500C               	movf	(memset@s+1)^0,w,c
  3546   0012A6  22DA               	addwfc	fsr2h,f,c
  3547   0012A8  C003  FFDF         	movff	memset@c,indf2
  3548   0012AC  5005               	movf	memset@n^0,w,c
  3549   0012AE  240B               	addwf	memset@s^0,w,c
  3550   0012B0  6E07               	movwf	??_memset^0,c
  3551   0012B2  5006               	movf	(memset@n+1)^0,w,c
  3552   0012B4  200C               	addwfc	(memset@s+1)^0,w,c
  3553   0012B6  6E08               	movwf	(??_memset+1)^0,c
  3554   0012B8  0EFC               	movlw	252
  3555   0012BA  2407               	addwf	??_memset^0,w,c
  3556   0012BC  6ED9               	movwf	fsr2l,c
  3557   0012BE  0EFF               	movlw	255
  3558   0012C0  2008               	addwfc	(??_memset+1)^0,w,c
  3559   0012C2  6EDA               	movwf	fsr2h,c
  3560   0012C4  C003  FFDF         	movff	memset@c,indf2
  3561   0012C8  5006               	movf	(memset@n+1)^0,w,c
  3562   0012CA  E107               	bnz	u2081
  3563   0012CC  0E09               	movlw	9
  3564   0012CE  5C05               	subwf	memset@n^0,w,c
  3565   0012D0  B0D8               	btfsc	status,0,c
  3566   0012D2  EF6D  F009         	goto	u2081
  3567   0012D6  EF6F  F009         	goto	u2080
  3568   0012DA                     u2081:
  3569   0012DA  EF71  F009         	goto	l3054
  3570   0012DE                     u2080:
  3571   0012DE  EF9F  F009         	goto	l1167
  3572   0012E2                     l3054:
  3573   0012E2  C00B  F007         	movff	memset@s,??_memset
  3574   0012E6  C00C  F008         	movff	memset@s+1,??_memset+1
  3575   0012EA  1E07               	comf	??_memset^0,f,c
  3576   0012EC  1E08               	comf	(??_memset+1)^0,f,c
  3577   0012EE  4A07               	infsnz	??_memset^0,f,c
  3578   0012F0  2A08               	incf	(??_memset+1)^0,f,c
  3579   0012F2  0E03               	movlw	3
  3580   0012F4  1407               	andwf	??_memset^0,w,c
  3581   0012F6  6E09               	movwf	memset@k^0,c
  3582   0012F8  6A0A               	clrf	(memset@k+1)^0,c
  3583   0012FA  5009               	movf	memset@k^0,w,c
  3584   0012FC  260B               	addwf	memset@s^0,f,c
  3585   0012FE  500A               	movf	(memset@k+1)^0,w,c
  3586   001300  220C               	addwfc	(memset@s+1)^0,f,c
  3587   001302  5009               	movf	memset@k^0,w,c
  3588   001304  5E05               	subwf	memset@n^0,f,c
  3589   001306  500A               	movf	(memset@k+1)^0,w,c
  3590   001308  5A06               	subwfb	(memset@n+1)^0,f,c
  3591   00130A  0EFC               	movlw	252
  3592   00130C  1605               	andwf	memset@n^0,f,c
  3593   00130E  0EFF               	movlw	255
  3594   001310  1606               	andwf	(memset@n+1)^0,f,c
  3595   001312  EF96  F009         	goto	l3062
  3596   001316                     l3056:
  3597   001316  C00B  FFD9         	movff	memset@s,fsr2l
  3598   00131A  C00C  FFDA         	movff	memset@s+1,fsr2h
  3599   00131E  C003  FFDF         	movff	memset@c,indf2
  3600   001322  0605               	decf	memset@n^0,f,c
  3601   001324  A0D8               	btfss	status,0,c
  3602   001326  0606               	decf	(memset@n+1)^0,f,c
  3603   001328  4A0B               	infsnz	memset@s^0,f,c
  3604   00132A  2A0C               	incf	(memset@s+1)^0,f,c
  3605   00132C                     l3062:
  3606   00132C  5005               	movf	memset@n^0,w,c
  3607   00132E  1006               	iorwf	(memset@n+1)^0,w,c
  3608   001330  A4D8               	btfss	status,2,c
  3609   001332  EF9D  F009         	goto	u2091
  3610   001336  EF9F  F009         	goto	u2090
  3611   00133A                     u2091:
  3612   00133A  EF8B  F009         	goto	l3056
  3613   00133E                     u2090:
  3614   00133E                     l1167:
  3615   00133E  0012               	return		;funcret
  3616   001340                     __end_of_memset:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _application_initialize *****************
  3620 ;; Defined at:
  3621 ;;		line 43 in file "application.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 5
  3642 ;; This function calls:
  3643 ;;		_ECU_Layer_initialize
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text22
  3650   0025C0                     __ptext22:
  3651                           	callstack 0
  3652   0025C0                     _application_initialize:
  3653                           	callstack 25
  3654   0025C0                     
  3655                           ;application.c: 44:    ECU_Layer_initialize();
  3656   0025C0  ECD0  F012         	call	_ECU_Layer_initialize	;wreg free
  3657   0025C4  0012               	return		;funcret
  3658   0025C6                     __end_of_application_initialize:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _ECU_Layer_initialize *****************
  3662 ;; Defined at:
  3663 ;;		line 84 in file "ECU_Layer/ecu_init.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  ret             1    0        unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 4
  3684 ;; This function calls:
  3685 ;;		_lcd_4_bit_initialize
  3686 ;;		_lcd_8_bit_initialize
  3687 ;; This function is called by:
  3688 ;;		_application_initialize
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text23
  3693   0025A0                     __ptext23:
  3694                           	callstack 0
  3695   0025A0                     _ECU_Layer_initialize:
  3696                           	callstack 25
  3697   0025A0  0E7A               	movlw	low _lcd_1
  3698   0025A2  6E13               	movwf	lcd_4_bit_initialize@lcd^0,c
  3699   0025A4  0E00               	movlw	high _lcd_1
  3700   0025A6  6E14               	movwf	(lcd_4_bit_initialize@lcd+1)^0,c
  3701   0025A8  EC09  F00C         	call	_lcd_4_bit_initialize	;wreg free
  3702   0025AC  0EAE               	movlw	low _lcd_2
  3703   0025AE  6E18               	movwf	lcd_8_bit_initialize@lcd^0,c
  3704   0025B0  0E00               	movlw	high _lcd_2
  3705   0025B2  6E19               	movwf	(lcd_8_bit_initialize@lcd+1)^0,c
  3706   0025B4  EC75  F00B         	call	_lcd_8_bit_initialize	;wreg free
  3707   0025B8  0012               	return		;funcret
  3708   0025BA                     __end_of_ECU_Layer_initialize:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _lcd_8_bit_initialize *****************
  3712 ;; Defined at:
  3713 ;;		line 191 in file "ECU_Layer/LCD/ecu_LCD.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  lcd             2   23[COMRAM] PTR const struct .
  3716 ;;		 -> lcd_2(10), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  ret             1   28[COMRAM] unsigned char 
  3719 ;;  l_data_count    1   27[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      unsigned char 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:        6 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 3
  3736 ;; This function calls:
  3737 ;;		_gpio_pin_intialize
  3738 ;;		_lcd_8_bit_send_command
  3739 ;; This function is called by:
  3740 ;;		_ECU_Layer_initialize
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text24
  3745   0016EA                     __ptext24:
  3746                           	callstack 0
  3747   0016EA                     _lcd_8_bit_initialize:
  3748                           	callstack 25
  3749   0016EA                     
  3750                           ;ECU_Layer/LCD/ecu_LCD.c: 193:  uint_8 l_data_counter =0 ;
  3751   0016EA  0E00               	movlw	0
  3752   0016EC  6E1C               	movwf	lcd_8_bit_initialize@l_data_counter^0,c
  3753   0016EE                     
  3754                           ;ECU_Layer/LCD/ecu_LCD.c: 194:  if(lcd == ((void*)0)){
  3755   0016EE  5018               	movf	lcd_8_bit_initialize@lcd^0,w,c
  3756   0016F0  1019               	iorwf	(lcd_8_bit_initialize@lcd+1)^0,w,c
  3757   0016F2  A4D8               	btfss	status,2,c
  3758   0016F4  EF7E  F00B         	goto	u1981
  3759   0016F8  EF80  F00B         	goto	u1980
  3760   0016FC                     u1981:
  3761   0016FC  EF84  F00B         	goto	l2896
  3762   001700                     u1980:
  3763   001700                     
  3764                           ;ECU_Layer/LCD/ecu_LCD.c: 195:      ret = (Std_ReturnType)0x00;
  3765   001700  0E00               	movlw	0
  3766   001702  6E1D               	movwf	lcd_8_bit_initialize@ret^0,c
  3767                           
  3768                           ;ECU_Layer/LCD/ecu_LCD.c: 196:  }
  3769   001704  EF07  F00C         	goto	l2932
  3770   001708                     l2896:
  3771                           
  3772                           ;ECU_Layer/LCD/ecu_LCD.c: 198:      ret = gpio_pin_intialize(&(lcd->lcd_rs));
  3773   001708  C018  F00B         	movff	lcd_8_bit_initialize@lcd,gpio_pin_intialize@pin_config
  3774   00170C  C019  F00C         	movff	lcd_8_bit_initialize@lcd+1,gpio_pin_intialize@pin_config+1
  3775   001710  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  3776   001714  6E1D               	movwf	lcd_8_bit_initialize@ret^0,c
  3777                           
  3778                           ;ECU_Layer/LCD/ecu_LCD.c: 199:      ret = gpio_pin_intialize(&(lcd->lcd_en));
  3779   001716  0E01               	movlw	1
  3780   001718  2418               	addwf	lcd_8_bit_initialize@lcd^0,w,c
  3781   00171A  6E0B               	movwf	gpio_pin_intialize@pin_config^0,c
  3782   00171C  0E00               	movlw	0
  3783   00171E  2019               	addwfc	(lcd_8_bit_initialize@lcd+1)^0,w,c
  3784   001720  6E0C               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  3785   001722  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  3786   001726  6E1D               	movwf	lcd_8_bit_initialize@ret^0,c
  3787   001728                     
  3788                           ;ECU_Layer/LCD/ecu_LCD.c: 200:      for(l_data_counter = 0; l_data_counter < 8 ; l_data_
      +                          counter++){
  3789   001728  0E00               	movlw	0
  3790   00172A  6E1C               	movwf	lcd_8_bit_initialize@l_data_counter^0,c
  3791   00172C                     l2904:
  3792   00172C  501C               	movf	lcd_8_bit_initialize@l_data_counter^0,w,c
  3793   00172E  2418               	addwf	lcd_8_bit_initialize@lcd^0,w,c
  3794   001730  6E1A               	movwf	??_lcd_8_bit_initialize^0,c
  3795   001732  0E00               	movlw	0
  3796   001734  2019               	addwfc	(lcd_8_bit_initialize@lcd+1)^0,w,c
  3797   001736  6E1B               	movwf	(??_lcd_8_bit_initialize+1)^0,c
  3798   001738  0E02               	movlw	2
  3799   00173A  241A               	addwf	??_lcd_8_bit_initialize^0,w,c
  3800   00173C  6E0B               	movwf	gpio_pin_intialize@pin_config^0,c
  3801   00173E  0E00               	movlw	0
  3802   001740  201B               	addwfc	(??_lcd_8_bit_initialize+1)^0,w,c
  3803   001742  6E0C               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  3804   001744  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  3805   001748                     
  3806                           ;ECU_Layer/LCD/ecu_LCD.c: 202:      }
  3807   001748  2A1C               	incf	lcd_8_bit_initialize@l_data_counter^0,f,c
  3808   00174A  0E07               	movlw	7
  3809   00174C  641C               	cpfsgt	lcd_8_bit_initialize@l_data_counter^0,c
  3810   00174E  EFAB  F00B         	goto	u1991
  3811   001752  EFAD  F00B         	goto	u1990
  3812   001756                     u1991:
  3813   001756  EF96  F00B         	goto	l2904
  3814   00175A                     u1990:
  3815   00175A                     
  3816                           ;ECU_Layer/LCD/ecu_LCD.c: 203:      _delay((unsigned long)((20)*(8000000UL/4000.0)));
  3817   00175A  0E34               	movlw	52
  3818   00175C  6E1A               	movwf	??_lcd_8_bit_initialize^0,c
  3819   00175E  0EF2               	movlw	242
  3820   001760                     u2847:
  3821   001760  2EE8               	decfsz	wreg,f,c
  3822   001762  D7FE               	bra	u2847
  3823   001764  2E1A               	decfsz	??_lcd_8_bit_initialize^0,f,c
  3824   001766  D7FC               	bra	u2847
  3825   001768  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3826   00176C  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3827   001770  0E38               	movlw	56
  3828   001772  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3829   001774  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3830   001778                     
  3831                           ;ECU_Layer/LCD/ecu_LCD.c: 205:      _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3832   001778  0E0D               	movlw	13
  3833   00177A  6E1A               	movwf	??_lcd_8_bit_initialize^0,c
  3834   00177C  0EFC               	movlw	252
  3835   00177E                     u2857:
  3836   00177E  2EE8               	decfsz	wreg,f,c
  3837   001780  D7FE               	bra	u2857
  3838   001782  2E1A               	decfsz	??_lcd_8_bit_initialize^0,f,c
  3839   001784  D7FC               	bra	u2857
  3840   001786  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3841   00178A  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3842   00178E  0E38               	movlw	56
  3843   001790  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3844   001792  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3845   001796                     
  3846                           ;ECU_Layer/LCD/ecu_LCD.c: 207:      _delay((unsigned long)((150)*(8000000UL/4000000.0)))
      +                          ;
  3847   001796  0E64               	movlw	100
  3848   001798                     u2867:
  3849   001798  2EE8               	decfsz	wreg,f,c
  3850   00179A  D7FE               	bra	u2867
  3851   00179C  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3852   0017A0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3853   0017A4  0E38               	movlw	56
  3854   0017A6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3855   0017A8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3856   0017AC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3857   0017B0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3858   0017B4  0E01               	movlw	1
  3859   0017B6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3860   0017B8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3861   0017BC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3862   0017C0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3863   0017C4  0E02               	movlw	2
  3864   0017C6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3865   0017C8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3866   0017CC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3867   0017D0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3868   0017D4  0E06               	movlw	6
  3869   0017D6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3870   0017D8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3871   0017DC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3872   0017E0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3873   0017E4  0E0C               	movlw	12
  3874   0017E6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3875   0017E8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3876   0017EC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3877   0017F0  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3878   0017F4  0E38               	movlw	56
  3879   0017F6  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3880   0017F8  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3881   0017FC                     
  3882                           ;ECU_Layer/LCD/ecu_LCD.c: 215:       ret = lcd_8_bit_send_command(lcd,0x80);
  3883   0017FC  C018  F00F         	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  3884   001800  C019  F010         	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  3885   001804  0E80               	movlw	128
  3886   001806  6E11               	movwf	lcd_8_bit_send_command@command^0,c
  3887   001808  EC07  F00F         	call	_lcd_8_bit_send_command	;wreg free
  3888   00180C  6E1D               	movwf	lcd_8_bit_initialize@ret^0,c
  3889   00180E                     l2932:
  3890                           
  3891                           ;ECU_Layer/LCD/ecu_LCD.c: 218:  return ret;
  3892   00180E  501D               	movf	lcd_8_bit_initialize@ret^0,w,c
  3893   001810  0012               	return		;funcret
  3894   001812                     __end_of_lcd_8_bit_initialize:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _lcd_8_bit_send_command *****************
  3898 ;; Defined at:
  3899 ;;		line 228 in file "ECU_Layer/LCD/ecu_LCD.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  lcd             2   14[COMRAM] PTR const struct .
  3902 ;;		 -> lcd_4_bit_send_string_position@lcd(2), lcd_4_bit_send_string@lcd(2), lcd_4_bit_send_data_position@lcd(2), lcd_2(
      +10), 
  3903 ;;		 -> lcd_1(6), 
  3904 ;;  command         1   16[COMRAM] unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  l_command_co    1   22[COMRAM] unsigned char 
  3907 ;;  ret             1   21[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        9 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 2
  3924 ;; This function calls:
  3925 ;;		_gpio_pin_write_logic
  3926 ;;		_lcd_8bit_send_enable_signal
  3927 ;; This function is called by:
  3928 ;;		_lcd_8_bit_initialize
  3929 ;;		_lcd_8_bit_send_custom_char
  3930 ;;		_welcome_massage
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text25
  3935   001E0E                     __ptext25:
  3936                           	callstack 0
  3937   001E0E                     _lcd_8_bit_send_command:
  3938                           	callstack 27
  3939   001E0E                     
  3940                           ;ECU_Layer/LCD/ecu_LCD.c: 230:  uint_8 l_command_counter =0 ;
  3941   001E0E  0E00               	movlw	0
  3942   001E10  6E17               	movwf	lcd_8_bit_send_command@l_command_counter^0,c
  3943   001E12                     
  3944                           ;ECU_Layer/LCD/ecu_LCD.c: 231:  if(lcd == ((void*)0)){
  3945   001E12  500F               	movf	lcd_8_bit_send_command@lcd^0,w,c
  3946   001E14  1010               	iorwf	(lcd_8_bit_send_command@lcd+1)^0,w,c
  3947   001E16  A4D8               	btfss	status,2,c
  3948   001E18  EF10  F00F         	goto	u1851
  3949   001E1C  EF12  F00F         	goto	u1850
  3950   001E20                     u1851:
  3951   001E20  EF16  F00F         	goto	l2744
  3952   001E24                     u1850:
  3953   001E24                     
  3954                           ;ECU_Layer/LCD/ecu_LCD.c: 232:      ret = (Std_ReturnType)0x00;
  3955   001E24  0E00               	movlw	0
  3956   001E26  6E16               	movwf	lcd_8_bit_send_command@ret^0,c
  3957                           
  3958                           ;ECU_Layer/LCD/ecu_LCD.c: 233:  }
  3959   001E28  EF4D  F00F         	goto	l2760
  3960   001E2C                     l2744:
  3961   001E2C  C00F  F001         	movff	lcd_8_bit_send_command@lcd,gpio_pin_write_logic@pin_config
  3962   001E30  C010  F002         	movff	lcd_8_bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  3963   001E34  0E00               	movlw	0
  3964   001E36  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3965   001E38  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  3966   001E3C                     
  3967                           ;ECU_Layer/LCD/ecu_LCD.c: 236:    for(l_command_counter = 0 ; l_command_counter < 8; l_c
      +                          ommand_counter++){
  3968   001E3C  0E00               	movlw	0
  3969   001E3E  6E17               	movwf	lcd_8_bit_send_command@l_command_counter^0,c
  3970   001E40                     l2752:
  3971   001E40  5017               	movf	lcd_8_bit_send_command@l_command_counter^0,w,c
  3972   001E42  240F               	addwf	lcd_8_bit_send_command@lcd^0,w,c
  3973   001E44  6E12               	movwf	??_lcd_8_bit_send_command^0,c
  3974   001E46  0E00               	movlw	0
  3975   001E48  2010               	addwfc	(lcd_8_bit_send_command@lcd+1)^0,w,c
  3976   001E4A  6E13               	movwf	(??_lcd_8_bit_send_command+1)^0,c
  3977   001E4C  0E02               	movlw	2
  3978   001E4E  2412               	addwf	??_lcd_8_bit_send_command^0,w,c
  3979   001E50  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  3980   001E52  0E00               	movlw	0
  3981   001E54  2013               	addwfc	(??_lcd_8_bit_send_command+1)^0,w,c
  3982   001E56  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  3983   001E58  C017  F014         	movff	lcd_8_bit_send_command@l_command_counter,??_lcd_8_bit_send_command+2
  3984   001E5C  C011  F015         	movff	lcd_8_bit_send_command@command,??_lcd_8_bit_send_command+3
  3985   001E60  2A14               	incf	(??_lcd_8_bit_send_command+2)^0,f,c
  3986   001E62  EF35  F00F         	goto	u1864
  3987   001E66                     u1865:
  3988   001E66  90D8               	bcf	status,0,c
  3989   001E68  3615               	rlcf	(??_lcd_8_bit_send_command+3)^0,f,c
  3990   001E6A                     u1864:
  3991   001E6A  2E14               	decfsz	(??_lcd_8_bit_send_command+2)^0,f,c
  3992   001E6C  EF33  F00F         	goto	u1865
  3993   001E70  5015               	movf	(??_lcd_8_bit_send_command+3)^0,w,c
  3994   001E72  0B01               	andlw	1
  3995   001E74  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3996   001E76  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  3997   001E7A                     
  3998                           ;ECU_Layer/LCD/ecu_LCD.c: 238:    }
  3999   001E7A  2A17               	incf	lcd_8_bit_send_command@l_command_counter^0,f,c
  4000   001E7C  0E07               	movlw	7
  4001   001E7E  6417               	cpfsgt	lcd_8_bit_send_command@l_command_counter^0,c
  4002   001E80  EF44  F00F         	goto	u1871
  4003   001E84  EF46  F00F         	goto	u1870
  4004   001E88                     u1871:
  4005   001E88  EF20  F00F         	goto	l2752
  4006   001E8C                     u1870:
  4007   001E8C                     
  4008                           ;ECU_Layer/LCD/ecu_LCD.c: 239:    ret = lcd_8bit_send_enable_signal(&lcd);
  4009   001E8C  0E0F               	movlw	low lcd_8_bit_send_command@lcd
  4010   001E8E  6E0B               	movwf	lcd_8bit_send_enable_signal@lcd^0,c
  4011   001E90  0E00               	movlw	high lcd_8_bit_send_command@lcd
  4012   001E92  6E0C               	movwf	(lcd_8bit_send_enable_signal@lcd+1)^0,c
  4013   001E94  EC60  F012         	call	_lcd_8bit_send_enable_signal	;wreg free
  4014   001E98  6E16               	movwf	lcd_8_bit_send_command@ret^0,c
  4015   001E9A                     l2760:
  4016                           
  4017                           ;ECU_Layer/LCD/ecu_LCD.c: 242:  return ret;
  4018   001E9A  5016               	movf	lcd_8_bit_send_command@ret^0,w,c
  4019   001E9C  0012               	return		;funcret
  4020   001E9E                     __end_of_lcd_8_bit_send_command:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _lcd_8bit_send_enable_signal *****************
  4024 ;; Defined at:
  4025 ;;		line 440 in file "ECU_Layer/LCD/ecu_LCD.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  lcd             2   10[COMRAM] PTR const struct .
  4028 ;;		 -> lcd_8_bit_send_command@lcd(2), lcd_2(10), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  ret             1   13[COMRAM] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      unsigned char 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;Total ram usage:        4 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 1
  4047 ;; This function calls:
  4048 ;;		_gpio_pin_write_logic
  4049 ;; This function is called by:
  4050 ;;		_lcd_8_bit_send_command
  4051 ;;		_lcd_8_bit_send_char_data
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text26
  4056   0024C0                     __ptext26:
  4057                           	callstack 0
  4058   0024C0                     _lcd_8bit_send_enable_signal:
  4059                           	callstack 25
  4060   0024C0  0E01               	movlw	1
  4061   0024C2  240B               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4062   0024C4  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4063   0024C6  0E00               	movlw	0
  4064   0024C8  200C               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4065   0024CA  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4066   0024CC  0E01               	movlw	1
  4067   0024CE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4068   0024D0  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4069   0024D4                     
  4070                           ;ECU_Layer/LCD/ecu_LCD.c: 444: _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4071   0024D4  0E82               	movlw	130
  4072   0024D6  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  4073   0024D8  0EDE               	movlw	222
  4074   0024DA                     u2877:
  4075   0024DA  2EE8               	decfsz	wreg,f,c
  4076   0024DC  D7FE               	bra	u2877
  4077   0024DE  2E0D               	decfsz	??_lcd_8bit_send_enable_signal^0,f,c
  4078   0024E0  D7FC               	bra	u2877
  4079   0024E2                     
  4080                           ;ECU_Layer/LCD/ecu_LCD.c: 445:  ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  4081   0024E2  0E01               	movlw	1
  4082   0024E4  240B               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  4083   0024E6  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4084   0024E8  0E00               	movlw	0
  4085   0024EA  200C               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  4086   0024EC  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4087   0024EE  0E00               	movlw	0
  4088   0024F0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4089   0024F2  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4090   0024F6  6E0E               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  4091   0024F8                     
  4092                           ;ECU_Layer/LCD/ecu_LCD.c: 446:  return ret;
  4093   0024F8  500E               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  4094   0024FA  0012               	return		;funcret
  4095   0024FC                     __end_of_lcd_8bit_send_enable_signal:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _lcd_4_bit_initialize *****************
  4099 ;; Defined at:
  4100 ;;		line 19 in file "ECU_Layer/LCD/ecu_LCD.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  lcd             2   18[COMRAM] PTR const struct .
  4103 ;;		 -> lcd_1(6), 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  ret             1   23[COMRAM] unsigned char 
  4106 ;;  l_data_count    1   22[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      unsigned char 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;Total ram usage:        6 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 3
  4123 ;; This function calls:
  4124 ;;		_gpio_pin_intialize
  4125 ;;		_lcd_4_bit_send_command
  4126 ;; This function is called by:
  4127 ;;		_ECU_Layer_initialize
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text27
  4132   001812                     __ptext27:
  4133                           	callstack 0
  4134   001812                     _lcd_4_bit_initialize:
  4135                           	callstack 25
  4136   001812                     
  4137                           ;ECU_Layer/LCD/ecu_LCD.c: 21:  uint_8 l_data_counter =0 ;
  4138   001812  0E00               	movlw	0
  4139   001814  6E17               	movwf	lcd_4_bit_initialize@l_data_counter^0,c
  4140   001816                     
  4141                           ;ECU_Layer/LCD/ecu_LCD.c: 22:  if(lcd == ((void*)0)){
  4142   001816  5013               	movf	lcd_4_bit_initialize@lcd^0,w,c
  4143   001818  1014               	iorwf	(lcd_4_bit_initialize@lcd+1)^0,w,c
  4144   00181A  A4D8               	btfss	status,2,c
  4145   00181C  EF12  F00C         	goto	u1961
  4146   001820  EF14  F00C         	goto	u1960
  4147   001824                     u1961:
  4148   001824  EF18  F00C         	goto	l2850
  4149   001828                     u1960:
  4150   001828                     
  4151                           ;ECU_Layer/LCD/ecu_LCD.c: 23:      ret = (Std_ReturnType)0x00;
  4152   001828  0E00               	movlw	0
  4153   00182A  6E18               	movwf	lcd_4_bit_initialize@ret^0,c
  4154                           
  4155                           ;ECU_Layer/LCD/ecu_LCD.c: 24:  }
  4156   00182C  EF9B  F00C         	goto	l2886
  4157   001830                     l2850:
  4158                           
  4159                           ;ECU_Layer/LCD/ecu_LCD.c: 26:      ret = gpio_pin_intialize(&(lcd->lcd_rs));
  4160   001830  C013  F00B         	movff	lcd_4_bit_initialize@lcd,gpio_pin_intialize@pin_config
  4161   001834  C014  F00C         	movff	lcd_4_bit_initialize@lcd+1,gpio_pin_intialize@pin_config+1
  4162   001838  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  4163   00183C  6E18               	movwf	lcd_4_bit_initialize@ret^0,c
  4164                           
  4165                           ;ECU_Layer/LCD/ecu_LCD.c: 27:      ret = gpio_pin_intialize(&(lcd->lcd_en));
  4166   00183E  0E01               	movlw	1
  4167   001840  2413               	addwf	lcd_4_bit_initialize@lcd^0,w,c
  4168   001842  6E0B               	movwf	gpio_pin_intialize@pin_config^0,c
  4169   001844  0E00               	movlw	0
  4170   001846  2014               	addwfc	(lcd_4_bit_initialize@lcd+1)^0,w,c
  4171   001848  6E0C               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  4172   00184A  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  4173   00184E  6E18               	movwf	lcd_4_bit_initialize@ret^0,c
  4174   001850                     
  4175                           ;ECU_Layer/LCD/ecu_LCD.c: 28:      for(l_data_counter = 0; l_data_counter <4; l_data_cou
      +                          nter++){
  4176   001850  0E00               	movlw	0
  4177   001852  6E17               	movwf	lcd_4_bit_initialize@l_data_counter^0,c
  4178   001854                     l2858:
  4179   001854  5017               	movf	lcd_4_bit_initialize@l_data_counter^0,w,c
  4180   001856  2413               	addwf	lcd_4_bit_initialize@lcd^0,w,c
  4181   001858  6E15               	movwf	??_lcd_4_bit_initialize^0,c
  4182   00185A  0E00               	movlw	0
  4183   00185C  2014               	addwfc	(lcd_4_bit_initialize@lcd+1)^0,w,c
  4184   00185E  6E16               	movwf	(??_lcd_4_bit_initialize+1)^0,c
  4185   001860  0E02               	movlw	2
  4186   001862  2415               	addwf	??_lcd_4_bit_initialize^0,w,c
  4187   001864  6E0B               	movwf	gpio_pin_intialize@pin_config^0,c
  4188   001866  0E00               	movlw	0
  4189   001868  2016               	addwfc	(??_lcd_4_bit_initialize+1)^0,w,c
  4190   00186A  6E0C               	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  4191   00186C  EC39  F011         	call	_gpio_pin_intialize	;wreg free
  4192   001870                     
  4193                           ;ECU_Layer/LCD/ecu_LCD.c: 30:      }
  4194   001870  2A17               	incf	lcd_4_bit_initialize@l_data_counter^0,f,c
  4195   001872  0E03               	movlw	3
  4196   001874  6417               	cpfsgt	lcd_4_bit_initialize@l_data_counter^0,c
  4197   001876  EF3F  F00C         	goto	u1971
  4198   00187A  EF41  F00C         	goto	u1970
  4199   00187E                     u1971:
  4200   00187E  EF2A  F00C         	goto	l2858
  4201   001882                     u1970:
  4202   001882                     
  4203                           ;ECU_Layer/LCD/ecu_LCD.c: 31:      _delay((unsigned long)((20)*(8000000UL/4000.0)));
  4204   001882  0E34               	movlw	52
  4205   001884  6E15               	movwf	??_lcd_4_bit_initialize^0,c
  4206   001886  0EF2               	movlw	242
  4207   001888                     u2887:
  4208   001888  2EE8               	decfsz	wreg,f,c
  4209   00188A  D7FE               	bra	u2887
  4210   00188C  2E15               	decfsz	??_lcd_4_bit_initialize^0,f,c
  4211   00188E  D7FC               	bra	u2887
  4212   001890  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4213   001894  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4214   001898  0E38               	movlw	56
  4215   00189A  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4216   00189C  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4217   0018A0                     
  4218                           ;ECU_Layer/LCD/ecu_LCD.c: 33:      _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4219   0018A0  0E0D               	movlw	13
  4220   0018A2  6E15               	movwf	??_lcd_4_bit_initialize^0,c
  4221   0018A4  0EFC               	movlw	252
  4222   0018A6                     u2897:
  4223   0018A6  2EE8               	decfsz	wreg,f,c
  4224   0018A8  D7FE               	bra	u2897
  4225   0018AA  2E15               	decfsz	??_lcd_4_bit_initialize^0,f,c
  4226   0018AC  D7FC               	bra	u2897
  4227   0018AE  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4228   0018B2  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4229   0018B6  0E38               	movlw	56
  4230   0018B8  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4231   0018BA  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4232   0018BE                     
  4233                           ;ECU_Layer/LCD/ecu_LCD.c: 35:      _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  4234   0018BE  0E64               	movlw	100
  4235   0018C0                     u2907:
  4236   0018C0  2EE8               	decfsz	wreg,f,c
  4237   0018C2  D7FE               	bra	u2907
  4238   0018C4  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4239   0018C8  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4240   0018CC  0E38               	movlw	56
  4241   0018CE  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4242   0018D0  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4243   0018D4  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4244   0018D8  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4245   0018DC  0E01               	movlw	1
  4246   0018DE  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4247   0018E0  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4248   0018E4  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4249   0018E8  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4250   0018EC  0E02               	movlw	2
  4251   0018EE  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4252   0018F0  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4253   0018F4  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4254   0018F8  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4255   0018FC  0E06               	movlw	6
  4256   0018FE  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4257   001900  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4258   001904  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4259   001908  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4260   00190C  0E0C               	movlw	12
  4261   00190E  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4262   001910  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4263   001914  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4264   001918  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4265   00191C  0E28               	movlw	40
  4266   00191E  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4267   001920  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4268   001924                     
  4269                           ;ECU_Layer/LCD/ecu_LCD.c: 42:      ret = lcd_4_bit_send_command(lcd,0x80);
  4270   001924  C013  F00F         	movff	lcd_4_bit_initialize@lcd,lcd_4_bit_send_command@lcd
  4271   001928  C014  F010         	movff	lcd_4_bit_initialize@lcd+1,lcd_4_bit_send_command@lcd+1
  4272   00192C  0E80               	movlw	128
  4273   00192E  6E11               	movwf	lcd_4_bit_send_command@command^0,c
  4274   001930  EC92  F010         	call	_lcd_4_bit_send_command	;wreg free
  4275   001934  6E18               	movwf	lcd_4_bit_initialize@ret^0,c
  4276   001936                     l2886:
  4277                           
  4278                           ;ECU_Layer/LCD/ecu_LCD.c: 45:  return ret;
  4279   001936  5018               	movf	lcd_4_bit_initialize@ret^0,w,c
  4280   001938  0012               	return		;funcret
  4281   00193A                     __end_of_lcd_4_bit_initialize:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _lcd_4_bit_send_command *****************
  4285 ;; Defined at:
  4286 ;;		line 53 in file "ECU_Layer/LCD/ecu_LCD.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  lcd             2   14[COMRAM] PTR const struct .
  4289 ;;		 -> lcd_4_bit_send_string_position@lcd(2), lcd_4_bit_send_string@lcd(2), lcd_4_bit_send_data_position@lcd(2), lcd_2(
      +10), 
  4290 ;;		 -> lcd_1(6), 
  4291 ;;  command         1   16[COMRAM] unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  ret             1   17[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        4 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 2
  4310 ;; This function calls:
  4311 ;;		_gpio_pin_write_logic
  4312 ;;		_lcd_4bit_send_enable_signal
  4313 ;;		_send_4bit_data
  4314 ;; This function is called by:
  4315 ;;		_lcd_4_bit_initialize
  4316 ;;		_lcd_4_bit_send_custom_char
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text28
  4321   002124                     __ptext28:
  4322                           	callstack 0
  4323   002124                     _lcd_4_bit_send_command:
  4324                           	callstack 27
  4325   002124                     
  4326                           ;ECU_Layer/LCD/ecu_LCD.c: 55:  if(lcd == ((void*)0)){
  4327   002124  500F               	movf	lcd_4_bit_send_command@lcd^0,w,c
  4328   002126  1010               	iorwf	(lcd_4_bit_send_command@lcd+1)^0,w,c
  4329   002128  A4D8               	btfss	status,2,c
  4330   00212A  EF99  F010         	goto	u1881
  4331   00212E  EF9B  F010         	goto	u1880
  4332   002132                     u1881:
  4333   002132  EF9F  F010         	goto	l2770
  4334   002136                     u1880:
  4335   002136                     
  4336                           ;ECU_Layer/LCD/ecu_LCD.c: 56:      ret = (Std_ReturnType)0x00;
  4337   002136  0E00               	movlw	0
  4338   002138  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4339                           
  4340                           ;ECU_Layer/LCD/ecu_LCD.c: 57:  }
  4341   00213A  EFC9  F010         	goto	l2772
  4342   00213E                     l2770:
  4343                           
  4344                           ;ECU_Layer/LCD/ecu_LCD.c: 59:    ret = gpio_pin_write_logic(&(lcd->lcd_rs), LOW);
  4345   00213E  C00F  F001         	movff	lcd_4_bit_send_command@lcd,gpio_pin_write_logic@pin_config
  4346   002142  C010  F002         	movff	lcd_4_bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  4347   002146  0E00               	movlw	0
  4348   002148  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4349   00214A  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4350   00214E  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4351                           
  4352                           ;ECU_Layer/LCD/ecu_LCD.c: 60:    ret = send_4bit_data(&(lcd),command<< 4);
  4353   002150  0E0F               	movlw	low lcd_4_bit_send_command@lcd
  4354   002152  6E0B               	movwf	send_4bit_data@lcd^0,c
  4355   002154  0E00               	movlw	high lcd_4_bit_send_command@lcd
  4356   002156  6E0C               	movwf	(send_4bit_data@lcd+1)^0,c
  4357   002158  3811               	swapf	lcd_4_bit_send_command@command^0,w,c
  4358   00215A  0BF0               	andlw	240
  4359   00215C  6E0D               	movwf	send_4bit_data@command^0,c
  4360   00215E  EC6F  F011         	call	_send_4bit_data	;wreg free
  4361   002162  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4362                           
  4363                           ;ECU_Layer/LCD/ecu_LCD.c: 61:    ret = lcd_4bit_send_enable_signal(&lcd);
  4364   002164  0E0F               	movlw	low lcd_4_bit_send_command@lcd
  4365   002166  6E0B               	movwf	lcd_4bit_send_enable_signal@lcd^0,c
  4366   002168  0E00               	movlw	high lcd_4_bit_send_command@lcd
  4367   00216A  6E0C               	movwf	(lcd_4bit_send_enable_signal@lcd+1)^0,c
  4368   00216C  EC7E  F012         	call	_lcd_4bit_send_enable_signal	;wreg free
  4369   002170  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4370                           
  4371                           ;ECU_Layer/LCD/ecu_LCD.c: 62:    ret = send_4bit_data(&(lcd),command);
  4372   002172  0E0F               	movlw	low lcd_4_bit_send_command@lcd
  4373   002174  6E0B               	movwf	send_4bit_data@lcd^0,c
  4374   002176  0E00               	movlw	high lcd_4_bit_send_command@lcd
  4375   002178  6E0C               	movwf	(send_4bit_data@lcd+1)^0,c
  4376   00217A  C011  F00D         	movff	lcd_4_bit_send_command@command,send_4bit_data@command
  4377   00217E  EC6F  F011         	call	_send_4bit_data	;wreg free
  4378   002182  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4379                           
  4380                           ;ECU_Layer/LCD/ecu_LCD.c: 63:    ret = lcd_4bit_send_enable_signal(&lcd);
  4381   002184  0E0F               	movlw	low lcd_4_bit_send_command@lcd
  4382   002186  6E0B               	movwf	lcd_4bit_send_enable_signal@lcd^0,c
  4383   002188  0E00               	movlw	high lcd_4_bit_send_command@lcd
  4384   00218A  6E0C               	movwf	(lcd_4bit_send_enable_signal@lcd+1)^0,c
  4385   00218C  EC7E  F012         	call	_lcd_4bit_send_enable_signal	;wreg free
  4386   002190  6E12               	movwf	lcd_4_bit_send_command@ret^0,c
  4387   002192                     l2772:
  4388                           
  4389                           ;ECU_Layer/LCD/ecu_LCD.c: 66:  return ret;
  4390   002192  5012               	movf	lcd_4_bit_send_command@ret^0,w,c
  4391   002194  0012               	return		;funcret
  4392   002196                     __end_of_lcd_4_bit_send_command:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _send_4bit_data *****************
  4396 ;; Defined at:
  4397 ;;		line 412 in file "ECU_Layer/LCD/ecu_LCD.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  lcd             2   10[COMRAM] PTR const struct .
  4400 ;;		 -> lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_send_command@lcd(2), 
  4401 ;;  command         1   12[COMRAM] unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  ret             1   13[COMRAM] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      unsigned char 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:        4 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 1
  4420 ;; This function calls:
  4421 ;;		_gpio_pin_write_logic
  4422 ;; This function is called by:
  4423 ;;		_lcd_4_bit_send_command
  4424 ;;		_lcd_4_bit_send_char_data
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text29
  4429   0022DE                     __ptext29:
  4430                           	callstack 0
  4431   0022DE                     _send_4bit_data:
  4432                           	callstack 26
  4433   0022DE  0E02               	movlw	2
  4434   0022E0  240B               	addwf	send_4bit_data@lcd^0,w,c
  4435   0022E2  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4436   0022E4  0E00               	movlw	0
  4437   0022E6  200C               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  4438   0022E8  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4439   0022EA  500D               	movf	send_4bit_data@command^0,w,c
  4440   0022EC  0B01               	andlw	1
  4441   0022EE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4442   0022F0  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4443   0022F4  0E03               	movlw	3
  4444   0022F6  240B               	addwf	send_4bit_data@lcd^0,w,c
  4445   0022F8  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4446   0022FA  0E00               	movlw	0
  4447   0022FC  200C               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  4448   0022FE  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4449   002300  500D               	movf	send_4bit_data@command^0,w,c
  4450   002302  240D               	addwf	send_4bit_data@command^0,w,c
  4451   002304  0B01               	andlw	1
  4452   002306  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4453   002308  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4454   00230C  0E04               	movlw	4
  4455   00230E  240B               	addwf	send_4bit_data@lcd^0,w,c
  4456   002310  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4457   002312  0E00               	movlw	0
  4458   002314  200C               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  4459   002316  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4460   002318  440D               	rlncf	send_4bit_data@command^0,w,c
  4461   00231A  46E8               	rlncf	wreg,f,c
  4462   00231C  0BFC               	andlw	252
  4463   00231E  0B01               	andlw	1
  4464   002320  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4465   002322  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4466   002326                     
  4467                           ;ECU_Layer/LCD/ecu_LCD.c: 418:  ret = gpio_pin_write_logic(&(lcd->lcd_data[3]), (command
      +                           << 3)& 0x01);
  4468   002326  0E05               	movlw	5
  4469   002328  240B               	addwf	send_4bit_data@lcd^0,w,c
  4470   00232A  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4471   00232C  0E00               	movlw	0
  4472   00232E  200C               	addwfc	(send_4bit_data@lcd+1)^0,w,c
  4473   002330  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4474   002332  380D               	swapf	send_4bit_data@command^0,w,c
  4475   002334  42E8               	rrncf	wreg,f,c
  4476   002336  0BF8               	andlw	248
  4477   002338  0B01               	andlw	1
  4478   00233A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4479   00233C  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4480   002340  6E0E               	movwf	send_4bit_data@ret^0,c
  4481                           
  4482                           ;ECU_Layer/LCD/ecu_LCD.c: 420:  return ret;
  4483   002342  500E               	movf	send_4bit_data@ret^0,w,c
  4484   002344  0012               	return		;funcret
  4485   002346                     __end_of_send_4bit_data:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4489 ;; Defined at:
  4490 ;;		line 427 in file "ECU_Layer/LCD/ecu_LCD.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  lcd             2   10[COMRAM] PTR const struct .
  4493 ;;		 -> lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_send_command@lcd(2), 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  ret             1   13[COMRAM] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      unsigned char 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 1
  4512 ;; This function calls:
  4513 ;;		_gpio_pin_write_logic
  4514 ;; This function is called by:
  4515 ;;		_lcd_4_bit_send_command
  4516 ;;		_lcd_4_bit_send_char_data
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text30
  4521   0024FC                     __ptext30:
  4522                           	callstack 0
  4523   0024FC                     _lcd_4bit_send_enable_signal:
  4524                           	callstack 26
  4525   0024FC  0E01               	movlw	1
  4526   0024FE  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4527   002500  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4528   002502  0E00               	movlw	0
  4529   002504  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4530   002506  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4531   002508  0E01               	movlw	1
  4532   00250A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4533   00250C  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4534   002510                     
  4535                           ;ECU_Layer/LCD/ecu_LCD.c: 430: _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4536   002510  0E82               	movlw	130
  4537   002512  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  4538   002514  0EDE               	movlw	222
  4539   002516                     u2917:
  4540   002516  2EE8               	decfsz	wreg,f,c
  4541   002518  D7FE               	bra	u2917
  4542   00251A  2E0D               	decfsz	??_lcd_4bit_send_enable_signal^0,f,c
  4543   00251C  D7FC               	bra	u2917
  4544   00251E                     
  4545                           ;ECU_Layer/LCD/ecu_LCD.c: 431:  ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  4546   00251E  0E01               	movlw	1
  4547   002520  240B               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  4548   002522  6E01               	movwf	gpio_pin_write_logic@pin_config^0,c
  4549   002524  0E00               	movlw	0
  4550   002526  200C               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  4551   002528  6E02               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  4552   00252A  0E00               	movlw	0
  4553   00252C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4554   00252E  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4555   002532  6E0E               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4556   002534                     
  4557                           ;ECU_Layer/LCD/ecu_LCD.c: 433:  return ret;
  4558   002534  500E               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4559   002536  0012               	return		;funcret
  4560   002538                     __end_of_lcd_4bit_send_enable_signal:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _gpio_pin_intialize *****************
  4564 ;; Defined at:
  4565 ;;		line 126 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  pin_config      2   10[COMRAM] PTR const struct .
  4568 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4569 ;;		 -> Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  ret             1   13[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        4 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 1
  4588 ;; This function calls:
  4589 ;;		_gpio_pin_direction_intialize
  4590 ;;		_gpio_pin_write_logic
  4591 ;; This function is called by:
  4592 ;;		_lcd_4_bit_initialize
  4593 ;;		_lcd_8_bit_initialize
  4594 ;;		_segment_initialize
  4595 ;;		_keypade_initialize
  4596 ;;		_led_initialize
  4597 ;;		_DC_Motor_Intialize
  4598 ;;		_Relay_Initialize
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text31
  4603   002272                     __ptext31:
  4604                           	callstack 0
  4605   002272                     _gpio_pin_intialize:
  4606                           	callstack 26
  4607   002272                     
  4608                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1
      +                          ){
  4609   002272  500B               	movf	gpio_pin_intialize@pin_config^0,w,c
  4610   002274  100C               	iorwf	(gpio_pin_intialize@pin_config+1)^0,w,c
  4611   002276  B4D8               	btfsc	status,2,c
  4612   002278  EF40  F011         	goto	u1831
  4613   00227C  EF42  F011         	goto	u1830
  4614   002280                     u1831:
  4615   002280  EF53  F011         	goto	l2730
  4616   002284                     u1830:
  4617   002284  C00B  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  4618   002288  C00C  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  4619   00228C  30DF               	rrcf	223,w,c
  4620   00228E  32E8               	rrcf	wreg,f,c
  4621   002290  32E8               	rrcf	wreg,f,c
  4622   002292  0B07               	andlw	7
  4623   002294  6E0D               	movwf	??_gpio_pin_intialize^0,c
  4624   002296  0E07               	movlw	7
  4625   002298  640D               	cpfsgt	??_gpio_pin_intialize^0,c
  4626   00229A  EF51  F011         	goto	u1841
  4627   00229E  EF53  F011         	goto	u1840
  4628   0022A2                     u1841:
  4629   0022A2  EF57  F011         	goto	l2732
  4630   0022A6                     u1840:
  4631   0022A6                     l2730:
  4632                           
  4633                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:      ret = (Std_ReturnType)0x00;
  4634   0022A6  0E00               	movlw	0
  4635   0022A8  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  4636                           
  4637                           ;MCAL_Layer/GPIO/hal_gpio.c: 130:  }
  4638   0022AA  EF6D  F011         	goto	l2734
  4639   0022AE                     l2732:
  4640                           
  4641                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:      ret = gpio_pin_direction_intialize(pin_config);
  4642   0022AE  C00B  F001         	movff	gpio_pin_intialize@pin_config,gpio_pin_direction_intialize@pin_config
  4643   0022B2  C00C  F002         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_direction_intialize@pin_config+1
  4644   0022B6  ECA0  F009         	call	_gpio_pin_direction_intialize	;wreg free
  4645   0022BA  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  4646                           
  4647                           ;MCAL_Layer/GPIO/hal_gpio.c: 133:      ret = gpio_pin_write_logic(pin_config, pin_config
      +                          ->logic);
  4648   0022BC  C00B  F001         	movff	gpio_pin_intialize@pin_config,gpio_pin_write_logic@pin_config
  4649   0022C0  C00C  F002         	movff	gpio_pin_intialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  4650   0022C4  C00B  FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  4651   0022C8  C00C  FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  4652   0022CC  0E00               	movlw	0
  4653   0022CE  BEDF               	btfsc	indf2,7,c
  4654   0022D0  0E01               	movlw	1
  4655   0022D2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4656   0022D4  EC42  F00A         	call	_gpio_pin_write_logic	;wreg free
  4657   0022D8  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  4658   0022DA                     l2734:
  4659                           
  4660                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:   return ret;
  4661   0022DA  500E               	movf	gpio_pin_intialize@ret^0,w,c
  4662   0022DC  0012               	return		;funcret
  4663   0022DE                     __end_of_gpio_pin_intialize:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _gpio_pin_write_logic *****************
  4667 ;; Defined at:
  4668 ;;		line 59 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  pin_config      2    0[COMRAM] PTR const struct .
  4671 ;;		 -> lcd_4_bit_send_command@lcd.lcd_data(8), lcd_4_bit_send_char_data@lcd.lcd_data(8), lcd_1.lcd_data(8), lcd_4_bit_s
      +end_data_position@lcd.lcd_data(8), 
  4672 ;;		 -> lcd_4_bit_send_string@lcd.lcd_data(8), lcd_4_bit_send_string_position@lcd.lcd_data(8), lcd_8_bit_send_command@lc
      +d(2), lcd_4_bit_send_string_position@lcd(2), 
  4673 ;;		 -> lcd_4_bit_send_string@lcd(2), lcd_4_bit_send_data_position@lcd(2), lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_se
      +nd_command@lcd(2), 
  4674 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4675 ;;		 -> Relay_Turn_OFF@pin_obj(1), Relay_Turn_ON@pin_obj(1), Relay_Initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  4676 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  4677 ;;  logic           1    2[COMRAM] enum E2968
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  ret             1    9[COMRAM] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:       10 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_gpio_pin_intialize
  4699 ;;		_lcd_4_bit_send_command
  4700 ;;		_lcd_4_bit_send_char_data
  4701 ;;		_lcd_8_bit_send_command
  4702 ;;		_lcd_8_bit_send_char_data
  4703 ;;		_send_4bit_data
  4704 ;;		_lcd_4bit_send_enable_signal
  4705 ;;		_lcd_8bit_send_enable_signal
  4706 ;;		_segment_write_data
  4707 ;;		_keypade_get_value
  4708 ;;		_led_turn_on
  4709 ;;		_led_turn_off
  4710 ;;		_DC_Motor_Move_Right
  4711 ;;		_DC_Motor_Move_Left
  4712 ;;		_DC_Motor_Stop
  4713 ;;		_Relay_Turn_ON
  4714 ;;		_Relay_Turn_OFF
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text32
  4719   001484                     __ptext32:
  4720                           	callstack 0
  4721   001484                     _gpio_pin_write_logic:
  4722                           	callstack 25
  4723   001484                     
  4724                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4725   001484  0E01               	movlw	1
  4726   001486  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  4727   001488                     
  4728                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:       if(pin_config == ((void*)0) || logic == ((void*)0
      +                          ) || pin_config->pin > 8 -1){
  4729   001488  5001               	movf	gpio_pin_write_logic@pin_config^0,w,c
  4730   00148A  1002               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  4731   00148C  B4D8               	btfsc	status,2,c
  4732   00148E  EF4B  F00A         	goto	u1471
  4733   001492  EF4D  F00A         	goto	u1470
  4734   001496                     u1471:
  4735   001496  EF66  F00A         	goto	l2498
  4736   00149A                     u1470:
  4737   00149A  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  4738   00149C  B4D8               	btfsc	status,2,c
  4739   00149E  EF53  F00A         	goto	u1481
  4740   0014A2  EF55  F00A         	goto	u1480
  4741   0014A6                     u1481:
  4742   0014A6  EF66  F00A         	goto	l2498
  4743   0014AA                     u1480:
  4744   0014AA  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4745   0014AE  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4746   0014B2  30DF               	rrcf	223,w,c
  4747   0014B4  32E8               	rrcf	wreg,f,c
  4748   0014B6  32E8               	rrcf	wreg,f,c
  4749   0014B8  0B07               	andlw	7
  4750   0014BA  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4751   0014BC  0E07               	movlw	7
  4752   0014BE  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  4753   0014C0  EF64  F00A         	goto	u1491
  4754   0014C4  EF66  F00A         	goto	u1490
  4755   0014C8                     u1491:
  4756   0014C8  EFC9  F00A         	goto	l2506
  4757   0014CC                     u1490:
  4758   0014CC                     l2498:
  4759                           
  4760                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:      ret = (Std_ReturnType)0x00;
  4761   0014CC  0E00               	movlw	0
  4762   0014CE  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  4763                           
  4764                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:  }
  4765   0014D0  EFDE  F00A         	goto	l2508
  4766   0014D4                     l2500:
  4767                           
  4768                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:            (*lat_registers[pin_config->port] &= ~(1<<pi
      +                          n_config->pin));
  4769   0014D4  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4770   0014D8  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4771   0014DC  30DF               	rrcf	223,w,c
  4772   0014DE  32E8               	rrcf	wreg,f,c
  4773   0014E0  32E8               	rrcf	wreg,f,c
  4774   0014E2  0B07               	andlw	7
  4775   0014E4  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4776   0014E6  0E01               	movlw	1
  4777   0014E8  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4778   0014EA  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4779   0014EC  EF7A  F00A         	goto	u1504
  4780   0014F0                     u1505:
  4781   0014F0  90D8               	bcf	status,0,c
  4782   0014F2  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4783   0014F4                     u1504:
  4784   0014F4  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4785   0014F6  EF78  F00A         	goto	u1505
  4786   0014FA  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4787   0014FC  0AFF               	xorlw	255
  4788   0014FE  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4789   001500  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4790   001504  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4791   001508  50DF               	movf	223,w,c
  4792   00150A  0B07               	andlw	7
  4793   00150C  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4794   00150E  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4795   001510  0D02               	mullw	2
  4796   001512  0E8A               	movlw	low _lat_registers
  4797   001514  24F3               	addwf	243,w,c
  4798   001516  6ED9               	movwf	fsr2l,c
  4799   001518  0E00               	movlw	high _lat_registers
  4800   00151A  20F4               	addwfc	prodh,w,c
  4801   00151C  6EDA               	movwf	fsr2h,c
  4802   00151E  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  4803   001522  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  4804   001526  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4805   00152A  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4806   00152E  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4807   001530  16DF               	andwf	indf2,f,c
  4808                           
  4809                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:            break;
  4810   001532  EFDE  F00A         	goto	l2508
  4811   001536                     l2502:
  4812                           
  4813                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:            (*lat_registers[pin_config->port] |= (1<<pin
      +                          _config->pin));
  4814   001536  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4815   00153A  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4816   00153E  30DF               	rrcf	223,w,c
  4817   001540  32E8               	rrcf	wreg,f,c
  4818   001542  32E8               	rrcf	wreg,f,c
  4819   001544  0B07               	andlw	7
  4820   001546  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4821   001548  0E01               	movlw	1
  4822   00154A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4823   00154C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4824   00154E  EFAB  F00A         	goto	u1514
  4825   001552                     u1515:
  4826   001552  90D8               	bcf	status,0,c
  4827   001554  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4828   001556                     u1514:
  4829   001556  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4830   001558  EFA9  F00A         	goto	u1515
  4831   00155C  C001  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  4832   001560  C002  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  4833   001564  50DF               	movf	223,w,c
  4834   001566  0B07               	andlw	7
  4835   001568  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4836   00156A  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4837   00156C  0D02               	mullw	2
  4838   00156E  0E8A               	movlw	low _lat_registers
  4839   001570  24F3               	addwf	243,w,c
  4840   001572  6ED9               	movwf	fsr2l,c
  4841   001574  0E00               	movlw	high _lat_registers
  4842   001576  20F4               	addwfc	prodh,w,c
  4843   001578  6EDA               	movwf	fsr2h,c
  4844   00157A  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  4845   00157E  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  4846   001582  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4847   001586  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4848   00158A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4849   00158C  12DF               	iorwf	indf2,f,c
  4850                           
  4851                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:            break;
  4852   00158E  EFDE  F00A         	goto	l2508
  4853   001592                     l2506:
  4854   001592  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  4855   001594  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4856   001596  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4857                           
  4858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4859                           ; Switch size 1, requested type "simple"
  4860                           ; Number of cases is 1, Range of values is 0 to 0
  4861                           ; switch strategies available:
  4862                           ; Name         Instructions Cycles
  4863                           ; simple_byte            4     3 (average)
  4864                           ;	Chosen strategy is simple_byte
  4865   001598  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4866   00159A  0A00               	xorlw	0	; case 0
  4867   00159C  B4D8               	btfsc	status,2,c
  4868   00159E  EFD3  F00A         	goto	l3734
  4869   0015A2  EF66  F00A         	goto	l2498
  4870   0015A6                     l3734:
  4871                           
  4872                           ; Switch size 1, requested type "simple"
  4873                           ; Number of cases is 2, Range of values is 0 to 1
  4874                           ; switch strategies available:
  4875                           ; Name         Instructions Cycles
  4876                           ; simple_byte            7     4 (average)
  4877                           ;	Chosen strategy is simple_byte
  4878   0015A6  5004               	movf	??_gpio_pin_write_logic^0,w,c
  4879   0015A8  0A00               	xorlw	0	; case 0
  4880   0015AA  B4D8               	btfsc	status,2,c
  4881   0015AC  EF6A  F00A         	goto	l2500
  4882   0015B0  0A01               	xorlw	1	; case 1
  4883   0015B2  B4D8               	btfsc	status,2,c
  4884   0015B4  EF9B  F00A         	goto	l2502
  4885   0015B8  EF66  F00A         	goto	l2498
  4886   0015BC                     l2508:
  4887                           
  4888                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     return ret;
  4889   0015BC  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  4890   0015BE  0012               	return		;funcret
  4891   0015C0                     __end_of_gpio_pin_write_logic:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _gpio_pin_direction_intialize *****************
  4895 ;; Defined at:
  4896 ;;		line 14 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  pin_config      2    0[COMRAM] PTR const struct .
  4899 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), lcd_1.lcd_data(4), lcd_1(6), 
  4900 ;;		 -> Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  ret             1    8[COMRAM] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      unsigned char 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;Total ram usage:        9 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_gpio_pin_intialize
  4922 ;;		_Button_Initialize
  4923 ;;		_keypade_initialize
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text33
  4928   001340                     __ptext33:
  4929                           	callstack 0
  4930   001340                     _gpio_pin_direction_intialize:
  4931                           	callstack 26
  4932   001340                     
  4933                           ;MCAL_Layer/GPIO/hal_gpio.c: 15:  Std_ReturnType ret = (Std_ReturnType)0x01;
  4934   001340  0E01               	movlw	1
  4935   001342  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  4936   001344                     
  4937                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1)
      +                          {
  4938   001344  5001               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  4939   001346  1002               	iorwf	(gpio_pin_direction_intialize@pin_config+1)^0,w,c
  4940   001348  B4D8               	btfsc	status,2,c
  4941   00134A  EFA9  F009         	goto	u1671
  4942   00134E  EFAB  F009         	goto	u1670
  4943   001352                     u1671:
  4944   001352  EFBC  F009         	goto	l2620
  4945   001356                     u1670:
  4946   001356  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  4947   00135A  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  4948   00135E  30DF               	rrcf	223,w,c
  4949   001360  32E8               	rrcf	wreg,f,c
  4950   001362  32E8               	rrcf	wreg,f,c
  4951   001364  0B07               	andlw	7
  4952   001366  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  4953   001368  0E07               	movlw	7
  4954   00136A  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  4955   00136C  EFBA  F009         	goto	u1681
  4956   001370  EFBC  F009         	goto	u1680
  4957   001374                     u1681:
  4958   001374  EF1F  F00A         	goto	l2628
  4959   001378                     u1680:
  4960   001378                     l2620:
  4961                           
  4962                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:      ret = (Std_ReturnType)0x00;
  4963   001378  0E00               	movlw	0
  4964   00137A  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  4965                           
  4966                           ;MCAL_Layer/GPIO/hal_gpio.c: 18:  }
  4967   00137C  EF40  F00A         	goto	l2630
  4968   001380                     l2622:
  4969                           
  4970                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:            (*tris_registers[pin_config->port] &= ~(1<<p
      +                          in_config->pin));
  4971   001380  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  4972   001384  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  4973   001388  30DF               	rrcf	223,w,c
  4974   00138A  32E8               	rrcf	wreg,f,c
  4975   00138C  32E8               	rrcf	wreg,f,c
  4976   00138E  0B07               	andlw	7
  4977   001390  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  4978   001392  0E01               	movlw	1
  4979   001394  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4980   001396  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  4981   001398  EFD0  F009         	goto	u1694
  4982   00139C                     u1695:
  4983   00139C  90D8               	bcf	status,0,c
  4984   00139E  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4985   0013A0                     u1694:
  4986   0013A0  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4987   0013A2  EFCE  F009         	goto	u1695
  4988   0013A6  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4989   0013A8  0AFF               	xorlw	255
  4990   0013AA  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4991   0013AC  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  4992   0013B0  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  4993   0013B4  50DF               	movf	223,w,c
  4994   0013B6  0B07               	andlw	7
  4995   0013B8  6E06               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  4996   0013BA  5006               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  4997   0013BC  0D02               	mullw	2
  4998   0013BE  0E94               	movlw	low _tris_registers
  4999   0013C0  24F3               	addwf	243,w,c
  5000   0013C2  6ED9               	movwf	fsr2l,c
  5001   0013C4  0E00               	movlw	high _tris_registers
  5002   0013C6  20F4               	addwfc	prodh,w,c
  5003   0013C8  6EDA               	movwf	fsr2h,c
  5004   0013CA  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5005   0013CE  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5006   0013D2  C007  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5007   0013D6  C008  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5008   0013DA  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5009   0013DC  16DF               	andwf	indf2,f,c
  5010                           
  5011                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:            break;
  5012   0013DE  EF40  F00A         	goto	l2630
  5013   0013E2                     l2624:
  5014                           
  5015                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:            (*tris_registers[pin_config->port] |= (1<<pi
      +                          n_config->pin));
  5016   0013E2  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  5017   0013E6  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  5018   0013EA  30DF               	rrcf	223,w,c
  5019   0013EC  32E8               	rrcf	wreg,f,c
  5020   0013EE  32E8               	rrcf	wreg,f,c
  5021   0013F0  0B07               	andlw	7
  5022   0013F2  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5023   0013F4  0E01               	movlw	1
  5024   0013F6  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5025   0013F8  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  5026   0013FA  EF01  F00A         	goto	u1704
  5027   0013FE                     u1705:
  5028   0013FE  90D8               	bcf	status,0,c
  5029   001400  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5030   001402                     u1704:
  5031   001402  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5032   001404  EFFF  F009         	goto	u1705
  5033   001408  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  5034   00140C  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  5035   001410  50DF               	movf	223,w,c
  5036   001412  0B07               	andlw	7
  5037   001414  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5038   001416  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5039   001418  0D02               	mullw	2
  5040   00141A  0E94               	movlw	low _tris_registers
  5041   00141C  24F3               	addwf	243,w,c
  5042   00141E  6ED9               	movwf	fsr2l,c
  5043   001420  0E00               	movlw	high _tris_registers
  5044   001422  20F4               	addwfc	prodh,w,c
  5045   001424  6EDA               	movwf	fsr2h,c
  5046   001426  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5047   00142A  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5048   00142E  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5049   001432  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5050   001436  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5051   001438  12DF               	iorwf	indf2,f,c
  5052                           
  5053                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:            break;
  5054   00143A  EF40  F00A         	goto	l2630
  5055   00143E                     l2628:
  5056   00143E  C001  FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  5057   001442  C002  FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  5058   001446  BCDF               	btfsc	indf2,6,c
  5059   001448  EF28  F00A         	goto	u1711
  5060   00144C  EF2B  F00A         	goto	u1710
  5061   001450                     u1711:
  5062   001450  0E01               	movlw	1
  5063   001452  EF2C  F00A         	goto	u1720
  5064   001456                     u1710:
  5065   001456  0E00               	movlw	0
  5066   001458                     u1720:
  5067   001458  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5068   00145A  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5069                           
  5070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5071                           ; Switch size 1, requested type "simple"
  5072                           ; Number of cases is 1, Range of values is 0 to 0
  5073                           ; switch strategies available:
  5074                           ; Name         Instructions Cycles
  5075                           ; simple_byte            4     3 (average)
  5076                           ;	Chosen strategy is simple_byte
  5077   00145C  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5078   00145E  0A00               	xorlw	0	; case 0
  5079   001460  B4D8               	btfsc	status,2,c
  5080   001462  EF35  F00A         	goto	l3736
  5081   001466  EFBC  F009         	goto	l2620
  5082   00146A                     l3736:
  5083                           
  5084                           ; Switch size 1, requested type "simple"
  5085                           ; Number of cases is 2, Range of values is 0 to 1
  5086                           ; switch strategies available:
  5087                           ; Name         Instructions Cycles
  5088                           ; simple_byte            7     4 (average)
  5089                           ;	Chosen strategy is simple_byte
  5090   00146A  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  5091   00146C  0A00               	xorlw	0	; case 0
  5092   00146E  B4D8               	btfsc	status,2,c
  5093   001470  EFC0  F009         	goto	l2622
  5094   001474  0A01               	xorlw	1	; case 1
  5095   001476  B4D8               	btfsc	status,2,c
  5096   001478  EFF1  F009         	goto	l2624
  5097   00147C  EFBC  F009         	goto	l2620
  5098   001480                     l2630:
  5099                           
  5100                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:       return ret;
  5101   001480  5009               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5102   001482  0012               	return		;funcret
  5103   001484                     __end_of_gpio_pin_direction_intialize:
  5104                           	callstack 0
  5105                           
  5106                           	psect	rparam
  5107   000000                     
  5108                           	psect	config
  5109                           
  5110                           ; Padding undefined space
  5111   300000                     	org	3145728
  5112   300000  FF                 	db	255
  5113                           
  5114                           ;Config register CONFIG1H @ 0x300001
  5115                           ;	Oscillator Selection bits
  5116                           ;	OSC = HS, HS oscillator
  5117                           ;	Fail-Safe Clock Monitor Enable bit
  5118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5119                           ;	Internal/External Oscillator Switchover bit
  5120                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5121   300001                     	org	3145729
  5122   300001  02                 	db	2
  5123                           
  5124                           ;Config register CONFIG2L @ 0x300002
  5125                           ;	Power-up Timer Enable bit
  5126                           ;	PWRT = OFF, PWRT disabled
  5127                           ;	Brown-out Reset Enable bits
  5128                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5129                           ;	Brown Out Reset Voltage bits
  5130                           ;	BORV = 3, Minimum setting
  5131   300002                     	org	3145730
  5132   300002  1F                 	db	31
  5133                           
  5134                           ;Config register CONFIG2H @ 0x300003
  5135                           ;	Watchdog Timer Enable bit
  5136                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5137                           ;	Watchdog Timer Postscale Select bits
  5138                           ;	WDTPS = 32768, 1:32768
  5139   300003                     	org	3145731
  5140   300003  1E                 	db	30
  5141                           
  5142                           ; Padding undefined space
  5143   300004                     	org	3145732
  5144   300004  FF                 	db	255
  5145                           
  5146                           ;Config register CONFIG3H @ 0x300005
  5147                           ;	CCP2 MUX bit
  5148                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5149                           ;	PORTB A/D Enable bit
  5150                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5151                           ;	Low-Power Timer1 Oscillator Enable bit
  5152                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5153                           ;	MCLR Pin Enable bit
  5154                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5155   300005                     	org	3145733
  5156   300005  81                 	db	129
  5157                           
  5158                           ;Config register CONFIG4L @ 0x300006
  5159                           ;	Stack Full/Underflow Reset Enable bit
  5160                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5161                           ;	Single-Supply ICSP Enable bit
  5162                           ;	LVP = OFF, Single-Supply ICSP disabled
  5163                           ;	Extended Instruction Set Enable bit
  5164                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5165                           ;	Background Debugger Enable bit
  5166                           ;	DEBUG = 0x1, unprogrammed default
  5167   300006                     	org	3145734
  5168   300006  81                 	db	129
  5169                           
  5170                           ; Padding undefined space
  5171   300007                     	org	3145735
  5172   300007  FF                 	db	255
  5173                           
  5174                           ;Config register CONFIG5L @ 0x300008
  5175                           ;	Code Protection bit
  5176                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5177                           ;	Code Protection bit
  5178                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5179                           ;	Code Protection bit
  5180                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5181                           ;	Code Protection bit
  5182                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5183   300008                     	org	3145736
  5184   300008  0F                 	db	15
  5185                           
  5186                           ;Config register CONFIG5H @ 0x300009
  5187                           ;	Boot Block Code Protection bit
  5188                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5189                           ;	Data EEPROM Code Protection bit
  5190                           ;	CPD = OFF, Data EEPROM not code-protected
  5191   300009                     	org	3145737
  5192   300009  C0                 	db	192
  5193                           
  5194                           ;Config register CONFIG6L @ 0x30000A
  5195                           ;	Write Protection bit
  5196                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5197                           ;	Write Protection bit
  5198                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5199                           ;	Write Protection bit
  5200                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5201                           ;	Write Protection bit
  5202                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5203   30000A                     	org	3145738
  5204   30000A  0F                 	db	15
  5205                           
  5206                           ;Config register CONFIG6H @ 0x30000B
  5207                           ;	Configuration Register Write Protection bit
  5208                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5209                           ;	Boot Block Write Protection bit
  5210                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5211                           ;	Data EEPROM Write Protection bit
  5212                           ;	WRTD = OFF, Data EEPROM not write-protected
  5213   30000B                     	org	3145739
  5214   30000B  E0                 	db	224
  5215                           
  5216                           ;Config register CONFIG7L @ 0x30000C
  5217                           ;	Table Read Protection bit
  5218                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5219                           ;	Table Read Protection bit
  5220                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5221                           ;	Table Read Protection bit
  5222                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5223                           ;	Table Read Protection bit
  5224                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5225   30000C                     	org	3145740
  5226   30000C  0F                 	db	15
  5227                           
  5228                           ;Config register CONFIG7H @ 0x30000D
  5229                           ;	Boot Block Table Read Protection bit
  5230                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5231   30000D                     	org	3145741
  5232   30000D  40                 	db	64
  5233                           tosu	equ	0xFFF
  5234                           tosh	equ	0xFFE
  5235                           tosl	equ	0xFFD
  5236                           stkptr	equ	0xFFC
  5237                           pclatu	equ	0xFFB
  5238                           pclath	equ	0xFFA
  5239                           pcl	equ	0xFF9
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           indf0	equ	0xFEF
  5247                           postinc0	equ	0xFEE
  5248                           postdec0	equ	0xFED
  5249                           preinc0	equ	0xFEC
  5250                           plusw0	equ	0xFEB
  5251                           fsr0h	equ	0xFEA
  5252                           fsr0l	equ	0xFE9
  5253                           wreg	equ	0xFE8
  5254                           indf1	equ	0xFE7
  5255                           postinc1	equ	0xFE6
  5256                           postdec1	equ	0xFE5
  5257                           preinc1	equ	0xFE4
  5258                           plusw1	equ	0xFE3
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           bsr	equ	0xFE0
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           preinc2	equ	0xFDC
  5266                           plusw2	equ	0xFDB
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        110
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    109     127
    BANK0           128      0      88
    BANK1           256      0      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1372$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> main@lcd_text(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1319$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1319$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 4
		 -> main@lcd_text(COMRAM[4]), 

    memset@s	PTR unsigned char  size(2) Largest target is 4
		 -> main@lcd_text(COMRAM[4]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 2
		 -> lcd_4_bit_send_string_position@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_8_bit_send_command@lcd(COMRAM[2]), lcd_2(BANK0[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 2
		 -> lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), 

    send_4bit_data@lcd	PTR const struct . size(2) Largest target is 2
		 -> lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), 

    sp__memset	PTR void  size(2) Largest target is 4
		 -> main@lcd_text(COMRAM[4]), 

    convert_uint_8_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> main@lcd_text(COMRAM[4]), 

    lcd_8_bit_send_custom_char@chr	PTR const unsigned char  size(2) Largest target is 8
		 -> main@custom_1(COMRAM[8]), 

    lcd_8_bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8_bit_send_string_position@str	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lcd_8_bit_send_string_position@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8_bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8_bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_string_position@lcd(COMRAM[2]), lcd_4_bit_send_string@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), lcd_2(BANK0[10]), 
		 -> lcd_1(COMRAM[6]), 

    lcd_8_bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_4_bit_send_custom_char@chr	PTR const unsigned char  size(2) Largest target is 8
		 -> main@custom_2(COMRAM[8]), 

    lcd_4_bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4_bit_send_string_position@str	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lcd_4_bit_send_string_position@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_string_position@lcd(COMRAM[2]), lcd_4_bit_send_string@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), lcd_2(BANK0[10]), 
		 -> lcd_1(COMRAM[6]), 

    lcd_4_bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_string_position@lcd(COMRAM[2]), lcd_4_bit_send_string@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), lcd_2(BANK0[10]), 
		 -> lcd_1(COMRAM[6]), 

    lcd_4_bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_string_position@lcd(COMRAM[2]), lcd_4_bit_send_string@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), lcd_2(BANK0[10]), 
		 -> lcd_1(COMRAM[6]), 

    lcd_4_bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    gpio_pin_intialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_command@lcd.lcd_data(COMRAM[8]), lcd_4_bit_send_char_data@lcd.lcd_data(COMRAM[8]), lcd_1.lcd_data(COMRAM[8]), lcd_4_bit_send_data_position@lcd.lcd_data(COMRAM[8]), 
		 -> lcd_4_bit_send_string@lcd.lcd_data(COMRAM[8]), lcd_4_bit_send_string_position@lcd.lcd_data(COMRAM[8]), lcd_8_bit_send_command@lcd(COMRAM[2]), lcd_4_bit_send_string_position@lcd(COMRAM[2]), 
		 -> lcd_4_bit_send_string@lcd(COMRAM[2]), lcd_4_bit_send_data_position@lcd(COMRAM[2]), lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), 
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> Relay_Turn_OFF@pin_obj(COMRAM[1]), Relay_Turn_ON@pin_obj(COMRAM[1]), Relay_Initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(BANK0[8]), lcd_2(BANK0[10]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    keypad_btn_values	PTR const unsigned char [4][4] size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint_8_string
    _lcd_8_bit_send_custom_char->_lcd_8_bit_send_string_position
    _lcd_8_bit_send_string_position->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8_bit_send_char_data
    _lcd_8_bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4_bit_send_custom_char->_lcd_4_bit_send_string_position
    _lcd_4_bit_send_string_position->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4_bit_send_char_data
    _lcd_4_bit_send_char_data->_lcd_4bit_send_enable_signal
    _lcd_4_bit_send_char_data->_send_4bit_data
    _convert_uint_8_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ECU_Layer_initialize->_lcd_8_bit_initialize
    _lcd_8_bit_initialize->_lcd_8_bit_send_command
    _lcd_8_bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4_bit_initialize->_lcd_4_bit_send_command
    _lcd_4_bit_send_command->_lcd_4bit_send_enable_signal
    _lcd_4_bit_send_command->_send_4bit_data
    _send_4bit_data->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0  209737
                                             86 COMRAM    23    23      0
             _application_initialize
              _convert_uint_8_string
         _lcd_4_bit_send_custom_char
     _lcd_4_bit_send_string_position
         _lcd_8_bit_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8_bit_send_custom_char                          11     4      7   49178
                                             37 COMRAM    11     4      7
           _lcd_8_bit_send_char_data
             _lcd_8_bit_send_command
     _lcd_8_bit_send_string_position
 ---------------------------------------------------------------------------------
 (2) _lcd_8_bit_send_string_position                       7     1      6   25061
                                             30 COMRAM     7     1      6
           _lcd_8_bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  7     3      4   12173
                                             23 COMRAM     7     3      4
           _lcd_8_bit_send_char_data
 ---------------------------------------------------------------------------------
 (4) _lcd_8_bit_send_char_data                             9     6      3   11491
                                             14 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4_bit_send_custom_char                          11     4      7   72458
                                             32 COMRAM    11     4      7
           _lcd_4_bit_send_char_data
             _lcd_4_bit_send_command
     _lcd_4_bit_send_string_position
 ---------------------------------------------------------------------------------
 (1) _lcd_4_bit_send_string_position                       7     1      6   36782
                                             25 COMRAM     7     1      6
           _lcd_4_bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   18031
                                             18 COMRAM     7     3      4
           _lcd_4_bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4_bit_send_char_data                             4     1      3   17349
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _send_4bit_data
 ---------------------------------------------------------------------------------
 (1) _convert_uint_8_string                                4     2      2    7442
                                             82 COMRAM     4     2      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    5851
                                             62 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   43734
               _ECU_Layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ECU_Layer_initialize                                 1     1      0   43734
               _lcd_4_bit_initialize
               _lcd_8_bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8_bit_initialize                                 6     4      2   19015
                                             23 COMRAM     6     4      2
                 _gpio_pin_intialize
             _lcd_8_bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8_bit_send_command                               9     6      3   11952
                                             14 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          4     2      2    5134
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4_bit_initialize                                 6     4      2   24716
                                             18 COMRAM     6     4      2
                 _gpio_pin_intialize
             _lcd_4_bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4_bit_send_command                               4     1      3   17653
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _send_4bit_data
 ---------------------------------------------------------------------------------
 (4) _send_4bit_data                                       4     1      3    5724
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          4     2      2    5286
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6596
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    4913
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ECU_Layer_initialize
       _lcd_4_bit_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_4_bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _send_4bit_data
             _gpio_pin_write_logic
       _lcd_8_bit_initialize
         _gpio_pin_intialize
         _lcd_8_bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _convert_uint_8_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _lcd_4_bit_send_custom_char
     _lcd_4_bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _send_4bit_data
     _lcd_4_bit_send_command
     _lcd_4_bit_send_string_position
       _lcd_4_bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4_bit_send_char_data
   _lcd_4_bit_send_string_position
   _lcd_8_bit_send_custom_char
     _lcd_8_bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8_bit_send_command
     _lcd_8_bit_send_string_position
       _lcd_8_bit_send_char_data
       _lcd_8bit_set_cursor
         _lcd_8_bit_send_char_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      30       7       18.8%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      58       5       68.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6D      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      39        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Nov 23 20:07:52 2023

         __end_of_lcd_8_bit_send_command 1E9E                             ___awdiv@sign 0006  
                         _send_4bit_data 22DE          lcd_4_bit_send_custom_char@colum 0026  
                                    l215 1482                                      l234 15BE  
                                    l410 1E9C                                      l403 1810  
                                    l317 25C4                                      l255 22DC  
                                    l167 25B8                                      l417 1E0C  
                                    l450 239E                                      l363 2194  
                                    l445 1F2A                                      l358 1938  
                                    l438 2202                                      l463 2344  
                                    l368 2122                                      l466 2536  
                                    l723 1AC6                                      l396 1FB8  
                                    l469 24FA                                      l389 2270  
                                    l479 1CD4                                      l736 1C2C  
                 _lcd_4_bit_send_command 2124                                      l489 1D7C  
                                    _abs 2480                                      _pad 2038  
    __end_of_lcd_4bit_send_enable_signal 2538              _lcd_4bit_send_enable_signal 24FC  
                           ___awmod@sign 0006                      led_initialize@F3048 0079  
                                    prod 0FF3                                      wreg 0FE8  
            __end_of_lcd_8bit_set_cursor 1CD6                    ?_lcd_4_bit_initialize 0013  
          __end_of_convert_uint_8_string 23A0                                     l1202 205A  
                                   l1211 107C                                     ?_abs 0007  
                                   l1213 1084                                     l1206 20B0  
                                   l1214 10CA                                     l1232 16E8  
                                   l3000 2216                                     l1225 11C8  
                                   l1242 24B6                                     l3010 226E  
                                   l3002 221E                                     l1180 243A  
                                   l3004 2238                                     l3020 21B0  
                                   l3100 1F28                                     l1245 24BE  
                                   l1238 23EE                                     l3006 2252  
                                   l3110 1F4A                                     l3022 21CA  
                                   l3014 2196                                     l1167 133E  
                                   l3032 11CA                                     l3008 2256  
                                   l3120 1F80                                     l3112 1F60  
                                   l3104 1F2C                                     l3024 21E4  
                                   l3016 2196                                     l1257 1A02  
                                   l1265 247E                                     l3050 12C8  
                                   l3042 122A                                     l3130 2348  
                                   l3122 1F82                                     l3106 1F30  
                                   l3026 21E8                                     l3018 21A8  
                                   l2500 14D4                                     l3060 1328  
                                   l3044 1282                                     l3036 11E8  
                                   l1268 25C6                                     l3140 239C  
                                   l3132 234C                                     l3124 1F92  
                                   l3108 1F42                                     l3028 2200  
                                   l2502 1536                                     l3062 132C  
                                   l3054 12E2                                     l3038 11F4  
                                   l3070 2410                                     l3134 235E  
                                   l3118 1F64                                     l3126 1FB6  
                                   l3056 1316                                     l3048 129C  
                                   l2520 1A16                                     l2600 2052  
                                   l3072 242C                                     l3064 23F0  
                                   l3136 2366                                     l3080 1EA2  
                                   l2506 1592                                     l3058 1322  
                                   l2530 1A3C                                     l2522 1A1E  
                                   l2610 2480                                     l2602 2066  
                                   l3066 2400                                     l3138 2382  
                                   l3082 1EB4                                     l2620 1378  
                                   l2508 15BC                                     l3076 25C0  
                                   l2540 1A74                                     l2532 1A44  
                                   l2524 1A22                                     l2516 1A04  
                                   l2612 249A                                     l2604 207A  
                                   l2700 10E2                                     l3068 2408  
                                   l3092 1ED6                                     l3084 1EBC  
                                   l2622 1380                                     l2630 1480  
                                   l2614 1340                                     l2550 1AA0  
                                   l2542 1A7A                                     l2534 1A56  
                                   l2526 1A30                                     l2518 1A08  
                                   l2470 194C                                     l2606 207E  
                                   l2710 1156                                     l2702 1114  
                                   l3094 1EF2                                     l3086 1ED2  
                                   l3078 1E9E                                     l2624 13E2  
                                   l2616 1344                                     l2640 22DE  
                                   l2544 1A90                                     l2536 1A5E  
                                   l2552 1AA6                                     l2528 1A38  
                                   l2560 1B7E                                     l2472 195E  
                                   l2608 209C                                     l2720 11A8  
                                   l2712 1168                                     l2704 111A  
                                   l3096 1EF4                                     l2618 1356  
                                   l2490 1484                                     l2730 22A6  
                                   l2650 24FC                                     l2642 22F4  
                                   l2554 1AB6                                     l2546 1A98  
                                   l2538 1A66                                     l2570 1BAA  
                                   l2562 1B82                                     l2474 1968  
                                   l2482 243C                                     l2714 1182  
                                   l2706 1120                                     l2802 1DB0  
                                   l2810 1E0A                                     l3098 1F04  
                                   l3530 1AC8                                     l2628 143E  
                                   l2492 1488                                     l2732 22AE  
                                   l2724 2272                                     l2652 24FC  
                                   l2644 230C                                     l2740 1E12  
                                   l2556 1ABE                                     l2548 1A9A  
                                   l2580 1BE2                                     l2572 1BB2  
                                   l2564 1B90                                     l2476 1986  
                                   l2468 193A                                     l2484 2448  
                                   l2716 1192                                     l2708 113C  
                                   l2820 1600                                     l2804 1DEA  
                                   l3540 1B14                                     l3532 1ACC  
                                   l2494 149A                                     l2734 22DA  
                                   l2726 2272                                     l2654 2510  
                                   l2646 2326                                     l2638 22DE  
                                   l2670 24F8                                     l2662 24C0  
                                   l2742 1E24                                     l2910 175A  
                                   l2590 1C1C                                     l2582 1BF8  
                                   l2574 1BC4                                     l2566 1B98  
                                   l2478 19BC                                     l2486 245A  
                                   l2718 1198                                     l2830 1694  
                                   l2822 1604                                     l2814 15C0  
                                   l2806 1DEC                                     l3542 1B34  
                                   l3534 1ADE                                     l2496 14AA  
                                   l2728 2284                                     l2656 251E  
                                   l2664 24C0                                     l2752 1E40  
                                   l2760 1E9A                                     l2744 1E2C  
                                   l2920 17AC                                     l2912 1768  
                                   l2904 172C                                     l2592 1C24  
                                   l2584 1C00                                     l2576 1BCC  
                                   l2568 1B9C                                     l2488 245E  
                                   l2680 1062                                     l2824 1614  
                                   l2816 15E6                                     l2808 1DFC  
                                   l3544 1B42                                     l3536 1AF0  
                                   l2498 14CC                                     l2658 2534  
                                   l2770 213E                                     l2850 1830  
                                   l2666 24D4                                     l2754 1E7A  
                                   l2746 1E3C                                     l2738 1E0E  
                                   l2930 17FC                                     l2922 17BC  
                                   l2914 1778                                     l2906 1748  
                                   l2586 1C06                                     l2578 1BD4  
                                   l2690 10B2                                     l2682 1070  
                                   l2674 1036                                     l2834 16AC  
                                   l2826 1632                                     l2818 15F4  
                                   l3730 1CAC                                     l3546 1B5E  
                                   l3538 1AF4                                     l2772 2192  
                                   l2764 2124                                     l2860 1870  
                                   l2852 1850                                     l2844 1812  
                                   l2668 24E2                                     l2756 1E7C  
                                   l2924 17CC                                     l2916 1796  
                                   l2908 174A                                     l2932 180E  
                                   l2588 1C0C                                     l2596 2038  
                                   l2692 10BE                                     l2684 108C  
                                   l2676 104A                                     l2828 1650  
                                   l2780 20C4                                     l3732 1D54  
                                   l2940 1CE0                                     l3548 1B74  
                                   l3734 15A6                                     l2766 2124  
                                   l2870 18BE                                     l2862 1872  
                                   l2846 1816                                     l2758 1E8C  
                                   l2926 17DC                                     l2918 179C  
                                   l2598 2046                                     l2694 10C6  
                                   l2686 109C                                     l2678 105A  
                                   l2838 16BE                                     l2782 20CC  
                                   l2942 1CF8                                     l2950 1D7A  
                                   l2790 1D82                                     ?_pad 0011  
                                   l3736 146A                                     l2768 2136  
                                   l2880 1904                                     l2872 18C4  
                                   l2864 1882                                     l2848 1828  
                                   l2928 17EC                                     l2696 10D2  
                                   l2688 10A2                                     l2784 2120  
                                   l2776 20B2                                     l2944 1D10  
                                   l2936 1CD6                                     l2792 1D94  
                                   l2960 1C32                                     l2882 1914  
                                   l2874 18D4                                     l2866 1890  
                                   l2858 1854                                     l2890 16EA  
                                   l2698 10DC                                     l2778 20B2  
                                   l2946 1D28                                     l2938 1CDA  
                                   l2794 1D9C                                     l2962 1C38  
                                   l2970 1C98                                     l2884 1924  
                                   l2876 18E4                                     l2868 18A0  
                                   l2892 16EE                                     l2980 23A0  
                                   l2948 1D40                                     l2796 1DAC  
                                   l2788 1D7E                                     l2964 1C50  
                                   l2972 1CD2                                     l2878 18F4  
                                   l2886 1936                                     l2894 1700  
                                   l2990 25A0                                     l2982 23AC  
                                   l2966 1C68                                     l2958 1C2E  
                                   l2896 1708                                     l2992 25A0  
                                   l2984 23C8                                     l2968 1C80  
                                   l2898 1728                                     l2994 25AC  
                                   l2986 23E6                                     l2996 2204  
                                   l2998 2204                                     STR_1 1011  
                                   STR_2 1001                                     STR_3 1024  
                                   STR_4 1032                                     STR_5 101B  
                                   STR_6 102C                                     STR_7 102F  
                                   u2000 23E6                                     u2001 23E2  
                                   u2010 2216                                     u2011 2212  
                                   u2020 226E                                     u2100 1EB4  
                                   u2021 226A                                     u2101 1EB0  
                                   u2030 21A8                                     u2110 1F04  
                                   u2031 21A4                                     u2111 1F00  
                                   u2120 1F42                                     u2040 2200  
                                   u2121 1F3E                                     u2041 21FC  
                                   u2050 11E4                                     u2130 1F92  
                                   u2051 11E0                                     u2131 1F8E  
                                   u2060 1226                                     u1420 194C  
                                   u2140 235E                                     u2061 1222  
                                   u1421 1948                                     u2141 235A  
                                   _LATA 0F89                                     u2070 1298  
                                   u1430 195E                                     _LATB 0F8A  
                                   u2071 1294                                     u1431 195A  
                                   _LATC 0F8B                                     u1504 14F4  
                                   u2080 12DE                                     u1520 1A16  
                                   u1600 1BC4                                     u1440 1986  
                                   _LATD 0F8C                                     u1505 14F0  
                                   u2081 12DA                                     u1521 1A12  
                                   u1601 1BC0                                     u1441 1982  
                                   _LATE 0F8D                                     u1514 1556  
                                   u2090 133E                                     u1530 1A30  
                                   u1610 1BE2                                     u1450 19BC  
                                   u1515 1552                                     u2091 133A  
                                   u1531 1A2C                                     u1611 1BDE  
                                   u1451 19B8                                     u1540 1A56  
                                   u1620 1BF8                                     u1460 247E  
                                   u1541 1A52                                     u1621 1BF4  
                                   u1461 247A                                     u1710 1456  
                                   u1470 149A                                     u1550 1A74  
                                   u1630 1C1C                                     u1711 1450  
                                   u1471 1496                                     u1551 1A70  
                                   u1631 1C18                                     u1720 1458  
                                   u1704 1402                                     u1480 14AA  
                                   u1560 1A90                                     u1640 2046  
                                   u1800 1168                                     u1705 13FE  
                                   u1481 14A6                                     u1561 1A8C  
                                   u1641 2042                                     u1801 1164  
                                   u1490 14CC                                     u1570 1AB6  
                                   u1650 209C                                     u1810 1182  
                                   u1730 1046                                     u1491 14C8  
                                   u1571 1AB2                                     u1651 2098  
                                   u1811 117E                                     u1731 1040  
                                   u1580 1B90                                     u1660 249A  
                                   u1820 1192                                     u1740 1048  
                                   u1900 1D94                                     u1581 1B8C  
                                   u1661 2496                                     u1821 118E  
                                   u1901 1D90                                     u1670 1356  
                                   u1830 2284                                     u1590 1BAA  
                                   u1750 105A                                     u1671 1352  
                                   u1831 2280                                     u1591 1BA6  
                                   u1751 1056                                     u2711 1AD6  
                                   u1680 1378                                     u1840 22A6  
                                   u1760 1070                                     u1920 1DFC  
                                   u1681 1374                                     u1841 22A2  
                                   u1761 106C                                     u1921 1DF8  
                                   u2721 1AE8                                     u1850 1E24  
                                   u1770 109C                                     u1930 15E6  
                                   u1914 1DDA                                     u1851 1E20  
                                   u1771 1098                                     u1931 15E2  
                                   u1915 1DD6                                     u1780 10B2  
                                   u1940 1632                                     u1781 10AE  
                                   u1941 162E                                     u1694 13A0  
                                   u1870 1E8C                                     u1790 1156  
                                   u1950 1650                                     u1695 139C  
                                   u1871 1E88                                     u1791 1152  
                                   u1951 164C                                     u1880 2136  
                                   u1960 1828                                     u1864 1E6A  
                                   u1881 2132                                     u1961 1824  
                                   u1865 1E66                                     u1970 1882  
                                   u1890 20C4                                     u2907 18C0  
                                   u1971 187E                                     u1891 20C0  
                                   u1980 1700                                     u2917 2516  
                                   u1981 16FC                                     u2837 1B68  
                                   u1990 175A                                     u2847 1760  
                                   u1991 1756                                     u2857 177E  
                                   u2867 1798                                     u2877 24DA  
                                   u2887 1888                                     u2897 18A6  
          ??_lcd_4bit_send_enable_signal 000D                                     abs@a 0007  
                                   _dbuf 00B8                                     _main 1AC8  
                                   _dtoa 1036                                     _prec 0070  
                                   pad@i 0018                                     pad@p 0015  
                                   fsr1h 0FE2                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   pad@w 001A                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
               _lcd_4_bit_send_char_data 20B2                             ___param_bank 0000  
           lcd_4_bit_send_char_data@data 0011         lcd_8_bit_send_custom_char@mm_pos 002C  
                 __end_of_send_4bit_data 2346                                    ??_abs 0009  
                   _gpio_pin_write_logic 1484                  lcd_4_bit_initialize@lcd 0013  
                                  ??_pad 0017                  lcd_4_bit_initialize@ret 0018  
                           main@lcd_text 0069                                    ?_main 0001  
                                  ?_dtoa 001C                 ??_application_initialize 001E  
                        __end_of___awdiv 1AC8                          __end_of___awmod 1C2E  
                        ___awdiv@divisor 0003                          ___awdiv@counter 0005  
                           vfpfcnvrt@fmt 002B                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                             main@custom_1 0059  
                           main@custom_2 0061                lcd_4bit_set_cursor@coulmn 0016  
                                  _lcd_1 007A                                    _lcd_2 00AE  
                                  _flags 0072                     _ECU_Layer_initialize 25A0  
          lcd_4_bit_send_custom_char@chr 0023                                    _fputc 193A  
          lcd_4_bit_send_custom_char@lcd 0021                                    _fputs 243C  
          lcd_4_bit_send_custom_char@ret 002A            lcd_8_bit_send_command@command 0011  
          lcd_4_bit_send_custom_char@row 0025                                    pad@fp 0011  
                                  _width 006E                                    _putch 25C6  
                                  dtoa@d 001E                                    dtoa@i 0026  
                                  dtoa@p 0022                                    dtoa@s 0028  
                                  dtoa@w 0024                                    tablat 0FF5  
           ??_lcd_8_bit_send_custom_char 002D                                    plusw1 0FE3  
                                  plusw2 0FDB                                    status 0FD8  
                        __end_of_sprintf 243C                          __initialization 1FBA  
                   _lcd_8_bit_initialize 16EA                             __end_of_main 1B7E  
                           __end_of_dtoa 11CA                    ?_gpio_pin_write_logic 0001  
                        ?_send_4bit_data 000B                   lcd_8bit_set_cursor@lcd 0018  
                 lcd_8bit_set_cursor@ret 001E                   lcd_8bit_set_cursor@row 001A  
                          _lat_registers 008A                                   ??_main 0057  
                                 ??_dtoa 0020                            __activetblptr 0003  
                       led_turn_on@F3053 0078                   ??_lcd_4_bit_initialize 0015  
            ?_lcd_8_bit_send_custom_char 0026                    ?_ECU_Layer_initialize 0001  
       __end_of_lcd_8_bit_send_char_data 1E0E                                   ?_fputc 0001  
                                 ?_fputs 000A                         ___awdiv@dividend 0001  
                                 ?_putch 0001                      Relay_Turn_OFF@F3052 0073  
               convert_uint_8_string@ret 0056                 convert_uint_8_string@str 0053  
              lcd_4_bit_send_command@lcd 000F                lcd_4_bit_send_command@ret 0012  
                  ?_lcd_8_bit_initialize 0018                             vfprintf@cfmt 003D  
                              ??___awdiv 0005                                ??___awmod 0005  
                                 _memset 11CA                                   clear_0 2020  
                                 clear_1 202C                         ___awdiv@quotient 0007  
                        ___awmod@divisor 0003                                   isa$std 0001  
                        ___awmod@counter 0005                                   pad@buf 0013  
            lcd_8_bit_send_char_data@lcd 000F              lcd_8_bit_send_char_data@ret 0016  
                                 dtoa@fp 001C                                   fputc@c 0001  
                                 fputs@c 000E                                   fputs@i 000F  
                           __pdataCOMRAM 007A                                   fputs@s 000A  
     __end_of_lcd_4_bit_send_custom_char 1FBA               _lcd_4_bit_send_custom_char 1F2C  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                                 putch@c 0001                         __end_of_vfprintf 23F0  
                              ??_sprintf 0045                               __accesstop 0080  
                __end_of__initialization 2032                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0004                           __pcstackCOMRAM 0001  
                           __pidataBANK0 2538                             __pidataBANK1 2570  
                          __end_of_fputc 1A04                            __end_of_fputs 2480  
                ?_lcd_4_bit_send_command 000F                            __end_of_putch 25C8  
                 ??_ECU_Layer_initialize 001E                                  ??_fputc 0005  
                                ??_fputs 000E               ??_lcd_4_bit_send_char_data 0012  
                                ??_putch 0001                               __pbssBANK0 00B8  
                 _application_initialize 25C0                   ??_lcd_8_bit_initialize 001A  
                  Relay_Initialize@F3042 0075           __end_of_lcd_4_bit_send_command 2196  
                      led_turn_off@F3058 0077                ?_lcd_8_bit_send_char_data 000F  
                        led_toggle@F3063 0076                                  ?_memset 0001  
    __end_of_lcd_8bit_send_enable_signal 24FC              _lcd_8bit_send_enable_signal 24C0  
          lcd_4_bit_send_command@command 0011                    _convert_uint_8_string 2346  
         lcd_8bit_send_enable_signal@lcd 000B           lcd_8bit_send_enable_signal@ret 000E  
                         _tris_registers 0094            ??_lcd_8bit_send_enable_signal 000D  
                       ??_send_4bit_data 000E                                  __Hparam 0000  
                                __Lparam 0000                                  ___awdiv 1A04  
                                ___awmod 1B7E                                ?_vfprintf 0037  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 22DE  
                                __pcinit 1FBA                                  __ramtop 1000  
                                __ptext0 1AC8                                  __ptext1 1E9E  
                                __ptext2 2196                                  __ptext3 1C2E  
                                __ptext4 1D7E                                  __ptext5 1F2C  
                                __ptext6 2204                                  __ptext7 1CD6  
                                __ptext8 20B2                                  __ptext9 2346  
                       ___awmod@dividend 0001         ??_lcd_8_bit_send_string_position 0025  
        ?_lcd_8_bit_send_string_position 001F             lcd_8_bit_send_char_data@data 0011  
                                _sprintf 23F0                     end_of_initialization 2032  
           ??_lcd_4_bit_send_custom_char 0028                                  fputc@fp 0003  
                                memset@c 0003                                  memset@k 0009  
                                memset@n 0005                                  memset@s 000B  
                                fputs@fp 000C                 ??_lcd_8_bit_send_command 0012  
                  gpio_pin_intialize@ret 000E                        __end_of_vfpfcnvrt 16EA  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 0031  
                             ??_vfprintf 003D     __end_of_gpio_pin_direction_intialize 1484  
           _gpio_pin_direction_intialize 1340              ?_lcd_4_bit_send_custom_char 0021  
       __end_of_lcd_4_bit_send_char_data 2124                   ?_convert_uint_8_string 0053  
             convert_uint_8_string@value 0055                      _lcd_4bit_set_cursor 1CD6  
        lcd_8_bit_send_custom_char@colum 002B              lcd_4_bit_send_char_data@lcd 000F  
            lcd_4_bit_send_char_data@ret 0012                              vfpfcnvrt@ap 002D  
                            vfpfcnvrt@cp 0035                              vfpfcnvrt@fp 0029  
                          __pidataCOMRAM 25BA                        send_4bit_data@lcd 000B  
                      send_4bit_data@ret 000E                           __end_of_memset 1340  
                    start_initialization 1FBA             ?_lcd_4bit_send_enable_signal 000B  
                   ?_lcd_4bit_set_cursor 0013                              __end_of_abs 24C0  
                            __end_of_pad 20B2            ?_gpio_pin_direction_intialize 0001  
                ?_application_initialize 0001                       Relay_Turn_ON@F3047 0074  
                            vfprintf@fmt 0039                              __pdataBANK0 0080  
                            __pdataBANK1 0100                                 ??_memset 0007  
                    _lcd_8bit_set_cursor 1C2E                               memset@dest 0001  
                        main@lcd_Counter 006D                              __pbssCOMRAM 006E  
                  ??_lcd_4bit_set_cursor 0017         lcd_4_bit_send_custom_char@mm_pos 0027  
     lcd_8_bit_initialize@l_data_counter 001C       lcd_4_bit_initialize@l_data_counter 0017  
         __end_of_application_initialize 25C6                     ?_lcd_8bit_set_cursor 0018  
         gpio_pin_write_logic@pin_config 0001          gpio_pin_direction_intialize@ret 0009  
                              _dtoa$1399 0020        lcd_4_bit_send_string_position@lcd 001A  
      lcd_4_bit_send_string_position@ret 0020        lcd_4_bit_send_string_position@row 001E  
      lcd_4_bit_send_string_position@str 001C                                 ?___awdiv 0001  
                               ?___awmod 0001                ?_lcd_4_bit_send_char_data 000F  
              gpio_pin_write_logic@logic 0003                   _lcd_8_bit_send_command 1E0E  
                            __smallconst 1000         ??_lcd_4_bit_send_string_position 0020  
        ?_lcd_4_bit_send_string_position 001A                                 ?_sprintf 003F  
                     _gpio_pin_intialize 2272                    ??_lcd_8bit_set_cursor 001C  
         ??_gpio_pin_direction_intialize 0003                      ?_gpio_pin_intialize 000B  
 __end_of_lcd_8_bit_send_string_position 2204           _lcd_8_bit_send_string_position 2196  
               _lcd_8_bit_send_char_data 1D7E                                main@F3191 00A6  
                              main@F3193 009E                        _keypad_btn_values 0100  
                lcd_8_bit_initialize@lcd 0018                  lcd_8_bit_initialize@ret 001D  
                              _vfpfcnvrt 15C0    lcd_8_bit_send_custom_char@lcd_Counter 0030  
  lcd_4_bit_send_custom_char@lcd_Counter 002B                     ??_gpio_pin_intialize 000D  
                ??_convert_uint_8_string 0055                lcd_8bit_set_cursor@coulmn 001B  
                gpio_pin_write_logic@ret 000A                                copy_data0 1FCE  
                              copy_data1 1FEE                                copy_data2 200E  
               ??_lcd_4_bit_send_command 0012                                 __Hrparam 0000  
           __end_of_lcd_4_bit_initialize 193A                               vfprintf@ap 003B  
                               __Lrparam 0000                               vfprintf@fp 0037  
                 lcd_4bit_set_cursor@lcd 0013                   lcd_4bit_set_cursor@ret 0019  
                             ?_vfpfcnvrt 0029                   lcd_4bit_set_cursor@row 0015  
                  send_4bit_data@command 000D                               sprintf@fmt 0041  
                               __ptext10 23F0                                 __ptext11 23A0  
                               __ptext20 1A04                                 __ptext12 15C0  
                               __ptext21 11CA                                 __ptext13 1036  
                               __ptext30 24FC                                 __ptext22 25C0  
                               __ptext14 2038                                 __ptext31 2272  
                               __ptext23 25A0                                 __ptext15 243C  
                               __ptext32 1484                                 __ptext24 16EA  
                               __ptext16 193A                                 __ptext33 1340  
                               __ptext25 1E0E                                 __ptext17 25C6  
                               __ptext26 24C0                                 __ptext18 2480  
                               __ptext27 1812                                 __ptext19 1B7E  
                               __ptext28 2124                                 __ptext29 22DE  
          lcd_8_bit_send_custom_char@chr 0028            lcd_8_bit_send_custom_char@lcd 0026  
          lcd_8_bit_send_custom_char@ret 002F            lcd_8_bit_send_custom_char@row 002A  
lcd_8_bit_send_command@l_command_counter 0017             gpio_pin_intialize@pin_config 000B  
    lcd_8_bit_send_string_position@colum 0024      lcd_4_bit_send_string_position@colum 001F  
              lcd_8_bit_send_command@lcd 000F                lcd_8_bit_send_command@ret 0016  
                               isa$xinst 0000                                 _vfprintf 23A0  
     __end_of_lcd_8_bit_send_custom_char 1F2C               _lcd_8_bit_send_custom_char 1E9E  
           __end_of_gpio_pin_write_logic 15C0             ?_lcd_8bit_send_enable_signal 000B  
                              sprintf@ap 0045           lcd_4bit_send_enable_signal@lcd 000B  
         lcd_4bit_send_enable_signal@ret 000E   gpio_pin_direction_intialize@pin_config 0001  
           __end_of_ECU_Layer_initialize 25BA                  ?_lcd_8_bit_send_command 000F  
                            ??_vfpfcnvrt 002F              __end_of_lcd_4bit_set_cursor 1D7E  
                               sprintf@f 0047                                 sprintf@s 003F  
                         _port_registers 0080        lcd_8_bit_send_string_position@lcd 001F  
           __end_of_lcd_8_bit_initialize 1812        lcd_8_bit_send_string_position@ret 0025  
      lcd_8_bit_send_string_position@row 0023        lcd_8_bit_send_string_position@str 0021  
                   _lcd_4_bit_initialize 1812               ??_lcd_8_bit_send_char_data 0012  
 lcd_8_bit_send_char_data@l_data_counter 0017   __end_of_lcd_4_bit_send_string_position 2272  
         _lcd_4_bit_send_string_position 2204  
